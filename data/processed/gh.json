{
  "title": "Great Hackers",
  "title_zh": "[待翻译] Great Hackers",
  "url": "https://www.paulgraham.com/gh.html",
  "filename": "gh.html",
  "date": "2021-05-05",
  "id": 18,
  "content": {
    "success": true,
    "paragraphs": [
      "Want to start a startup? Get funded by Y Combinator. July 2004(This essay is derived from a talk at Oscon 2004.) A few months ago I finished a new book, and in reviews I keep noticing words like \"provocative'' and \"controversial.'' To say nothing of \"idiotic.''I didn't mean to make the book controversial.",
      "I was trying to make it efficient. I didn't want to waste people's time telling them things they already knew. It's more efficient just to give them the diffs. But I suppose that's bound to yield an alarming book.EdisonsThere's no controversy about which idea is most controversial: the suggestion that variation in wealth might not be as big a problem as we think.I didn't say in the book that variation in wealth was in itself a good thing.",
      "I said in some situations it might be a sign of good things. A throbbing headache is not a good thing, but it can be a sign of a good thing-- for example, that you're recovering consciousness after being hit on the head.Variation in wealth can be a sign of variation in productivity.",
      "(In a society of one, they're identical.) And that is almost certainly a good thing: if your society has no variation in productivity, it's probably not because everyone is Thomas Edison. It's probably because you have no Thomas Edisons.In a low-tech society you don't see much variation in productivity.",
      "If you have a tribe of nomads collecting sticks for a fire, how much more productive is the best stick gatherer going to be than the worst? A factor of two? Whereas when you hand people a complex tool like a computer, the variation in what they can do with it is enormous.That's not a new idea.",
      "Fred Brooks wrote about it in 1974, and the study he quoted was published in 1968. But I think he underestimated the variation between programmers. He wrote about productivity in lines of code: the best programmers can solve a given problem in a tenth the time.",
      "But what if the problem isn't given? In programming, as in many fields, the hard part isn't solving problems, but deciding what problems to solve. Imagination is hard to measure, but in practice it dominates the kind of productivity that's measured in lines of code.Productivity varies in any field, but there are few in which it varies so much.",
      "The variation between programmers is so great that it becomes a difference in kind. I don't think this is something intrinsic to programming, though. In every field, technology magnifies differences in productivity.",
      "I think what's happening in programming is just that we have a lot of technological leverage. But in every field the lever is getting longer, so the variation we see is something that more and more fields will see as time goes on.",
      "And the success of companies, and countries, will depend increasingly on how they deal with it.If variation in productivity increases with technology, then the contribution of the most productive individuals will not only be disproportionately large, but will actually grow with time.",
      "When you reach the point where 90% of a group's output is created by 1% of its members, you lose big if something (whether Viking raids, or central planning) drags their productivity down to the average.If we want to get the most out of them, we need to understand these especially productive people.",
      "What motivates them? What do they need to do their jobs? How do you recognize them? How do you get them to come and work for you? And then of course there's the question, how do you become one?More than MoneyI know a handful of super-hackers, so I sat down and thought about what they have in common.",
      "Their defining quality is probably that they really love to program. Ordinary programmers write code to pay the bills. Great hackers think of it as something they do for fun, and which they're delighted to find people will pay them for.Great programmers are sometimes said to be indifferent to money.",
      "This isn't quite true. It is true that all they really care about is doing interesting work. But if you make enough money, you get to work on whatever you want, and for that reason hackers are attracted by the idea of making really large amounts of money.",
      "But as long as they still have to show up for work every day, they care more about what they do there than how much they get paid for it.Economically, this is a fact of the greatest importance, because it means you don't have to pay great hackers anything like what they're worth.",
      "A great programmer might be ten or a hundred times as productive as an ordinary one, but he'll consider himself lucky to get paid three times as much. As I'll explain later, this is partly because great hackers don't know how good they are.",
      "But it's also because money is not the main thing they want.What do hackers want? Like all craftsmen, hackers like good tools. In fact, that's an understatement. Good hackers find it unbearable to use bad tools.",
      "They'll simply refuse to work on projects with the wrong infrastructure.At a startup I once worked for, one of the things pinned up on our bulletin board was an ad from IBM. It was a picture of an AS400, and the headline read, I think, \"hackers despise it.'' [1]When you decide what infrastructure to use for a project, you're not just making a technical decision.",
      "You're also making a social decision, and this may be the more important of the two. For example, if your company wants to write some software, it might seem a prudent choice to write it in Java. But when you choose a language, you're also choosing a community.",
      "The programmers you'll be able to hire to work on a Java project won't be as smart as the ones you could get to work on a project written in Python. And the quality of your hackers probably matters more than the language you choose.",
      "Though, frankly, the fact that good hackers prefer Python to Java should tell you something about the relative merits of those languages.Business types prefer the most popular languages because they view languages as standards.",
      "They don't want to bet the company on Betamax. The thing about languages, though, is that they're not just standards. If you have to move bits over a network, by all means use TCP/IP. But a programming language isn't just a format.",
      "A programming language is a medium of expression.I've read that Java has just overtaken Cobol as the most popular language. As a standard, you couldn't wish for more. But as a medium of expression, you could do a lot better.",
      "Of all the great programmers I can think of, I know of only one who would voluntarily program in Java. And of all the great programmers I can think of who don't work for Sun, on Java, I know of zero.Great hackers also generally insist on using open source software.",
      "Not just because it's better, but because it gives them more control. Good hackers insist on control. This is part of what makes them good hackers: when something's broken, they need to fix it. You want them to feel this way about the software they're writing for you.",
      "You shouldn't be surprised when they feel the same way about the operating system.A couple years ago a venture capitalist friend told me about a new startup he was involved with. It sounded promising.",
      "But the next time I talked to him, he said they'd decided to build their software on Windows NT, and had just hired a very experienced NT developer to be their chief technical officer. When I heard this, I thought, these guys are doomed.",
      "One, the CTO couldn't be a first rate hacker, because to become an eminent NT developer he would have had to use NT voluntarily, multiple times, and I couldn't imagine a great hacker doing that; and two, even if he was good, he'd have a hard time hiring anyone good to work for him if the project had to be built on NT.",
      "[2]The Final FrontierAfter software, the most important tool to a hacker is probably his office. Big companies think the function of office space is to express rank. But hackers use their offices for more than that: they use their office as a place to think in.",
      "And if you're a technology company, their thoughts are your product. So making hackers work in a noisy, distracting environment is like having a paint factory where the air is full of soot.The cartoon strip Dilbert has a lot to say about cubicles, and with good reason.",
      "All the hackers I know despise them. The mere prospect of being interrupted is enough to prevent hackers from working on hard problems. If you want to get real work done in an office with cubicles, you have two options: work at home, or come in early or late or on a weekend, when no one else is there.",
      "Don't companies realize this is a sign that something is broken? An office environment is supposed to be something that helps you work, not something you work despite.Companies like Cisco are proud that everyone there has a cubicle, even the CEO.",
      "But they're not so advanced as they think; obviously they still view office space as a badge of rank. Note too that Cisco is famous for doing very little product development in house. They get new technology by buying the startups that created it-- where presumably the hackers did have somewhere quiet to work.One big company that understands what hackers need is Microsoft.",
      "I once saw a recruiting ad for Microsoft with a big picture of a door. Work for us, the premise was, and we'll give you a place to work where you can actually get work done. And you know, Microsoft is remarkable among big companies in that they are able to develop software in house.",
      "Not well, perhaps, but well enough.If companies want hackers to be productive, they should look at what they do at home. At home, hackers can arrange things themselves so they can get the most done. And when they work at home, hackers don't work in noisy, open spaces; they work in rooms with doors.",
      "They work in cosy, neighborhoody places with people around and somewhere to walk when they need to mull something over, instead of in glass boxes set in acres of parking lots. They have a sofa they can take a nap on when they feel tired, instead of sitting in a coma at their desk, pretending to work.",
      "There's no crew of people with vacuum cleaners that roars through every evening during the prime hacking hours. There are no meetings or, God forbid, corporate retreats or team-building exercises. And when you look at what they're doing on that computer, you'll find it reinforces what I said earlier about tools.",
      "They may have to use Java and Windows at work, but at home, where they can choose for themselves, you're more likely to find them using Perl and Linux.Indeed, these statistics about Cobol or Java being the most popular language can be misleading.",
      "What we ought to look at, if we want to know what tools are best, is what hackers choose when they can choose freely-- that is, in projects of their own. When you ask that question, you find that open source operating systems already have a dominant market share, and the number one language is probably Perl.InterestingAlong with good tools, hackers want interesting projects.",
      "What makes a project interesting? Well, obviously overtly sexy applications like stealth planes or special effects software would be interesting to work on. But any application can be interesting if it poses novel technical challenges.",
      "So it's hard to predict which problems hackers will like, because some become interesting only when the people working on them discover a new kind of solution. Before ITA (who wrote the software inside Orbitz), the people working on airline fare searches probably thought it was one of the most boring applications imaginable.",
      "But ITA made it interesting by redefining the problem in a more ambitious way.I think the same thing happened at Google. When Google was founded, the conventional wisdom among the so-called portals was that search was boring and unimportant.",
      "But the guys at Google didn't think search was boring, and that's why they do it so well.This is an area where managers can make a difference. Like a parent saying to a child, I bet you can't clean up your whole room in ten minutes, a good manager can sometimes redefine a problem as a more interesting one.",
      "Steve Jobs seems to be particularly good at this, in part simply by having high standards. There were a lot of small, inexpensive computers before the Mac. He redefined the problem as: make one that's beautiful.",
      "And that probably drove the developers harder than any carrot or stick could.They certainly delivered. When the Mac first appeared, you didn't even have to turn it on to know it would be good; you could tell from the case.",
      "A few weeks ago I was walking along the street in Cambridge, and in someone's trash I saw what appeared to be a Mac carrying case. I looked inside, and there was a Mac SE. I carried it home and plugged it in, and it booted.",
      "The happy Macintosh face, and then the finder. My God, it was so simple. It was just like ... Google.Hackers like to work for people with high standards. But it's not enough just to be exacting. You have to insist on the right things.",
      "Which usually means that you have to be a hacker yourself. I've seen occasional articles about how to manage programmers. Really there should be two articles: one about what to do if you are yourself a programmer, and one about what to do if you're not.",
      "And the second could probably be condensed into two words: give up.The problem is not so much the day to day management. Really good hackers are practically self-managing. The problem is, if you're not a hacker, you can't tell who the good hackers are.",
      "A similar problem explains why American cars are so ugly. I call it the design paradox. You might think that you could make your products beautiful just by hiring a great designer to design them. But if you yourself don't have good taste, how are you going to recognize a good designer?",
      "By definition you can't tell from his portfolio. And you can't go by the awards he's won or the jobs he's had, because in design, as in most fields, those tend to be driven by fashion and schmoozing, with actual ability a distant third.",
      "There's no way around it: you can't manage a process intended to produce beautiful things without knowing what beautiful is. American cars are ugly because American car companies are run by people with bad taste.Many people in this country think of taste as something elusive, or even frivolous.",
      "It is neither. To drive design, a manager must be the most demanding user of a company's products. And if you have really good taste, you can, as Steve Jobs does, make satisfying you the kind of problem that good people like to work on.Nasty Little ProblemsIt's pretty easy to say what kinds of problems are not interesting: those where instead of solving a few big, clear, problems, you have to solve a lot of nasty little ones.",
      "One of the worst kinds of projects is writing an interface to a piece of software that's full of bugs. Another is when you have to customize something for an individual client's complex and ill-defined needs.",
      "To hackers these kinds of projects are the death of a thousand cuts.The distinguishing feature of nasty little problems is that you don't learn anything from them. Writing a compiler is interesting because it teaches you what a compiler is.",
      "But writing an interface to a buggy piece of software doesn't teach you anything, because the bugs are random. [3] So it's not just fastidiousness that makes good hackers avoid nasty little problems.",
      "It's more a question of self-preservation. Working on nasty little problems makes you stupid. Good hackers avoid it for the same reason models avoid cheeseburgers.Of course some problems inherently have this character.",
      "And because of supply and demand, they pay especially well. So a company that found a way to get great hackers to work on tedious problems would be very successful. How would you do it?One place this happens is in startups.",
      "At our startup we had Robert Morris working as a system administrator. That's like having the Rolling Stones play at a bar mitzvah. You can't hire that kind of talent. But people will do any amount of drudgery for companies of which they're the founders.",
      "[4]Bigger companies solve the problem by partitioning the company. They get smart people to work for them by establishing a separate R&D department where employees don't have to work directly on customers' nasty little problems.",
      "[5] In this model, the research department functions like a mine. They produce new ideas; maybe the rest of the company will be able to use them.You may not have to go to this extreme. Bottom-up programming suggests another way to partition the company: have the smart people work as toolmakers.",
      "If your company makes software to do x, have one group that builds tools for writing software of that type, and another that uses these tools to write the applications. This way you might be able to get smart people to write 99% of your code, but still keep them almost as insulated from users as they would be in a traditional research department.",
      "The toolmakers would have users, but they'd only be the company's own developers. [6]If Microsoft used this approach, their software wouldn't be so full of security holes, because the less smart people writing the actual applications wouldn't be doing low-level stuff like allocating memory.",
      "Instead of writing Word directly in C, they'd be plugging together big Lego blocks of Word-language. (Duplo, I believe, is the technical term.)ClumpingAlong with interesting problems, what good hackers like is other good hackers.",
      "Great hackers tend to clump together-- sometimes spectacularly so, as at Xerox Parc. So you won't attract good hackers in linear proportion to how good an environment you create for them. The tendency to clump means it's more like the square of the environment.",
      "So it's winner take all. At any given time, there are only about ten or twenty places where hackers most want to work, and if you aren't one of them, you won't just have fewer great hackers, you'll have zero.Having great hackers is not, by itself, enough to make a company successful.",
      "It works well for Google and ITA, which are two of the hot spots right now, but it didn't help Thinking Machines or Xerox. Sun had a good run for a while, but their business model is a down elevator.",
      "In that situation, even the best hackers can't save you.I think, though, that all other things being equal, a company that can attract great hackers will have a huge advantage. There are people who would disagree with this.",
      "When we were making the rounds of venture capital firms in the 1990s, several told us that software companies didn't win by writing great software, but through brand, and dominating channels, and doing the right deals.They really seemed to believe this, and I think I know why.",
      "I think what a lot of VCs are looking for, at least unconsciously, is the next Microsoft. And of course if Microsoft is your model, you shouldn't be looking for companies that hope to win by writing great software.",
      "But VCs are mistaken to look for the next Microsoft, because no startup can be the next Microsoft unless some other company is prepared to bend over at just the right moment and be the next IBM.It's a mistake to use Microsoft as a model, because their whole culture derives from that one lucky break.",
      "Microsoft is a bad data point. If you throw them out, you find that good products do tend to win in the market. What VCs should be looking for is the next Apple, or the next Google.I think Bill Gates knows this.",
      "What worries him about Google is not the power of their brand, but the fact that they have better hackers. [7] RecognitionSo who are the great hackers? How do you know when you meet one? That turns out to be very hard.",
      "Even hackers can't tell. I'm pretty sure now that my friend Trevor Blackwell is a great hacker. You may have read on Slashdot how he made his own Segway. The remarkable thing about this project was that he wrote all the software in one day (in Python, incidentally).For Trevor, that's par for the course.",
      "But when I first met him, I thought he was a complete idiot. He was standing in Robert Morris's office babbling at him about something or other, and I remember standing behind him making frantic gestures at Robert to shoo this nut out of his office so we could go to lunch.",
      "Robert says he misjudged Trevor at first too. Apparently when Robert first met him, Trevor had just begun a new scheme that involved writing down everything about every aspect of his life on a stack of index cards, which he carried with him everywhere.",
      "He'd also just arrived from Canada, and had a strong Canadian accent and a mullet.The problem is compounded by the fact that hackers, despite their reputation for social obliviousness, sometimes put a good deal of effort into seeming smart.",
      "When I was in grad school I used to hang around the MIT AI Lab occasionally. It was kind of intimidating at first. Everyone there spoke so fast. But after a while I learned the trick of speaking fast.",
      "You don't have to think any faster; just use twice as many words to say everything. With this amount of noise in the signal, it's hard to tell good hackers when you meet them. I can't tell, even now.",
      "You also can't tell from their resumes. It seems like the only way to judge a hacker is to work with him on something.And this is the reason that high-tech areas only happen around universities. The active ingredient here is not so much the professors as the students.",
      "Startups grow up around universities because universities bring together promising young people and make them work on the same projects. The smart ones learn who the other smart ones are, and together they cook up new projects of their own.Because you can't tell a great hacker except by working with him, hackers themselves can't tell how good they are.",
      "This is true to a degree in most fields. I've found that people who are great at something are not so much convinced of their own greatness as mystified at why everyone else seems so incompetent. But it's particularly hard for hackers to know how good they are, because it's hard to compare their work.",
      "This is easier in most other fields. In the hundred meters, you know in 10 seconds who's fastest. Even in math there seems to be a general consensus about which problems are hard to solve, and what constitutes a good solution.",
      "But hacking is like writing. Who can say which of two novels is better? Certainly not the authors.With hackers, at least, other hackers can tell. That's because, unlike novelists, hackers collaborate on projects.",
      "When you get to hit a few difficult problems over the net at someone, you learn pretty quickly how hard they hit them back. But hackers can't watch themselves at work. So if you ask a great hacker how good he is, he's almost certain to reply, I don't know.",
      "He's not just being modest. He really doesn't know.And none of us know, except about people we've actually worked with. Which puts us in a weird situation: we don't know who our heroes should be. The hackers who become famous tend to become famous by random accidents of PR.",
      "Occasionally I need to give an example of a great hacker, and I never know who to use. The first names that come to mind always tend to be people I know personally, but it seems lame to use them. So, I think, maybe I should say Richard Stallman, or Linus Torvalds, or Alan Kay, or someone famous like that.",
      "But I have no idea if these guys are great hackers. I've never worked with them on anything.If there is a Michael Jordan of hacking, no one knows, including him.CultivationFinally, the question the hackers have all been wondering about: how do you become a great hacker?",
      "I don't know if it's possible to make yourself into one. But it's certainly possible to do things that make you stupid, and if you can make yourself stupid, you can probably make yourself smart too.The key to being a good hacker may be to work on what you like.",
      "When I think about the great hackers I know, one thing they have in common is the extreme difficulty of making them work on anything they don't want to. I don't know if this is cause or effect; it may be both.To do something well you have to love it.",
      "So to the extent you can preserve hacking as something you love, you're likely to do it well. Try to keep the sense of wonder you had about programming at age 14. If you're worried that your current job is rotting your brain, it probably is.The best hackers tend to be smart, of course, but that's true in a lot of fields.",
      "Is there some quality that's unique to hackers? I asked some friends, and the number one thing they mentioned was curiosity. I'd always supposed that all smart people were curious-- that curiosity was simply the first derivative of knowledge.",
      "But apparently hackers are particularly curious, especially about how things work. That makes sense, because programs are in effect giant descriptions of how things work.Several friends mentioned hackers' ability to concentrate-- their ability, as one put it, to \"tune out everything outside their own heads.'' I've certainly noticed this.",
      "And I've heard several hackers say that after drinking even half a beer they can't program at all. So maybe hacking does require some special ability to focus. Perhaps great hackers can load a large amount of context into their head, so that when they look at a line of code, they see not just that line but the whole program around it.",
      "John McPhee wrote that Bill Bradley's success as a basketball player was due partly to his extraordinary peripheral vision. \"Perfect'' eyesight means about 47 degrees of vertical peripheral vision. Bill Bradley had 70; he could see the basket when he was looking at the floor.",
      "Maybe great hackers have some similar inborn ability. (I cheat by using a very dense language, which shrinks the court.)This could explain the disconnect over cubicles. Maybe the people in charge of facilities, not having any concentration to shatter, have no idea that working in a cubicle feels to a hacker like having one's brain in a blender.",
      "(Whereas Bill, if the rumors of autism are true, knows all too well.)One difference I've noticed between great hackers and smart people in general is that hackers are more politically incorrect. To the extent there is a secret handshake among good hackers, it's when they know one another well enough to express opinions that would get them stoned to death by the general public.",
      "And I can see why political incorrectness would be a useful quality in programming. Programs are very complex and, at least in the hands of good programmers, very fluid. In such situations it's helpful to have a habit of questioning assumptions.Can you cultivate these qualities?",
      "I don't know. But you can at least not repress them. So here is my best shot at a recipe. If it is possible to make yourself into a great hacker, the way to do it may be to make the following deal with yourself: you never have to work on boring projects (unless your family will starve otherwise), and in return, you'll never allow yourself to do a half-assed job.",
      "All the great hackers I know seem to have made that deal, though perhaps none of them had any choice in the matter.Notes [1] In fairness, I have to say that IBM makes decent hardware. I wrote this on an IBM laptop.[2] They did turn out to be doomed.",
      "They shut down a few months later.[3] I think this is what people mean when they talk about the \"meaning of life.\" On the face of it, this seems an odd idea. Life isn't an expression; how could it have meaning?",
      "But it can have a quality that feels a lot like meaning. In a project like a compiler, you have to solve a lot of problems, but the problems all fall into a pattern, as in a signal. Whereas when the problems you have to solve are random, they seem like noise.",
      "[4] Einstein at one point worked designing refrigerators. (He had equity.)[5] It's hard to say exactly what constitutes research in the computer world, but as a first approximation, it's software that doesn't have users.I don't think it's publication that makes the best hackers want to work in research departments.",
      "I think it's mainly not having to have a three hour meeting with a product manager about problems integrating the Korean version of Word 13.27 with the talking paperclip.[6] Something similar has been happening for a long time in the construction industry.",
      "When you had a house built a couple hundred years ago, the local builders built everything in it. But increasingly what builders do is assemble components designed and manufactured by someone else. This has, like the arrival of desktop publishing, given people the freedom to experiment in disastrous ways, but it is certainly more efficient.[7] Google is much more dangerous to Microsoft than Netscape was.",
      "Probably more dangerous than any other company has ever been. Not least because they're determined to fight. On their job listing page, they say that one of their \"core values'' is \"Don't be evil.'' From a company selling soybean oil or mining equipment, such a statement would merely be eccentric.",
      "But I think all of us in the computer world recognize who that is a declaration of war on.Thanks to Jessica Livingston, Robert Morris, and Sarah Harlin for reading earlier versions of this talk.Audio of talkThe Python ParadoxJapanese TranslationRussian TranslationItalian TranslationSpanish Translation If you liked this, you may also like Hackers & Painters."
    ],
    "word_count": 5170,
    "paragraph_count": 107
  },
  "processed_at": "2025-07-26T19:01:56.685063",
  "paragraphs": [
    {
      "original": "Want to start a startup? Get funded by Y Combinator. July 2004(This essay is derived from a talk at Oscon 2004.) A few months ago I finished a new book, and in reviews I keep noticing words like \"provocative'' and \"controversial.'' To say nothing of \"idiotic.''I didn't mean to make the book controversial.",
      "translated": "想创业吗？获得Y Combinator的投资。2004年7月（本文源自2004年Oscon大会上的演讲。）几个月前，我完成了一本新书，在书评中我不断看到诸如“挑衅的”和“有争议的”这样的词。更不用说“愚蠢的”了。我本无意让这本书变得有争议。"
    },
    {
      "original": "I was trying to make it efficient. I didn't want to waste people's time telling them things they already knew. It's more efficient just to give them the diffs. But I suppose that's bound to yield an alarming book.EdisonsThere's no controversy about which idea is most controversial: the suggestion that variation in wealth might not be as big a problem as we think.I didn't say in the book that variation in wealth was in itself a good thing.",
      "translated": "我努力做到高效。我不想浪费人们的时间，告诉他们一些他们已经知道的事情。直接给出差异会更高效。但我猜这可能会产生一本令人不安的书。关于哪个观点最具有争议性，没有争议：那就是财富差异可能不像我们认为的那样是个大问题的建议。我在书中并没有说财富差异本身是一件好事。"
    },
    {
      "original": "I said in some situations it might be a sign of good things. A throbbing headache is not a good thing, but it can be a sign of a good thing-- for example, that you're recovering consciousness after being hit on the head.Variation in wealth can be a sign of variation in productivity.",
      "translated": "我说在某些情况下，这可能是好事的征兆。剧烈的头痛当然不是什么好事，但它可以是好事的迹象——例如，你被击中头部后正在恢复意识。财富的变动可以是生产力变动的标志。"
    },
    {
      "original": "(In a society of one, they're identical.) And that is almost certainly a good thing: if your society has no variation in productivity, it's probably not because everyone is Thomas Edison. It's probably because you have no Thomas Edisons.In a low-tech society you don't see much variation in productivity.",
      "translated": "（在一个单一的社会中，它们是相同的。）这几乎肯定是一件好事：如果你的社会在生产力上没有差异，那很可能不是因为每个人都是托马斯·爱迪生。很可能是因为你没有托马斯·爱迪生。在低技术社会中，你不会看到太多生产力的差异。"
    },
    {
      "original": "If you have a tribe of nomads collecting sticks for a fire, how much more productive is the best stick gatherer going to be than the worst? A factor of two? Whereas when you hand people a complex tool like a computer, the variation in what they can do with it is enormous.That's not a new idea.",
      "translated": "如果你有一个游牧部落在收集柴火，最好的柴火收集者比最差的能多有效率多少？两倍？然而，当你给人一个复杂的工具如电脑时，他们能用它完成的事情的差异是巨大的。这并不是一个新想法。"
    },
    {
      "original": "Fred Brooks wrote about it in 1974, and the study he quoted was published in 1968. But I think he underestimated the variation between programmers. He wrote about productivity in lines of code: the best programmers can solve a given problem in a tenth the time.",
      "translated": "弗雷德·布鲁克斯在1974年对此进行了描述，他引用的研究发表于1968年。但我认为他低估了程序员之间的差异。他提到的是以代码行数衡量的生产率：最优秀的程序员可以以十分之一的时间解决给定的问题。"
    },
    {
      "original": "But what if the problem isn't given? In programming, as in many fields, the hard part isn't solving problems, but deciding what problems to solve. Imagination is hard to measure, but in practice it dominates the kind of productivity that's measured in lines of code.Productivity varies in any field, but there are few in which it varies so much.",
      "translated": "但如果问题本身没有给出呢？在编程领域，就像在许多其他领域一样，困难的部分不在于解决问题，而在于决定要解决什么问题。想象力难以衡量，但在实践中，它主导了以代码行数来衡量的那种生产力。任何领域的生产力都有所不同，但很少有领域像这样差异如此之大。"
    },
    {
      "original": "The variation between programmers is so great that it becomes a difference in kind. I don't think this is something intrinsic to programming, though. In every field, technology magnifies differences in productivity.",
      "translated": "程序员之间的差异如此之大，以至于成为了一种本质上的区别。不过，我认为这并不是编程本身固有的特性。在每个领域，技术都会放大生产效率的差异。"
    },
    {
      "original": "I think what's happening in programming is just that we have a lot of technological leverage. But in every field the lever is getting longer, so the variation we see is something that more and more fields will see as time goes on.",
      "translated": "我认为在编程领域发生的事情仅仅是技术杠杆效应的体现。但每个领域的杠杆都在变长，因此我们看到的变化是越来越多的领域将随着时间的推移而经历的。"
    },
    {
      "original": "And the success of companies, and countries, will depend increasingly on how they deal with it.If variation in productivity increases with technology, then the contribution of the most productive individuals will not only be disproportionately large, but will actually grow with time.",
      "translated": "企业和国家的成功将越来越取决于它们如何应对这一挑战。如果生产力的差异随着技术的发展而增加，那么最 productive 个体的贡献不仅会不成比例地大，而且实际上会随着时间的推移而增长。"
    },
    {
      "original": "When you reach the point where 90% of a group's output is created by 1% of its members, you lose big if something (whether Viking raids, or central planning) drags their productivity down to the average.If we want to get the most out of them, we need to understand these especially productive people.",
      "translated": "当一个群体中有90%的产出是由1%的成员创造时，如果某些因素（无论是维京人的袭击，还是中央计划）将这些人的生产力拉低到平均水平，你将会遭受重大损失。如果我们希望从这些人身上获得最大的价值，就需要理解这些特别有生产力的人。"
    },
    {
      "original": "What motivates them? What do they need to do their jobs? How do you recognize them? How do you get them to come and work for you? And then of course there's the question, how do you become one?More than MoneyI know a handful of super-hackers, so I sat down and thought about what they have in common.",
      "translated": "是什么驱动他们？他们需要什么来完成工作？你如何认可他们？你如何吸引他们来为你工作？当然，还有一个问题，如何成为他们中的一员？不仅仅是金钱我知道一些顶级黑客，所以我坐下来思考他们有哪些共同点。"
    },
    {
      "original": "Their defining quality is probably that they really love to program. Ordinary programmers write code to pay the bills. Great hackers think of it as something they do for fun, and which they're delighted to find people will pay them for.Great programmers are sometimes said to be indifferent to money.",
      "translated": "他们的标志性特点可能就是他们非常热爱编程。普通程序员写代码是为了赚钱。而优秀的黑客则把编程视为一种乐趣，并且乐于发现有人愿意为他们做的这件事付费。伟大的程序员有时被认为对金钱不太在意。"
    },
    {
      "original": "This isn't quite true. It is true that all they really care about is doing interesting work. But if you make enough money, you get to work on whatever you want, and for that reason hackers are attracted by the idea of making really large amounts of money.",
      "translated": "这并不完全正确。确实，他们真正关心的是做一些有趣的工作。但是，如果你赚了足够的钱，你就可以随心所欲地工作，正因为如此，黑客们被赚取大量财富的想法所吸引。"
    },
    {
      "original": "But as long as they still have to show up for work every day, they care more about what they do there than how much they get paid for it.Economically, this is a fact of the greatest importance, because it means you don't have to pay great hackers anything like what they're worth.",
      "translated": "但只要他们仍然需要每天上班，他们就更关心在工作中做的事情，而不是得到多少报酬。从经济角度来看，这是一个极其重要的事实，因为这意味着你不必为优秀的黑客支付接近他们实际价值的薪酬。"
    },
    {
      "original": "A great programmer might be ten or a hundred times as productive as an ordinary one, but he'll consider himself lucky to get paid three times as much. As I'll explain later, this is partly because great hackers don't know how good they are.",
      "translated": "一位优秀的程序员的生产力可能是一位普通程序员的十倍甚至百倍，但他会觉得自己的薪水能比普通程序员高出三倍就已经很幸运了。正如我后面将要解释的，这 partly 是因为优秀的黑客并不了解自己究竟有多优秀。"
    },
    {
      "original": "But it's also because money is not the main thing they want.What do hackers want? Like all craftsmen, hackers like good tools. In fact, that's an understatement. Good hackers find it unbearable to use bad tools.",
      "translated": "但这也因为金钱并不是他们最主要的需求。黑客想要什么？和所有的工匠一样，黑客喜欢好的工具。事实上，这样说还是轻描淡写了。优秀的黑客根本无法忍受使用糟糕的工具。"
    },
    {
      "original": "They'll simply refuse to work on projects with the wrong infrastructure.At a startup I once worked for, one of the things pinned up on our bulletin board was an ad from IBM. It was a picture of an AS400, and the headline read, I think, \"hackers despise it.'' [1]When you decide what infrastructure to use for a project, you're not just making a technical decision.",
      "translated": "他们干脆拒绝参与使用错误基础设施的项目。在我曾经工作的一家初创公司里，我们的公告板上贴着一张IBM的广告。那是一张AS400的图片，标题写着，我记得是，“黑客厌恶它。”[1]当你决定一个项目要使用哪种基础设施时，你做的不仅仅是技术决策。"
    },
    {
      "original": "You're also making a social decision, and this may be the more important of the two. For example, if your company wants to write some software, it might seem a prudent choice to write it in Java. But when you choose a language, you're also choosing a community.",
      "translated": "你也在做出一个社会性的决定，这可能是两个决定中更为重要的一个。例如，如果你的公司想要编写一些软件，选择用Java编写可能看起来是一个谨慎的选择。但当你选择一种语言时，你也在选择一个社区。"
    },
    {
      "original": "The programmers you'll be able to hire to work on a Java project won't be as smart as the ones you could get to work on a project written in Python. And the quality of your hackers probably matters more than the language you choose.",
      "translated": "你可以聘请来从事Java项目的程序员，不会像那些可以从事Python项目的人那样聪明。而且，你所雇佣的黑客的质量可能比你选择的编程语言更重要。"
    },
    {
      "original": "Though, frankly, the fact that good hackers prefer Python to Java should tell you something about the relative merits of those languages.Business types prefer the most popular languages because they view languages as standards.",
      "translated": "事实上，优秀的黑客更喜欢Python而不是Java，这一点本身就说明了这两种语言的相对优劣。商界人士倾向于选择最受欢迎的语言，因为他们将语言视为标准。"
    },
    {
      "original": "They don't want to bet the company on Betamax. The thing about languages, though, is that they're not just standards. If you have to move bits over a network, by all means use TCP/IP. But a programming language isn't just a format.",
      "translated": "他们不想把公司的未来押注在Betamax上。不过，语言不仅仅是标准。如果需要在网络上传输数据，当然可以使用TCP/IP。但编程语言不仅仅是一种格式。"
    },
    {
      "original": "A programming language is a medium of expression.I've read that Java has just overtaken Cobol as the most popular language. As a standard, you couldn't wish for more. But as a medium of expression, you could do a lot better.",
      "translated": "编程语言是一种表达媒介。我读到，Java 刚刚超越了 Cobol 成为最受欢迎的语言。作为标准，你再也找不到更好的了。但作为表达媒介，还有很多改进的空间。"
    },
    {
      "original": "Of all the great programmers I can think of, I know of only one who would voluntarily program in Java. And of all the great programmers I can think of who don't work for Sun, on Java, I know of zero.Great hackers also generally insist on using open source software.",
      "translated": "在我能想到的所有优秀程序员中，我只知道有一个人愿意用Java编程。而在那些不在Sun公司工作、不使用Java的优秀程序员中，我一个都不知道。优秀的黑客通常也坚持使用开源软件。"
    },
    {
      "original": "Not just because it's better, but because it gives them more control. Good hackers insist on control. This is part of what makes them good hackers: when something's broken, they need to fix it. You want them to feel this way about the software they're writing for you.",
      "translated": "不仅仅因为它更好，还因为它给予他们更多的控制权。优秀的黑客坚持掌控一切。这是他们成为优秀黑客的一部分原因：当某样东西出问题时，他们需要修复它。你希望他们对你委托他们编写的软件也抱有这种态度。"
    },
    {
      "original": "You shouldn't be surprised when they feel the same way about the operating system.A couple years ago a venture capitalist friend told me about a new startup he was involved with. It sounded promising.",
      "translated": "你不应该对他们的操作系统有同样的感受感到惊讶。几年前，一位风险投资家朋友告诉我他参与的一家新初创公司。听起来很有前景。"
    },
    {
      "original": "But the next time I talked to him, he said they'd decided to build their software on Windows NT, and had just hired a very experienced NT developer to be their chief technical officer. When I heard this, I thought, these guys are doomed.",
      "translated": "但下次我和他谈话时，他说他们决定在Windows NT上构建他们的软件，并刚刚聘请了一位非常有经验的NT开发人员担任他们的首席技术官。听到这个消息时，我想，这些家伙完了。"
    },
    {
      "original": "One, the CTO couldn't be a first rate hacker, because to become an eminent NT developer he would have had to use NT voluntarily, multiple times, and I couldn't imagine a great hacker doing that; and two, even if he was good, he'd have a hard time hiring anyone good to work for him if the project had to be built on NT.",
      "translated": "首先，首席技术官不可能是一流的黑客，因为要成为一名杰出的NT开发者，他必须自愿多次使用NT，而我无法想象一个伟大的黑客会这样做；其次，即使他很出色，如果项目必须建立在NT上，他也很难雇佣到优秀的人才为他工作。"
    },
    {
      "original": "[2]The Final FrontierAfter software, the most important tool to a hacker is probably his office. Big companies think the function of office space is to express rank. But hackers use their offices for more than that: they use their office as a place to think in.",
      "translated": "继软件之后，对黑客来说最重要的工具可能是他的办公室。大公司认为办公空间的功能在于表达等级。但黑客们对办公室的使用不仅如此：他们将办公室用作思考的地方。"
    },
    {
      "original": "And if you're a technology company, their thoughts are your product. So making hackers work in a noisy, distracting environment is like having a paint factory where the air is full of soot.The cartoon strip Dilbert has a lot to say about cubicles, and with good reason.",
      "translated": "如果你是一家科技公司，那么他们的想法就是你的产品。因此，让黑客在一个嘈杂、分散注意力的环境中工作，就像在一家空气中充满烟炱的油漆厂工作一样。漫画《呆伯特》对隔间有许多讽刺，这是有道理的。"
    },
    {
      "original": "All the hackers I know despise them. The mere prospect of being interrupted is enough to prevent hackers from working on hard problems. If you want to get real work done in an office with cubicles, you have two options: work at home, or come in early or late or on a weekend, when no one else is there.",
      "translated": "我认识的所有黑客都厌恶这样的情况。仅仅是可能被打断的念头就足以阻止黑客去解决复杂的问题。如果你想在一个有隔间的办公室里真正完成工作，你有两个选择：在家工作，或者在早期、晚期或周末来上班，那时没有其他人。"
    },
    {
      "original": "Don't companies realize this is a sign that something is broken? An office environment is supposed to be something that helps you work, not something you work despite.Companies like Cisco are proud that everyone there has a cubicle, even the CEO.",
      "translated": "公司难道没有意识到这是一种系统出问题的信号吗？办公室环境应该是帮助你工作的，而不是让你在其中勉强度日。像思科这样的公司还自豪地宣称，那里每个人都有一个隔间，甚至是首席执行官。"
    },
    {
      "original": "But they're not so advanced as they think; obviously they still view office space as a badge of rank. Note too that Cisco is famous for doing very little product development in house. They get new technology by buying the startups that created it-- where presumably the hackers did have somewhere quiet to work.One big company that understands what hackers need is Microsoft.",
      "translated": "但他们并没有自己想象的那么先进；显然，他们仍然把办公空间视为地位的象征。另外值得注意的是，思科以很少在内部进行产品开发而闻名。他们通过收购创建这些新技术的初创公司来获取新技术——在这些初创公司中，程序员们大概有安静的工作环境。一家真正理解程序员需求的大公司是微软。"
    },
    {
      "original": "I once saw a recruiting ad for Microsoft with a big picture of a door. Work for us, the premise was, and we'll give you a place to work where you can actually get work done. And you know, Microsoft is remarkable among big companies in that they are able to develop software in house.",
      "translated": "我曾经看到微软的一则招聘广告，广告中有一张大大的门的照片。广告的意思是，来我们这里工作，我们将为你提供一个真正可以完成工作的环境。你知道，微软在大公司中是不同寻常的，因为他们能够内部开发软件。"
    },
    {
      "original": "Not well, perhaps, but well enough.If companies want hackers to be productive, they should look at what they do at home. At home, hackers can arrange things themselves so they can get the most done. And when they work at home, hackers don't work in noisy, open spaces; they work in rooms with doors.",
      "translated": "也许不太理想，但足够好。如果公司希望黑客们能高效工作，他们应该看看黑客在家里是如何工作的。在家里，黑客可以自己安排事情，以达到最高的工作效率。而当他们在家里工作时，黑客们不会在嘈杂的开放空间工作；他们会在有门的房间里工作。"
    },
    {
      "original": "They work in cosy, neighborhoody places with people around and somewhere to walk when they need to mull something over, instead of in glass boxes set in acres of parking lots. They have a sofa they can take a nap on when they feel tired, instead of sitting in a coma at their desk, pretending to work.",
      "translated": "他们在一个舒适、充满邻里氛围的地方工作，周围有人，需要思考问题时可以去散散步，而不是待在被停车场包围的玻璃盒子里。当他们感到疲倦时，可以躺在沙发上小憩，而不是坐在办公桌前装作在工作。"
    },
    {
      "original": "There's no crew of people with vacuum cleaners that roars through every evening during the prime hacking hours. There are no meetings or, God forbid, corporate retreats or team-building exercises. And when you look at what they're doing on that computer, you'll find it reinforces what I said earlier about tools.",
      "translated": "并没有一群拿着吸尘器的人每晚在黑客活动的高峰期轰鸣而过。没有会议，更不用说企业团建或团队建设活动了。而当你看到他们在计算机上做的事情时，你会发现这进一步证实了我之前关于工具的说法。"
    },
    {
      "original": "They may have to use Java and Windows at work, but at home, where they can choose for themselves, you're more likely to find them using Perl and Linux.Indeed, these statistics about Cobol or Java being the most popular language can be misleading.",
      "translated": "他们在工作中可能不得不使用 Java 和 Windows，但在家里，当他们可以自行选择时，你更有可能发现他们使用 Perl 和 Linux。事实上，关于 Cobol 或 Java 是最流行语言的统计数据可能是具有误导性的。"
    },
    {
      "original": "What we ought to look at, if we want to know what tools are best, is what hackers choose when they can choose freely-- that is, in projects of their own. When you ask that question, you find that open source operating systems already have a dominant market share, and the number one language is probably Perl.InterestingAlong with good tools, hackers want interesting projects.",
      "translated": "如果我们想知道哪些工具最好，应该看看黑客在可以自由选择时会选择什么——也就是说，在他们自己的项目中。当你问这个问题时，你会发现开源操作系统已经占据了主导市场份额，而排名第一的语言可能是Perl。此外，除了好的工具，黑客还想要有趣的项目。"
    },
    {
      "original": "What makes a project interesting? Well, obviously overtly sexy applications like stealth planes or special effects software would be interesting to work on. But any application can be interesting if it poses novel technical challenges.",
      "translated": "什么让一个项目变得有趣？显然，像隐形飞机或特效软件这样明显吸引人的应用会很有趣。但只要提出了新颖的技术挑战，任何应用都可能变得有趣。"
    },
    {
      "original": "So it's hard to predict which problems hackers will like, because some become interesting only when the people working on them discover a new kind of solution. Before ITA (who wrote the software inside Orbitz), the people working on airline fare searches probably thought it was one of the most boring applications imaginable.",
      "translated": "因此，很难预测黑客会对哪些问题感兴趣，因为有些问题只有在研究它们的人发现了一种新的解决方案后才会变得有趣。在ITA（编写了Orbitz内部软件的公司）之前，从事航空票价搜索的人可能认为这是最无聊的应用之一。"
    },
    {
      "original": "But ITA made it interesting by redefining the problem in a more ambitious way.I think the same thing happened at Google. When Google was founded, the conventional wisdom among the so-called portals was that search was boring and unimportant.",
      "translated": "但ITA通过以一种更为雄心勃勃的方式重新定义问题，使其变得有趣。我认为同样的事情也发生在谷歌。当谷歌成立时，所谓的门户网站普遍认为搜索既枯燥又不重要。"
    },
    {
      "original": "But the guys at Google didn't think search was boring, and that's why they do it so well.This is an area where managers can make a difference. Like a parent saying to a child, I bet you can't clean up your whole room in ten minutes, a good manager can sometimes redefine a problem as a more interesting one.",
      "translated": "但谷歌的员工并不认为搜索是枯燥的，这就是他们能做得如此出色的原因。在这个领域，管理者可以发挥重要作用。就像父母对小孩说，我打赌你不可能在十分钟内把整个房间整理干净，一位优秀的管理者有时可以将问题重新定义为更有趣的问题。"
    },
    {
      "original": "Steve Jobs seems to be particularly good at this, in part simply by having high standards. There were a lot of small, inexpensive computers before the Mac. He redefined the problem as: make one that's beautiful.",
      "translated": "史蒂夫·乔布斯似乎特别擅长这一点，部分原因是他有着高标准。在 Mac 之前，有很多小型、廉价的电脑。他将问题重新定义为：制造一台美丽的电脑。"
    },
    {
      "original": "And that probably drove the developers harder than any carrot or stick could.They certainly delivered. When the Mac first appeared, you didn't even have to turn it on to know it would be good; you could tell from the case.",
      "translated": "而这可能比任何奖惩都更能激励开发者。他们确实做到了。当第一台Mac出现时，你甚至不需要打开它就能知道它会很好；从机箱就能看出来。"
    },
    {
      "original": "A few weeks ago I was walking along the street in Cambridge, and in someone's trash I saw what appeared to be a Mac carrying case. I looked inside, and there was a Mac SE. I carried it home and plugged it in, and it booted.",
      "translated": "几周前，我在剑桥的街上散步，看到有人的垃圾里有一个看起来像是Mac的手提包。我往里面看了一眼，发现里面有一台Mac SE。我把它带回家，插上电源，它竟然启动了。"
    },
    {
      "original": "The happy Macintosh face, and then the finder. My God, it was so simple. It was just like ... Google.Hackers like to work for people with high standards. But it's not enough just to be exacting. You have to insist on the right things.",
      "translated": "快乐的麦金塔脸，然后是资源管理器。天哪，它真是太简单了。就像是……谷歌。黑客喜欢为有高标准的人工作。但是，仅仅苛求是不够的。你必须坚持正确的事情。"
    },
    {
      "original": "Which usually means that you have to be a hacker yourself. I've seen occasional articles about how to manage programmers. Really there should be two articles: one about what to do if you are yourself a programmer, and one about what to do if you're not.",
      "translated": "这通常意味着你自己也得是个黑客。我偶尔会看到一些关于如何管理程序员的文章。实际上应该有两篇文章：一篇是关于如果你自己是程序员该怎么做，另一篇是关于如果你不是程序员该怎么做。"
    },
    {
      "original": "And the second could probably be condensed into two words: give up.The problem is not so much the day to day management. Really good hackers are practically self-managing. The problem is, if you're not a hacker, you can't tell who the good hackers are.",
      "translated": "第二个问题可能用两个词概括：放弃。问题不在于日常管理。真正优秀的黑客几乎是自我管理的。问题在于，如果你不是黑客，你就无法辨别谁是优秀的黑客。"
    },
    {
      "original": "A similar problem explains why American cars are so ugly. I call it the design paradox. You might think that you could make your products beautiful just by hiring a great designer to design them. But if you yourself don't have good taste, how are you going to recognize a good designer?",
      "translated": "类似的问题解释了为什么美国汽车如此丑陋。我称之为设计悖论。你可能会认为，只要雇用一位优秀的设计者来设计你的产品，就能使它们变得漂亮。但如果你自己没有好的审美，你怎么能识别出一个好的设计者呢？"
    },
    {
      "original": "By definition you can't tell from his portfolio. And you can't go by the awards he's won or the jobs he's had, because in design, as in most fields, those tend to be driven by fashion and schmoozing, with actual ability a distant third.",
      "translated": "按定义，你无法从他的作品集中看出。你也不能根据他获得的奖项或曾经担任的职位来判断，因为在设计领域，就像在大多数领域一样，这些往往受时尚和交际的影响，而实际能力则排在第三位。"
    },
    {
      "original": "There's no way around it: you can't manage a process intended to produce beautiful things without knowing what beautiful is. American cars are ugly because American car companies are run by people with bad taste.Many people in this country think of taste as something elusive, or even frivolous.",
      "translated": "无可回避：你无法在不知道什么是美的情况下管理一个旨在创造美好事物的过程。美国汽车之所以丑陋，是因为美国汽车公司由品味不佳的人经营。在这个国家，许多人认为品味是难以捉摸的，甚至是轻浮的。"
    },
    {
      "original": "It is neither. To drive design, a manager must be the most demanding user of a company's products. And if you have really good taste, you can, as Steve Jobs does, make satisfying you the kind of problem that good people like to work on.Nasty Little ProblemsIt's pretty easy to say what kinds of problems are not interesting: those where instead of solving a few big, clear, problems, you have to solve a lot of nasty little ones.",
      "translated": "neither. 要推动设计，管理者必须成为公司产品最苛刻的用户。如果你真的有很好的品味，你就可以像史蒂夫·乔布斯那样，让自己满意成为一种难题，让优秀的人才愿意去解决。不讨人喜欢的小问题\n有趣的问题类型很容易界定：那些不是解决几个大而明确的问题，而是必须解决许多不讨人喜欢的小问题的情况。"
    },
    {
      "original": "One of the worst kinds of projects is writing an interface to a piece of software that's full of bugs. Another is when you have to customize something for an individual client's complex and ill-defined needs.",
      "translated": "最糟糕的项目之一就是为一个充满错误的软件编写接口。另一个则是需要为某个客户的复杂且定义不清的需求进行定制。"
    },
    {
      "original": "To hackers these kinds of projects are the death of a thousand cuts.The distinguishing feature of nasty little problems is that you don't learn anything from them. Writing a compiler is interesting because it teaches you what a compiler is.",
      "translated": "对于黑客来说，这类项目就像是千刀万剐。这些讨厌的小问题的特点在于你从中学不到任何东西。编写编译器有趣的地方在于它能教会你编译器是什么。"
    },
    {
      "original": "But writing an interface to a buggy piece of software doesn't teach you anything, because the bugs are random. [3] So it's not just fastidiousness that makes good hackers avoid nasty little problems.",
      "translated": "但是，为一个有bug的软件编写接口并不会教会你什么，因为这些bug是随机的。[3] 因此，优秀的黑客避免那些讨厌的小问题不仅仅是因为他们讲究细节。"
    },
    {
      "original": "It's more a question of self-preservation. Working on nasty little problems makes you stupid. Good hackers avoid it for the same reason models avoid cheeseburgers.Of course some problems inherently have this character.",
      "translated": "这更多是一个自我保护的问题。处理那些棘手的小问题会让你变蠢。优秀的黑客会避免这样做，就像模特会避免吃奶酪汉堡一样。当然，有些问题本身就具有这种性质。"
    },
    {
      "original": "And because of supply and demand, they pay especially well. So a company that found a way to get great hackers to work on tedious problems would be very successful. How would you do it?One place this happens is in startups.",
      "translated": "由于供需关系，他们的报酬特别高。因此，如果一家公司能找到方法让优秀的黑客去解决繁琐的问题，将会非常成功。你该怎么做呢？这种情况在一个地方确实存在，那就是初创公司。"
    },
    {
      "original": "At our startup we had Robert Morris working as a system administrator. That's like having the Rolling Stones play at a bar mitzvah. You can't hire that kind of talent. But people will do any amount of drudgery for companies of which they're the founders.",
      "translated": "在我们创业公司里，罗伯特·莫里斯担任系统管理员。这就像让滚石乐队在犹太少年成年礼上演奏一样。你无法雇佣到这种水平的人才。但人们为了自己创立的公司，愿意做任何繁琐的工作。"
    },
    {
      "original": "[4]Bigger companies solve the problem by partitioning the company. They get smart people to work for them by establishing a separate R&D department where employees don't have to work directly on customers' nasty little problems.",
      "translated": "[4]大型公司通过划分公司来解决问题。他们通过设立独立的研发部门来吸引聪明的人才，这样员工就不必直接处理客户那些棘手的小问题。"
    },
    {
      "original": "[5] In this model, the research department functions like a mine. They produce new ideas; maybe the rest of the company will be able to use them.You may not have to go to this extreme. Bottom-up programming suggests another way to partition the company: have the smart people work as toolmakers.",
      "translated": "在这个模型中，研究部门的作用就像是一座矿山。他们产生新的想法；也许公司其他部门能够利用这些想法。你可能不必走到这一步。自下而上的编程方法提出了另一种公司分工的方式：让聪明的人担任工具开发者。"
    },
    {
      "original": "If your company makes software to do x, have one group that builds tools for writing software of that type, and another that uses these tools to write the applications. This way you might be able to get smart people to write 99% of your code, but still keep them almost as insulated from users as they would be in a traditional research department.",
      "translated": "如果你的公司开发用于完成某项任务的软件，可以设立一个团队来构建编写该类型软件的工具，另一个团队则使用这些工具来编写应用程序。这样，你或许能够让聪明的人编写你99%的代码，同时仍然让他们几乎像在传统研究部门那样与用户隔绝。"
    },
    {
      "original": "The toolmakers would have users, but they'd only be the company's own developers. [6]If Microsoft used this approach, their software wouldn't be so full of security holes, because the less smart people writing the actual applications wouldn't be doing low-level stuff like allocating memory.",
      "translated": "工具制造者会有用户，但这些用户只会是公司自己的开发者。如果微软采用这种方法，他们的软件就不会有那么多安全漏洞，因为那些编写实际应用程序的不太聪明的人就不会做分配内存这样的底层操作。"
    },
    {
      "original": "Instead of writing Word directly in C, they'd be plugging together big Lego blocks of Word-language. (Duplo, I believe, is the technical term.)ClumpingAlong with interesting problems, what good hackers like is other good hackers.",
      "translated": "他们不会直接用C语言编写Word，而是像拼装大块的Word语言积木一样工作。（我认为，技术术语叫做Duplo。）除了有趣的问题，优秀的黑客还喜欢和其他优秀的黑客共事。"
    },
    {
      "original": "Great hackers tend to clump together-- sometimes spectacularly so, as at Xerox Parc. So you won't attract good hackers in linear proportion to how good an environment you create for them. The tendency to clump means it's more like the square of the environment.",
      "translated": "优秀的黑客倾向于聚集在一起——有时这种聚集非常显著，就像在施乐帕克研究中心那样。因此，你吸引到的优秀黑客数量不会与你为他们创造的环境质量成线性关系。由于他们倾向于聚集，这种关系更像环境质量的平方。"
    },
    {
      "original": "So it's winner take all. At any given time, there are only about ten or twenty places where hackers most want to work, and if you aren't one of them, you won't just have fewer great hackers, you'll have zero.Having great hackers is not, by itself, enough to make a company successful.",
      "translated": "所以，这是一场赢家通吃的比赛。在任何时候，黑客最想工作的地点只有大约十个或二十个，如果你不在其中，你就不仅会少一些顶尖黑客，而是一个都得不到。拥有顶尖黑客本身并不足以使一家公司成功。"
    },
    {
      "original": "It works well for Google and ITA, which are two of the hot spots right now, but it didn't help Thinking Machines or Xerox. Sun had a good run for a while, but their business model is a down elevator.",
      "translated": "这对谷歌和ITA来说效果很好，它们是目前的两个热点，但对思考机器公司或施乐公司并没有帮助。太阳微系统公司有一段时间表现不错，但他们的商业模式就像是一部下行的电梯。"
    },
    {
      "original": "In that situation, even the best hackers can't save you.I think, though, that all other things being equal, a company that can attract great hackers will have a huge advantage. There are people who would disagree with this.",
      "translated": "在这种情况下，即使是最好的黑客也无法救你。不过，我认为在其他条件相同的情况下，能够吸引到优秀黑客的公司将会拥有巨大的优势。当然，也有人会对此持不同意见。"
    },
    {
      "original": "When we were making the rounds of venture capital firms in the 1990s, several told us that software companies didn't win by writing great software, but through brand, and dominating channels, and doing the right deals.They really seemed to believe this, and I think I know why.",
      "translated": "在20世纪90年代，我们走访风险投资公司时，有几家告诉我们，软件公司并不是通过编写优秀的软件来获胜的，而是通过品牌、渠道主导和做正确的交易。他们似乎真的相信这一点，而我认为我知道其中的原因。"
    },
    {
      "original": "I think what a lot of VCs are looking for, at least unconsciously, is the next Microsoft. And of course if Microsoft is your model, you shouldn't be looking for companies that hope to win by writing great software.",
      "translated": "我认为许多风险投资家，至少是潜意识里，都在寻找下一个微软。当然，如果微软是你的榜样，那么你不应该去寻找希望通过编写优秀软件来取胜的公司。"
    },
    {
      "original": "But VCs are mistaken to look for the next Microsoft, because no startup can be the next Microsoft unless some other company is prepared to bend over at just the right moment and be the next IBM.It's a mistake to use Microsoft as a model, because their whole culture derives from that one lucky break.",
      "translated": "但风险投资家们寻找下一个微软的做法是错误的，因为除非有其他公司恰到好处地成为下一个IBM，否则没有初创企业能成为下一个微软。将微软作为榜样是个错误，因为微软的整个企业文化都源于那一次幸运的机遇。"
    },
    {
      "original": "Microsoft is a bad data point. If you throw them out, you find that good products do tend to win in the market. What VCs should be looking for is the next Apple, or the next Google.I think Bill Gates knows this.",
      "translated": "微软是一个不好的数据点。如果将其排除，你会发现好的产品确实倾向于在市场上获胜。风险投资者应该寻找的是下一个苹果或下一个谷歌。我认为比尔·盖茨明白这一点。"
    },
    {
      "original": "What worries him about Google is not the power of their brand, but the fact that they have better hackers. [7] RecognitionSo who are the great hackers? How do you know when you meet one? That turns out to be very hard.",
      "translated": "他担心谷歌的并不是其品牌的影响力，而是他们拥有更优秀的黑客。[7] 认知那么，谁是伟大的黑客呢？你如何判断遇到了一个呢？事实证明，这非常难。"
    },
    {
      "original": "Even hackers can't tell. I'm pretty sure now that my friend Trevor Blackwell is a great hacker. You may have read on Slashdot how he made his own Segway. The remarkable thing about this project was that he wrote all the software in one day (in Python, incidentally).For Trevor, that's par for the course.",
      "translated": "就连黑客也分辨不出。我现在相当肯定我的朋友特雷弗·布莱克威尔是一位卓越的黑客。你可能在Slashdot上读到过他自制Segway的消息。这个项目最令人称道的是，他仅用一天时间就编写了所有的软件（顺便说一句，是用Python编写的）。对特雷弗来说，这不过是家常便饭。"
    },
    {
      "original": "But when I first met him, I thought he was a complete idiot. He was standing in Robert Morris's office babbling at him about something or other, and I remember standing behind him making frantic gestures at Robert to shoo this nut out of his office so we could go to lunch.",
      "translated": "但当我第一次见到他时，我以为他是个十足的白痴。他站在罗伯特·莫里斯的办公室里，对着罗伯特喋喋不休地说着些什么，我还记得自己站在他身后，急切地向罗伯特打手势，想把这个疯子赶出办公室，好让我们去吃午饭。"
    },
    {
      "original": "Robert says he misjudged Trevor at first too. Apparently when Robert first met him, Trevor had just begun a new scheme that involved writing down everything about every aspect of his life on a stack of index cards, which he carried with him everywhere.",
      "translated": "罗伯特说他一开始也误判了特雷弗。显然，罗伯特第一次见到他时，特雷弗刚刚开始一个新计划，这个计划涉及把他生活各个方面的所有事情都写在一堆索引卡上，而且无论去哪里都随身携带。"
    },
    {
      "original": "He'd also just arrived from Canada, and had a strong Canadian accent and a mullet.The problem is compounded by the fact that hackers, despite their reputation for social obliviousness, sometimes put a good deal of effort into seeming smart.",
      "translated": "他刚从加拿大来，带着明显的加拿大口音和一个马尾发型。问题在于，尽管黑客们因为社交迟钝而声名狼藉，但他们有时会花费大量精力来表现得聪明。"
    },
    {
      "original": "When I was in grad school I used to hang around the MIT AI Lab occasionally. It was kind of intimidating at first. Everyone there spoke so fast. But after a while I learned the trick of speaking fast.",
      "translated": "我读研究生时，时常会在麻省理工学院的人工智能实验室转转。刚开始时，那里的人让我感到有点儿 intimidatint（ intimidatint 应为 intimidating，此处应为笔误）。每个人说话都那么快。但过了一段时间，我也学会了快速说话的技巧。"
    },
    {
      "original": "You don't have to think any faster; just use twice as many words to say everything. With this amount of noise in the signal, it's hard to tell good hackers when you meet them. I can't tell, even now.",
      "translated": "你不必思考得更快；只要用两倍的词语来表达一切。在这种信号噪声下，很难在遇到优秀黑客时辨别出来。即使现在，我也无法分辨。"
    },
    {
      "original": "You also can't tell from their resumes. It seems like the only way to judge a hacker is to work with him on something.And this is the reason that high-tech areas only happen around universities. The active ingredient here is not so much the professors as the students.",
      "translated": "你也无法从他们的简历中看出来。似乎判断一个黑客的唯一方法就是与他合作做一些事情。而这正是高科技区域只在大学周围出现的原因。这里的关键因素不是教授，而是学生。"
    },
    {
      "original": "Startups grow up around universities because universities bring together promising young people and make them work on the same projects. The smart ones learn who the other smart ones are, and together they cook up new projects of their own.Because you can't tell a great hacker except by working with him, hackers themselves can't tell how good they are.",
      "translated": "初创公司围绕大学发展起来，因为大学聚集了有潜力的年轻人，并让他们在同一个项目上合作。聪明的人会了解到其他聪明的人是谁，然后他们共同构思出自己的新项目。由于除了与某人合作外，无法判断一个出色的黑客，因此黑客自己也无法判断自己的水平。"
    },
    {
      "original": "This is true to a degree in most fields. I've found that people who are great at something are not so much convinced of their own greatness as mystified at why everyone else seems so incompetent. But it's particularly hard for hackers to know how good they are, because it's hard to compare their work.",
      "translated": "这在大多数领域中都有一定的真实性。我发现，那些在某方面非常出色的人，并不是特别确信自己的伟大，而是对周围的人似乎如此无能感到困惑。但对于黑客来说，要了解自己有多优秀尤其困难，因为很难比较他们的工作。"
    },
    {
      "original": "This is easier in most other fields. In the hundred meters, you know in 10 seconds who's fastest. Even in math there seems to be a general consensus about which problems are hard to solve, and what constitutes a good solution.",
      "translated": "这在大多数其他领域要容易得多。在百米赛跑中，10秒内就能知道谁跑得最快。即使在数学领域，似乎也存在一种普遍共识，即哪些问题是难以解决的，以及什么构成一个好的解决方案。"
    },
    {
      "original": "But hacking is like writing. Who can say which of two novels is better? Certainly not the authors.With hackers, at least, other hackers can tell. That's because, unlike novelists, hackers collaborate on projects.",
      "translated": "但黑客就像作家。谁能说哪部小说更好呢？当然不是作者自己。对于黑客而言，至少其他黑客可以做出判断。这是因为，与小说家不同，黑客会在项目上进行合作。"
    },
    {
      "original": "When you get to hit a few difficult problems over the net at someone, you learn pretty quickly how hard they hit them back. But hackers can't watch themselves at work. So if you ask a great hacker how good he is, he's almost certain to reply, I don't know.",
      "translated": "当你通过网络向别人提出一些难题时，你会很快意识到他们反击的力度。但黑客无法观察到自己的工作。所以，如果你问一个出色的黑客他有多厉害，他几乎肯定会回答：我不知道。"
    },
    {
      "original": "He's not just being modest. He really doesn't know.And none of us know, except about people we've actually worked with. Which puts us in a weird situation: we don't know who our heroes should be. The hackers who become famous tend to become famous by random accidents of PR.",
      "translated": "他不只是谦虚。他真的不知道。我们大家也都不知道，除了那些我们真正合作过的人。这让我们处于一种奇怪的境地：我们不知道谁应该是我们的英雄。那些成名的黑客往往是由于公关方面的偶然事件而闻名的。"
    },
    {
      "original": "Occasionally I need to give an example of a great hacker, and I never know who to use. The first names that come to mind always tend to be people I know personally, but it seems lame to use them. So, I think, maybe I should say Richard Stallman, or Linus Torvalds, or Alan Kay, or someone famous like that.",
      "translated": "有时候我需要举一个伟大的黑客作为例子，却总是不知道该提谁。首先想到的总是我认识的人，但用他们似乎不够有说服力。所以，我在想，也许应该说是理查德·斯托曼，或者林纳斯·托瓦兹，或者艾伦·凯，或者其他类似这样的人物。"
    },
    {
      "original": "But I have no idea if these guys are great hackers. I've never worked with them on anything.If there is a Michael Jordan of hacking, no one knows, including him.CultivationFinally, the question the hackers have all been wondering about: how do you become a great hacker?",
      "translated": "但是我不知道这些人是否是顶尖的黑客。我从未和他们一起工作过。如果真有黑客界的迈克尔·乔丹，恐怕谁也不知道，包括他自己。最后，是所有黑客都想知道的问题：如何成为一名伟大的黑客？"
    },
    {
      "original": "I don't know if it's possible to make yourself into one. But it's certainly possible to do things that make you stupid, and if you can make yourself stupid, you can probably make yourself smart too.The key to being a good hacker may be to work on what you like.",
      "translated": "我不知道是否可能让自己成为一个这样的人。但确实有可能做一些让自己变愚蠢的事情，如果你能让自己变愚蠢，那么你也可能让自己变聪明。成为一位优秀的黑客的关键可能是去做你喜欢的事情。"
    },
    {
      "original": "When I think about the great hackers I know, one thing they have in common is the extreme difficulty of making them work on anything they don't want to. I don't know if this is cause or effect; it may be both.To do something well you have to love it.",
      "translated": "当我想到我认识的那些杰出的黑客时，他们有一个共同点，那就是让他们去做自己不想做的事情极其困难。我不知道这是原因还是结果；可能两者都是。要做好一件事，你必须热爱它。"
    },
    {
      "original": "So to the extent you can preserve hacking as something you love, you're likely to do it well. Try to keep the sense of wonder you had about programming at age 14. If you're worried that your current job is rotting your brain, it probably is.The best hackers tend to be smart, of course, but that's true in a lot of fields.",
      "translated": "所以，只要你能保持对编程的热爱，你就可能做得很好。努力保持你在14岁时对编程的那份好奇感。如果你担心目前的工作正在让你的大脑僵化，那可能确实如此。最好的黑客当然往往是聪明的，但这在很多领域都是一样的。"
    },
    {
      "original": "Is there some quality that's unique to hackers? I asked some friends, and the number one thing they mentioned was curiosity. I'd always supposed that all smart people were curious-- that curiosity was simply the first derivative of knowledge.",
      "translated": "黑客是否具有一些独特的品质？我问了一些朋友，他们提到的首要品质就是好奇心。我一直以为所有聪明人都很好奇——好奇心只不过是知识的一阶导数罢了。"
    },
    {
      "original": "But apparently hackers are particularly curious, especially about how things work. That makes sense, because programs are in effect giant descriptions of how things work.Several friends mentioned hackers' ability to concentrate-- their ability, as one put it, to \"tune out everything outside their own heads.'' I've certainly noticed this.",
      "translated": "但显然黑客们特别好奇，尤其是对事物运作原理的好奇。这合情合理，因为程序实际上是关于事物如何运作的宏大描述。几位朋友提到了黑客的专注能力——正如其中一位所说，他们能够“屏蔽掉自己大脑之外的一切”。我确实也注意到了这一点。"
    },
    {
      "original": "And I've heard several hackers say that after drinking even half a beer they can't program at all. So maybe hacking does require some special ability to focus. Perhaps great hackers can load a large amount of context into their head, so that when they look at a line of code, they see not just that line but the whole program around it.",
      "translated": "我听一些黑客说，他们喝了半杯啤酒之后就完全不能编程了。所以，也许黑客的确需要某种特殊的专注能力。也许伟大的黑客能够将大量上下文信息装进脑子里，这样当他们看到一行代码时，看到的不仅仅是那一行，而是整个程序的全貌。"
    },
    {
      "original": "John McPhee wrote that Bill Bradley's success as a basketball player was due partly to his extraordinary peripheral vision. \"Perfect'' eyesight means about 47 degrees of vertical peripheral vision. Bill Bradley had 70; he could see the basket when he was looking at the floor.",
      "translated": "约翰·麦克菲写道，比尔·布拉德利在篮球场上的成功部分归功于他异常出色的周边视觉。“完美”的视力意味着大约有47度的垂直周边视觉。而比尔·布拉德利则有70度；他能在看着地板的时候看到篮筐。"
    },
    {
      "original": "Maybe great hackers have some similar inborn ability. (I cheat by using a very dense language, which shrinks the court.)This could explain the disconnect over cubicles. Maybe the people in charge of facilities, not having any concentration to shatter, have no idea that working in a cubicle feels to a hacker like having one's brain in a blender.",
      "translated": "也许优秀的黑客具有一些相似的天赋。（我用一种非常密集的语言来作弊，这缩小了法庭。）这或许可以解释为什么隔间办公会有隔阂。也许负责设施的人员，没有需要集中精力的事情，因此他们不知道对于黑客来说，在隔间里工作就像把大脑放在搅拌机里一样。"
    },
    {
      "original": "(Whereas Bill, if the rumors of autism are true, knows all too well.)One difference I've noticed between great hackers and smart people in general is that hackers are more politically incorrect. To the extent there is a secret handshake among good hackers, it's when they know one another well enough to express opinions that would get them stoned to death by the general public.",
      "translated": "（至于比尔，如果自闭症的传闻属实，他对此再清楚不过了。）我注意到优秀黑客和普通聪明人之间的一个区别是，黑客更加不拘小节。如果说优秀黑客之间有一种秘密握手的方式，那便是他们彼此足够了解，可以表达那些会让公众群起而攻之的观点。"
    },
    {
      "original": "And I can see why political incorrectness would be a useful quality in programming. Programs are very complex and, at least in the hands of good programmers, very fluid. In such situations it's helpful to have a habit of questioning assumptions.Can you cultivate these qualities?",
      "translated": "我明白为什么在编程中政治不正确会是一种有用的品质。程序非常复杂，至少在优秀程序员的手中，它们非常灵活。在这种情况下，养成质疑假设的习惯是很有帮助的。你能培养这些品质吗？"
    },
    {
      "original": "I don't know. But you can at least not repress them. So here is my best shot at a recipe. If it is possible to make yourself into a great hacker, the way to do it may be to make the following deal with yourself: you never have to work on boring projects (unless your family will starve otherwise), and in return, you'll never allow yourself to do a half-assed job.",
      "translated": "我不知道。但至少你不要压制它们。这是我尽力给出的一个方案：如果你有可能把自己培养成一个优秀的黑客，那么你可以和自己达成如下协议：你永远不必从事无聊的项目（除非你的家人会因此挨饿），作为交换，你永远不允许自己敷衍了事。"
    },
    {
      "original": "All the great hackers I know seem to have made that deal, though perhaps none of them had any choice in the matter.Notes [1] In fairness, I have to say that IBM makes decent hardware. I wrote this on an IBM laptop.[2] They did turn out to be doomed.",
      "translated": "我认识的所有优秀的黑客似乎都达成了这样的协议，尽管也许他们对此并无选择。[1] 公平地说，我必须指出 IBM 制造的硬件相当不错。我就是在一台 IBM 笔记本上写的这篇文章。[2] 他们最终确实走向了失败。"
    },
    {
      "original": "They shut down a few months later.[3] I think this is what people mean when they talk about the \"meaning of life.\" On the face of it, this seems an odd idea. Life isn't an expression; how could it have meaning?",
      "translated": "他们几个月后关闭了。[3] 我认为这就是人们谈到“生命的意义”时所指的。表面上看，这似乎是个奇怪的想法。生命并不是一个表达式；它怎么可能有意义？"
    },
    {
      "original": "But it can have a quality that feels a lot like meaning. In a project like a compiler, you have to solve a lot of problems, but the problems all fall into a pattern, as in a signal. Whereas when the problems you have to solve are random, they seem like noise.",
      "translated": "但它可以具有一种很像意义的品质。在像编译器这样的项目中，你必须解决很多问题，但这些问题都符合某种模式，就像信号一样。而当你需要解决的问题是随机出现时，它们就显得像是噪声。"
    },
    {
      "original": "[4] Einstein at one point worked designing refrigerators. (He had equity.)[5] It's hard to say exactly what constitutes research in the computer world, but as a first approximation, it's software that doesn't have users.I don't think it's publication that makes the best hackers want to work in research departments.",
      "translated": "[4] 爱因斯坦曾一度从事设计冰箱的工作。（他持有股份。）[5] 很难准确界定计算机领域的研究到底是什么，但作为一种初步的近似，可以说研究就是那些没有用户的软件。我认为，吸引最优秀的黑客想要在研究部门工作的原因并不是发表论文。"
    },
    {
      "original": "I think it's mainly not having to have a three hour meeting with a product manager about problems integrating the Korean version of Word 13.27 with the talking paperclip.[6] Something similar has been happening for a long time in the construction industry.",
      "translated": "我觉得主要是不用和产品经理开三个小时的会，讨论将韩文版的Word 13.27与会说话的纸夹集成时遇到的问题。类似的情况在建筑行业已经存在很长时间了。"
    },
    {
      "original": "When you had a house built a couple hundred years ago, the local builders built everything in it. But increasingly what builders do is assemble components designed and manufactured by someone else. This has, like the arrival of desktop publishing, given people the freedom to experiment in disastrous ways, but it is certainly more efficient.[7] Google is much more dangerous to Microsoft than Netscape was.",
      "translated": "当你在几百年前建房子时，当地建筑工会负责建造房子里的一切。但如今，建筑商越来越多地组装由其他人设计和制造的组件。这就像桌面出版的出现一样，给了人们以灾难性的方式进行实验的自由，但无疑更加高效。[7] 谷歌对微软的威胁远大于网景公司。"
    },
    {
      "original": "Probably more dangerous than any other company has ever been. Not least because they're determined to fight. On their job listing page, they say that one of their \"core values'' is \"Don't be evil.'' From a company selling soybean oil or mining equipment, such a statement would merely be eccentric.",
      "translated": "可能比任何其他公司都更加危险。不仅仅因为他们决心抗争。在他们的职位列表页面上，他们说他们的“核心价值观”之一是“不作恶”。如果是销售大豆油或采矿设备的公司，这样的声明只会显得古怪。"
    },
    {
      "original": "But I think all of us in the computer world recognize who that is a declaration of war on.Thanks to Jessica Livingston, Robert Morris, and Sarah Harlin for reading earlier versions of this talk.Audio of talkThe Python ParadoxJapanese TranslationRussian TranslationItalian TranslationSpanish Translation If you liked this, you may also like Hackers & Painters.",
      "translated": "但是，我想计算机界的人都明白这是向谁宣战。感谢杰西卡·利文斯顿、罗伯特·莫里斯和萨拉·哈林阅读了这篇演讲的早期版本。演讲音频《Python悖论》日文翻译俄文翻译意大利文翻译西班牙文翻译如果你喜欢这篇文章，你可能也会喜欢《黑客与画家》。"
    }
  ],
  "translation_completed": "2025-07-28T21:59:43.207178",
  "translation_stats": {
    "total_paragraphs": 107,
    "success_count": 107,
    "success_rate": "100.0%"
  }
}