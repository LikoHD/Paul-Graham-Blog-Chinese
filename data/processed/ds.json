{
  "title": "Do Things that Don't Scale",
  "title_zh": "[待翻译] Do Things that Don't Scale",
  "url": "https://www.paulgraham.com/ds.html",
  "filename": "ds.html",
  "date": "2013-07-01",
  "id": 125,
  "content": {
    "success": true,
    "paragraphs": [
      "Want to start a startup? Get funded by Y Combinator. July 2013One of the most common types of advice we give at Y Combinator is to do things that don't scale. A lot of would-be founders believe that startups either take off or don't.",
      "You build something, make it available, and if you've made a better mousetrap, people beat a path to your door as promised. Or they don't, in which case the market must not exist. [1]Actually startups take off because the founders make them take off.",
      "There may be a handful that just grew by themselves, but usually it takes some sort of push to get them going. A good metaphor would be the cranks that car engines had before they got electric starters.",
      "Once the engine was going, it would keep going, but there was a separate and laborious process to get it going.RecruitThe most common unscalable thing founders have to do at the start is to recruit users manually.",
      "Nearly all startups have to. You can't wait for users to come to you. You have to go out and get them.Stripe is one of the most successful startups we've funded, and the problem they solved was an urgent one.",
      "If anyone could have sat back and waited for users, it was Stripe. But in fact they're famous within YC for aggressive early user acquisition.Startups building things for other startups have a big pool of potential users in the other companies we've funded, and none took better advantage of it than Stripe.",
      "At YC we use the term \"Collison installation\" for the technique they invented. More diffident founders ask \"Will you try our beta?\" and if the answer is yes, they say \"Great, we'll send you a link.\" But the Collison brothers weren't going to wait.",
      "When anyone agreed to try Stripe they'd say \"Right then, give me your laptop\" and set them up on the spot.There are two reasons founders resist going out and recruiting users individually. One is a combination of shyness and laziness.",
      "They'd rather sit at home writing code than go out and talk to a bunch of strangers and probably be rejected by most of them. But for a startup to succeed, at least one founder (usually the CEO) will have to spend a lot of time on sales and marketing.",
      "[2]The other reason founders ignore this path is that the absolute numbers seem so small at first. This can't be how the big, famous startups got started, they think. The mistake they make is to underestimate the power of compound growth.",
      "We encourage every startup to measure their progress by weekly growth rate. If you have 100 users, you need to get 10 more next week to grow 10% a week. And while 110 may not seem much better than 100, if you keep growing at 10% a week you'll be surprised how big the numbers get.",
      "After a year you'll have 14,000 users, and after 2 years you'll have 2 million.You'll be doing different things when you're acquiring users a thousand at a time, and growth has to slow down eventually.",
      "But if the market exists you can usually start by recruiting users manually and then gradually switch to less manual methods. [3]Airbnb is a classic example of this technique. Marketplaces are so hard to get rolling that you should expect to take heroic measures at first.",
      "In Airbnb's case, these consisted of going door to door in New York, recruiting new users and helping existing ones improve their listings. When I remember the Airbnbs during YC, I picture them with rolly bags, because when they showed up for tuesday dinners they'd always just flown back from somewhere.FragileAirbnb now seems like an unstoppable juggernaut, but early on it was so fragile that about 30 days of going out and engaging in person with users made the difference between success and failure.That initial fragility was not a unique feature of Airbnb.",
      "Almost all startups are fragile initially. And that's one of the biggest things inexperienced founders and investors (and reporters and know-it-alls on forums) get wrong about them. They unconsciously judge larval startups by the standards of established ones.",
      "They're like someone looking at a newborn baby and concluding \"there's no way this tiny creature could ever accomplish anything.\"It's harmless if reporters and know-it-alls dismiss your startup. They always get things wrong.",
      "It's even ok if investors dismiss your startup; they'll change their minds when they see growth. The big danger is that you'll dismiss your startup yourself. I've seen it happen. I often have to encourage founders who don't see the full potential of what they're building.",
      "Even Bill Gates made that mistake. He returned to Harvard for the fall semester after starting Microsoft. He didn't stay long, but he wouldn't have returned at all if he'd realized Microsoft was going to be even a fraction of the size it turned out to be.",
      "[4]The question to ask about an early stage startup is not \"is this company taking over the world?\" but \"how big could this company get if the founders did the right things?\" And the right things often seem both laborious and inconsequential at the time.",
      "Microsoft can't have seemed very impressive when it was just a couple guys in Albuquerque writing Basic interpreters for a market of a few thousand hobbyists (as they were then called), but in retrospect that was the optimal path to dominating microcomputer software.",
      "And I know Brian Chesky and Joe Gebbia didn't feel like they were en route to the big time as they were taking \"professional\" photos of their first hosts' apartments. They were just trying to survive.",
      "But in retrospect that too was the optimal path to dominating a big market.How do you find users to recruit manually? If you build something to solve your own problems, then you only have to find your peers, which is usually straightforward.",
      "Otherwise you'll have to make a more deliberate effort to locate the most promising vein of users. The usual way to do that is to get some initial set of users by doing a comparatively untargeted launch, and then to observe which kind seem most enthusiastic, and seek out more like them.",
      "For example, Ben Silbermann noticed that a lot of the earliest Pinterest users were interested in design, so he went to a conference of design bloggers to recruit users, and that worked well. [5]DelightYou should take extraordinary measures not just to acquire users, but also to make them happy.",
      "For as long as they could (which turned out to be surprisingly long), Wufoo sent each new user a hand-written thank you note. Your first users should feel that signing up with you was one of the best choices they ever made.",
      "And you in turn should be racking your brains to think of new ways to delight them.Why do we have to teach startups this? Why is it counterintuitive for founders? Three reasons, I think.One is that a lot of startup founders are trained as engineers, and customer service is not part of the training of engineers.",
      "You're supposed to build things that are robust and elegant, not be slavishly attentive to individual users like some kind of salesperson. Ironically, part of the reason engineering is traditionally averse to handholding is that its traditions date from a time when engineers were less powerful — when they were only in charge of their narrow domain of building things, rather than running the whole show.",
      "You can be ornery when you're Scotty, but not when you're Kirk.Another reason founders don't focus enough on individual customers is that they worry it won't scale. But when founders of larval startups worry about this, I point out that in their current state they have nothing to lose.",
      "Maybe if they go out of their way to make existing users super happy, they'll one day have too many to do so much for. That would be a great problem to have. See if you can make it happen. And incidentally, when it does, you'll find that delighting customers scales better than you expected.",
      "Partly because you can usually find ways to make anything scale more than you would have predicted, and partly because delighting customers will by then have permeated your culture.I have never once seen a startup lured down a blind alley by trying too hard to make their initial users happy.But perhaps the biggest thing preventing founders from realizing how attentive they could be to their users is that they've never experienced such attention themselves.",
      "Their standards for customer service have been set by the companies they've been customers of, which are mostly big ones. Tim Cook doesn't send you a hand-written note after you buy a laptop. He can't.",
      "But you can. That's one advantage of being small: you can provide a level of service no big company can. [6]Once you realize that existing conventions are not the upper bound on user experience, it's interesting in a very pleasant way to think about how far you could go to delight your users.ExperienceI was trying to think of a phrase to convey how extreme your attention to users should be, and I realized Steve Jobs had already done it: insanely great.",
      "Steve wasn't just using \"insanely\" as a synonym for \"very.\" He meant it more literally — that one should focus on quality of execution to a degree that in everyday life would be considered pathological.All the most successful startups we've funded have, and that probably doesn't surprise would-be founders.",
      "What novice founders don't get is what insanely great translates to in a larval startup. When Steve Jobs started using that phrase, Apple was already an established company. He meant the Mac (and its documentation and even packaging — such is the nature of obsession) should be insanely well designed and manufactured.",
      "That's not hard for engineers to grasp. It's just a more extreme version of designing a robust and elegant product.What founders have a hard time grasping (and Steve himself might have had a hard time grasping) is what insanely great morphs into as you roll the time slider back to the first couple months of a startup's life.",
      "It's not the product that should be insanely great, but the experience of being your user. The product is just one component of that. For a big company it's necessarily the dominant one. But you can and should give users an insanely great experience with an early, incomplete, buggy product, if you make up the difference with attentiveness.Can, perhaps, but should?",
      "Yes. Over-engaging with early users is not just a permissible technique for getting growth rolling. For most successful startups it's a necessary part of the feedback loop that makes the product good.",
      "Making a better mousetrap is not an atomic operation. Even if you start the way most successful startups have, by building something you yourself need, the first thing you build is never quite right.",
      "And except in domains with big penalties for making mistakes, it's often better not to aim for perfection initially. In software, especially, it usually works best to get something in front of users as soon as it has a quantum of utility, and then see what they do with it.",
      "Perfectionism is often an excuse for procrastination, and in any case your initial model of users is always inaccurate, even if you're one of them. [7]The feedback you get from engaging directly with your earliest users will be the best you ever get.",
      "When you're so big you have to resort to focus groups, you'll wish you could go over to your users' homes and offices and watch them use your stuff like you did when there were only a handful of them.FireSometimes the right unscalable trick is to focus on a deliberately narrow market.",
      "It's like keeping a fire contained at first to get it really hot before adding more logs.That's what Facebook did. At first it was just for Harvard students. In that form it only had a potential market of a few thousand people, but because they felt it was really for them, a critical mass of them signed up.",
      "After Facebook stopped being for Harvard students, it remained for students at specific colleges for quite a while. When I interviewed Mark Zuckerberg at Startup School, he said that while it was a lot of work creating course lists for each school, doing that made students feel the site was their natural home.Any startup that could be described as a marketplace usually has to start in a subset of the market, but this can work for other startups as well.",
      "It's always worth asking if there's a subset of the market in which you can get a critical mass of users quickly. [8]Most startups that use the contained fire strategy do it unconsciously. They build something for themselves and their friends, who happen to be the early adopters, and only realize later that they could offer it to a broader market.",
      "The strategy works just as well if you do it unconsciously. The biggest danger of not being consciously aware of this pattern is for those who naively discard part of it. E.g. if you don't build something for yourself and your friends, or even if you do, but you come from the corporate world and your friends are not early adopters, you'll no longer have a perfect initial market handed to you on a platter.Among companies, the best early adopters are usually other startups.",
      "They're more open to new things both by nature and because, having just been started, they haven't made all their choices yet. Plus when they succeed they grow fast, and you with them. It was one of many unforeseen advantages of the YC model (and specifically of making YC big) that B2B startups now have an instant market of hundreds of other startups ready at hand.MerakiFor hardware startups there's a variant of doing things that don't scale that we call \"pulling a Meraki.\" Although we didn't fund Meraki, the founders were Robert Morris's grad students, so we know their history.",
      "They got started by doing something that really doesn't scale: assembling their routers themselves.Hardware startups face an obstacle that software startups don't. The minimum order for a factory production run is usually several hundred thousand dollars.",
      "Which can put you in a catch-22: without a product you can't generate the growth you need to raise the money to manufacture your product. Back when hardware startups had to rely on investors for money, you had to be pretty convincing to overcome this.",
      "The arrival of crowdfunding (or more precisely, preorders) has helped a lot. But even so I'd advise startups to pull a Meraki initially if they can. That's what Pebble did. The Pebbles assembled the first several hundred watches themselves.",
      "If they hadn't gone through that phase, they probably wouldn't have sold $10 million worth of watches when they did go on Kickstarter.Like paying excessive attention to early customers, fabricating things yourself turns out to be valuable for hardware startups.",
      "You can tweak the design faster when you're the factory, and you learn things you'd never have known otherwise. Eric Migicovsky of Pebble said one of the things he learned was \"how valuable it was to source good screws.\" Who knew?ConsultSometimes we advise founders of B2B startups to take over-engagement to an extreme, and to pick a single user and act as if they were consultants building something just for that one user.",
      "The initial user serves as the form for your mold; keep tweaking till you fit their needs perfectly, and you'll usually find you've made something other users want too. Even if there aren't many of them, there are probably adjacent territories that have more.",
      "As long as you can find just one user who really needs something and can act on that need, you've got a toehold in making something people want, and that's as much as any startup needs initially. [9]Consulting is the canonical example of work that doesn't scale.",
      "But (like other ways of bestowing one's favors liberally) it's safe to do it so long as you're not being paid to. That's where companies cross the line. So long as you're a product company that's merely being extra attentive to a customer, they're very grateful even if you don't solve all their problems.",
      "But when they start paying you specifically for that attentiveness — when they start paying you by the hour — they expect you to do everything.Another consulting-like technique for recruiting initially lukewarm users is to use your software yourselves on their behalf.",
      "We did that at Viaweb. When we approached merchants asking if they wanted to use our software to make online stores, some said no, but they'd let us make one for them. Since we would do anything to get users, we did.",
      "We felt pretty lame at the time. Instead of organizing big strategic e-commerce partnerships, we were trying to sell luggage and pens and men's shirts. But in retrospect it was exactly the right thing to do, because it taught us how it would feel to merchants to use our software.",
      "Sometimes the feedback loop was near instantaneous: in the middle of building some merchant's site I'd find I needed a feature we didn't have, so I'd spend a couple hours implementing it and then resume building the site.ManualThere's a more extreme variant where you don't just use your software, but are your software.",
      "When you only have a small number of users, you can sometimes get away with doing by hand things that you plan to automate later. This lets you launch faster, and when you do finally automate yourself out of the loop, you'll know exactly what to build because you'll have muscle memory from doing it yourself.When manual components look to the user like software, this technique starts to have aspects of a practical joke.",
      "For example, the way Stripe delivered \"instant\" merchant accounts to its first users was that the founders manually signed them up for traditional merchant accounts behind the scenes.Some startups could be entirely manual at first.",
      "If you can find someone with a problem that needs solving and you can solve it manually, go ahead and do that for as long as you can, and then gradually automate the bottlenecks. It would be a little frightening to be solving users' problems in a way that wasn't yet automatic, but less frightening than the far more common case of having something automatic that doesn't yet solve anyone's problems.BigI should mention one sort of initial tactic that usually doesn't work: the Big Launch.",
      "I occasionally meet founders who seem to believe startups are projectiles rather than powered aircraft, and that they'll make it big if and only if they're launched with sufficient initial velocity. They want to launch simultaneously in 8 different publications, with embargoes.",
      "And on a tuesday, of course, since they read somewhere that's the optimum day to launch something.It's easy to see how little launches matter. Think of some successful startups. How many of their launches do you remember?",
      "All you need from a launch is some initial core of users. How well you're doing a few months later will depend more on how happy you made those users than how many there were of them. [10]So why do founders think launches matter?",
      "A combination of solipsism and laziness. They think what they're building is so great that everyone who hears about it will immediately sign up. Plus it would be so much less work if you could get users merely by broadcasting your existence, rather than recruiting them one at a time.",
      "But even if what you're building really is great, getting users will always be a gradual process — partly because great things are usually also novel, but mainly because users have other things to think about.Partnerships too usually don't work.",
      "They don't work for startups in general, but they especially don't work as a way to get growth started. It's a common mistake among inexperienced founders to believe that a partnership with a big company will be their big break.",
      "Six months later they're all saying the same thing: that was way more work than we expected, and we ended up getting practically nothing out of it. [11]It's not enough just to do something extraordinary initially.",
      "You have to make an extraordinary effort initially. Any strategy that omits the effort — whether it's expecting a big launch to get you users, or a big partner — is ipso facto suspect.VectorThe need to do something unscalably laborious to get started is so nearly universal that it might be a good idea to stop thinking of startup ideas as scalars.",
      "Instead we should try thinking of them as pairs of what you're going to build, plus the unscalable thing(s) you're going to do initially to get the company going.It could be interesting to start viewing startup ideas this way, because now that there are two components you can try to be imaginative about the second as well as the first.",
      "But in most cases the second component will be what it usually is — recruit users manually and give them an overwhelmingly good experience — and the main benefit of treating startups as vectors will be to remind founders they need to work hard in two dimensions.",
      "[12]In the best case, both components of the vector contribute to your company's DNA: the unscalable things you have to do to get started are not merely a necessary evil, but change the company permanently for the better.",
      "If you have to be aggressive about user acquisition when you're small, you'll probably still be aggressive when you're big. If you have to manufacture your own hardware, or use your software on users's behalf, you'll learn things you couldn't have learned otherwise.",
      "And most importantly, if you have to work hard to delight users when you only have a handful of them, you'll keep doing it when you have a lot.Notes[1] Actually Emerson never mentioned mousetraps specifically.",
      "He wrote \"If a man has good corn or wood, or boards, or pigs, to sell, or can make better chairs or knives, crucibles or church organs, than anybody else, you will find a broad hard-beaten road to his house, though it be in the woods.\"[2] Thanks to Sam Altman for suggesting I make this explicit.",
      "And no, you can't avoid doing sales by hiring someone to do it for you. You have to do sales yourself initially. Later you can hire a real salesperson to replace you.[3] The reason this works is that as you get bigger, your size helps you grow.",
      "Patrick Collison wrote \"At some point, there was a very noticeable change in how Stripe felt. It tipped from being this boulder we had to push to being a train car that in fact had its own momentum.\"[4] One of the more subtle ways in which YC can help founders is by calibrating their ambitions, because we know exactly how a lot of successful startups looked when they were just getting started.[5] If you're building something for which you can't easily get a small set of users to observe — e.g.",
      "enterprise software — and in a domain where you have no connections, you'll have to rely on cold calls and introductions. But should you even be working on such an idea?[6] Garry Tan pointed out an interesting trap founders fall into in the beginning.",
      "They want so much to seem big that they imitate even the flaws of big companies, like indifference to individual users. This seems to them more \"professional.\" Actually it's better to embrace the fact that you're small and use whatever advantages that brings.[7] Your user model almost couldn't be perfectly accurate, because users' needs often change in response to what you build for them.",
      "Build them a microcomputer, and suddenly they need to run spreadsheets on it, because the arrival of your new microcomputer causes someone to invent the spreadsheet.[8] If you have to choose between the subset that will sign up quickest and those that will pay the most, it's usually best to pick the former, because those are probably the early adopters.",
      "They'll have a better influence on your product, and they won't make you expend as much effort on sales. And though they have less money, you don't need that much to maintain your target growth rate early on.[9] Yes, I can imagine cases where you could end up making something that was really only useful for one user.",
      "But those are usually obvious, even to inexperienced founders. So if it's not obvious you'd be making something for a market of one, don't worry about that danger.[10] There may even be an inverse correlation between launch magnitude and success.",
      "The only launches I remember are famous flops like the Segway and Google Wave. Wave is a particularly alarming example, because I think it was actually a great idea that was killed partly by its overdone launch.[11] Google grew big on the back of Yahoo, but that wasn't a partnership.",
      "Yahoo was their customer.[12] It will also remind founders that an idea where the second component is empty — an idea where there is nothing you can do to get going, e.g. because you have no way to find users to recruit manually — is probably a bad idea, at least for those founders.Thanks to Sam Altman, Paul Buchheit, Patrick Collison, Kevin Hale, Steven Levy, Jessica Livingston, Geoff Ralston, and Garry Tan for reading drafts of this.Japanese TranslationRussian TranslationFrench TranslationArabic TranslationItalian TranslationKorean Translation"
    ],
    "word_count": 4289,
    "paragraph_count": 84
  },
  "processed_at": "2025-07-26T19:05:27.433921",
  "paragraphs": [
    {
      "original": "Want to start a startup? Get funded by Y Combinator. July 2013One of the most common types of advice we give at Y Combinator is to do things that don't scale. A lot of would-be founders believe that startups either take off or don't.",
      "translated": "想要创业？那就争取获得 Y Combinator 的投资吧。2013年7月\n\n在 Y Combinator，我们最常给出的一条建议就是去做那些无法规模化的事情。许多潜在的创业者认为，创业公司要么一飞冲天，要么根本就飞不起来。"
    },
    {
      "original": "You build something, make it available, and if you've made a better mousetrap, people beat a path to your door as promised. Or they don't, in which case the market must not exist. [1]Actually startups take off because the founders make them take off.",
      "translated": "你建造了某样东西，使之可以被使用，如果你制造了一个更好的捕鼠器，人们就会如预期般踏破你的门槛。或者他们不会，这样的话市场可能并不存在。[1]实际上，初创公司之所以能够腾飞，是因为创始人使它们腾飞。"
    },
    {
      "original": "There may be a handful that just grew by themselves, but usually it takes some sort of push to get them going. A good metaphor would be the cranks that car engines had before they got electric starters.",
      "translated": "可能有少数是自然而然发展起来的，但通常都需要某种推动力才能启动。一个很好的比喻就是，在汽车发动机有了电动启动机之前，那些手动摇柄。"
    },
    {
      "original": "Once the engine was going, it would keep going, but there was a separate and laborious process to get it going.RecruitThe most common unscalable thing founders have to do at the start is to recruit users manually.",
      "translated": "一旦发动机启动，它就会继续运行，但启动它却是一个单独且繁琐的过程。创始人在初创阶段最常遇到的无法扩展的事情就是手动招募用户。"
    },
    {
      "original": "Nearly all startups have to. You can't wait for users to come to you. You have to go out and get them.Stripe is one of the most successful startups we've funded, and the problem they solved was an urgent one.",
      "translated": "几乎所有的初创公司都必须这样做。你不能等着用户自己找上门来。你必须主动出击去争取他们。Stripe 是我们资助过的最成功的初创公司之一，他们解决的问题非常紧迫。"
    },
    {
      "original": "If anyone could have sat back and waited for users, it was Stripe. But in fact they're famous within YC for aggressive early user acquisition.Startups building things for other startups have a big pool of potential users in the other companies we've funded, and none took better advantage of it than Stripe.",
      "translated": "如果说有哪家公司可以坐等用户上门，那一定是 Stripe。但事实上，他们在 YC 内因积极的早期用户获取而闻名。为其他初创公司提供服务的初创企业，在我们支持的其他公司中有一个庞大的潜在用户群体，而没有哪家公司比 Stripe 更好地利用了这一点。"
    },
    {
      "original": "At YC we use the term \"Collison installation\" for the technique they invented. More diffident founders ask \"Will you try our beta?\" and if the answer is yes, they say \"Great, we'll send you a link.\" But the Collison brothers weren't going to wait.",
      "translated": "在YC，我们使用“Collison 安装”这个术语来指代他们发明的技术。更加谦逊的创始人会问：“您愿意尝试我们的测试版吗？”如果对方回答是肯定的，他们就会说：“太好了，我们会给您发一个链接。” 但 Collison 兄弟可不愿等待。"
    },
    {
      "original": "When anyone agreed to try Stripe they'd say \"Right then, give me your laptop\" and set them up on the spot.There are two reasons founders resist going out and recruiting users individually. One is a combination of shyness and laziness.",
      "translated": "当任何人同意尝试使用 Stripe 时，他们会说“好吧，把你的笔记本电脑给我”，然后当场为他们设置。创始人抗拒亲自出去招募用户有两个原因。一个是害羞和懒惰的结合。"
    },
    {
      "original": "They'd rather sit at home writing code than go out and talk to a bunch of strangers and probably be rejected by most of them. But for a startup to succeed, at least one founder (usually the CEO) will have to spend a lot of time on sales and marketing.",
      "translated": "他们宁愿待在家里写代码，也不愿意出去与一群陌生人交流，还可能会被大多数人拒绝。但要让一家初创公司成功，至少有一位创始人（通常是首席执行官）必须花大量时间在销售和营销上。"
    },
    {
      "original": "[2]The other reason founders ignore this path is that the absolute numbers seem so small at first. This can't be how the big, famous startups got started, they think. The mistake they make is to underestimate the power of compound growth.",
      "translated": "[2]创始人忽视这条路径的另一个原因是，绝对数字一开始看起来如此之小。他们认为，这不可能是那些大型、著名的初创公司起步的方式。他们犯的错误在于低估了复合增长的力量。"
    },
    {
      "original": "We encourage every startup to measure their progress by weekly growth rate. If you have 100 users, you need to get 10 more next week to grow 10% a week. And while 110 may not seem much better than 100, if you keep growing at 10% a week you'll be surprised how big the numbers get.",
      "translated": "我们鼓励每一家创业公司通过每周增长率来衡量自己的进展。如果你有100个用户，那么你需要在下周再获得10个用户，以实现每周10%的增长。虽然110看起来比100好不了多少，但如果你能保持每周10%的增长率，你会惊讶于数字的增长速度。"
    },
    {
      "original": "After a year you'll have 14,000 users, and after 2 years you'll have 2 million.You'll be doing different things when you're acquiring users a thousand at a time, and growth has to slow down eventually.",
      "translated": "一年后你将拥有14,000名用户，两年后你将拥有200万名用户。当你的用户增长到每次获得一千名新用户时，你将从事不同的工作，增长最终也必须放缓。"
    },
    {
      "original": "But if the market exists you can usually start by recruiting users manually and then gradually switch to less manual methods. [3]Airbnb is a classic example of this technique. Marketplaces are so hard to get rolling that you should expect to take heroic measures at first.",
      "translated": "但如果市场存在，你通常可以从手动招募用户开始，然后逐渐转向更少手动的方法。[3] Airbnb 就是这种技术的一个经典例子。市场平台启动起来非常困难，因此你应该预料到最初需要采取非常措施。"
    },
    {
      "original": "In Airbnb's case, these consisted of going door to door in New York, recruiting new users and helping existing ones improve their listings. When I remember the Airbnbs during YC, I picture them with rolly bags, because when they showed up for tuesday dinners they'd always just flown back from somewhere.FragileAirbnb now seems like an unstoppable juggernaut, but early on it was so fragile that about 30 days of going out and engaging in person with users made the difference between success and failure.That initial fragility was not a unique feature of Airbnb.",
      "translated": "在Airbnb的例子中，这些措施包括在纽约挨家挨户地走访，招募新用户并帮助现有用户改进他们的房源。当我回想起YC时期的Airbnb团队时，我脑海中浮现的是他们拖着行李箱的样子，因为每当他们来参加周二晚宴时，总是刚从某个地方飞回来。现在的Airbnb似乎势不可挡，但在早期，它非常脆弱，以至于大约30天的亲自与用户互动，就决定了它的成功或失败。这种最初的脆弱性并不是Airbnb独有的特征。"
    },
    {
      "original": "Almost all startups are fragile initially. And that's one of the biggest things inexperienced founders and investors (and reporters and know-it-alls on forums) get wrong about them. They unconsciously judge larval startups by the standards of established ones.",
      "translated": "几乎所有初创公司起初都是脆弱的。这是经验不足的创始人、投资者（以及记者和论坛上的自以为是者）对初创公司最大的误解之一。他们无意识地用成熟公司的标准来评判这些初创企业。"
    },
    {
      "original": "They're like someone looking at a newborn baby and concluding \"there's no way this tiny creature could ever accomplish anything.\"It's harmless if reporters and know-it-alls dismiss your startup. They always get things wrong.",
      "translated": "他们就像看着一个刚出生的婴儿然后断言“这个小生命根本不可能有所作为。”如果记者和自以为是的人轻视你的创业公司，这并无大碍。他们总是看错事情。"
    },
    {
      "original": "It's even ok if investors dismiss your startup; they'll change their minds when they see growth. The big danger is that you'll dismiss your startup yourself. I've seen it happen. I often have to encourage founders who don't see the full potential of what they're building.",
      "translated": "即使投资者对你的初创公司不以为然，也没关系；当他们看到增长时，他们会改变看法的。最大的危险是你自己对你的初创公司失去信心。我见过这种情况发生。我经常需要鼓励那些没有看到自己所建立项目全部潜力的创始人。"
    },
    {
      "original": "Even Bill Gates made that mistake. He returned to Harvard for the fall semester after starting Microsoft. He didn't stay long, but he wouldn't have returned at all if he'd realized Microsoft was going to be even a fraction of the size it turned out to be.",
      "translated": "就连比尔·盖茨也犯过这样的错误。他在创立微软后还回到哈佛大学继续秋季学期的课程。虽然他没有在那里待很久，但如果他当时意识到微软将会发展到后来的规模，哪怕只是其中的一部分，他根本就不会回去。"
    },
    {
      "original": "[4]The question to ask about an early stage startup is not \"is this company taking over the world?\" but \"how big could this company get if the founders did the right things?\" And the right things often seem both laborious and inconsequential at the time.",
      "translated": "对于早期的创业公司，我们应该问的不是“这家公司能否征服世界？”而是“如果创始人做对了事情，这家公司能发展到多大？”而这些正确的事情往往在当时看起来既繁琐又微不足道。"
    },
    {
      "original": "Microsoft can't have seemed very impressive when it was just a couple guys in Albuquerque writing Basic interpreters for a market of a few thousand hobbyists (as they were then called), but in retrospect that was the optimal path to dominating microcomputer software.",
      "translated": "当微软还只是阿尔伯克基的几个家伙为几千名业余爱好者（当时的称呼）编写Basic解释器时，可能看起来并不起眼，但事后看来，那正是主导微型计算机软件的最佳路径。"
    },
    {
      "original": "And I know Brian Chesky and Joe Gebbia didn't feel like they were en route to the big time as they were taking \"professional\" photos of their first hosts' apartments. They were just trying to survive.",
      "translated": "我知道，在为他们的第一批房东拍摄“专业”照片时，Brian Chesky 和 Joe Gebbia 并没有觉得自己正在走向成功。他们只是为了生存而努力。"
    },
    {
      "original": "But in retrospect that too was the optimal path to dominating a big market.How do you find users to recruit manually? If you build something to solve your own problems, then you only have to find your peers, which is usually straightforward.",
      "translated": "但事后看来，那也是占领大市场的最佳途径。如何手动寻找用户？如果你构建的是解决自身问题的产品，那么你只需要找到你的同行，这通常是比较直接的。"
    },
    {
      "original": "Otherwise you'll have to make a more deliberate effort to locate the most promising vein of users. The usual way to do that is to get some initial set of users by doing a comparatively untargeted launch, and then to observe which kind seem most enthusiastic, and seek out more like them.",
      "translated": "否则，你将不得不更加刻意地去寻找最有潜力的用户群体。通常的做法是通过相对不那么精准的发布来获得一批初始用户，然后观察哪些用户表现得最为热情，并寻找更多类似的用户。"
    },
    {
      "original": "For example, Ben Silbermann noticed that a lot of the earliest Pinterest users were interested in design, so he went to a conference of design bloggers to recruit users, and that worked well. [5]DelightYou should take extraordinary measures not just to acquire users, but also to make them happy.",
      "translated": "例如，本·西尔伯曼注意到最早的 Pinterest 用户中有很多对设计感兴趣，于是他前往一个设计博主的会议招募用户，效果很好。[5]你应该采取非同寻常的措施，不仅是为了获取用户，还要让他们感到满意。"
    },
    {
      "original": "For as long as they could (which turned out to be surprisingly long), Wufoo sent each new user a hand-written thank you note. Your first users should feel that signing up with you was one of the best choices they ever made.",
      "translated": "只要条件允许（事实证明，这一做法持续了相当长的时间），Wufoo 会给每位新用户寄送一封手写的感谢信。你应该让你的首批用户感到，注册你的服务是他们做出的最明智的选择之一。"
    },
    {
      "original": "And you in turn should be racking your brains to think of new ways to delight them.Why do we have to teach startups this? Why is it counterintuitive for founders? Three reasons, I think.One is that a lot of startup founders are trained as engineers, and customer service is not part of the training of engineers.",
      "translated": "而你应该绞尽脑汁去想出新的方法来取悦他们。为什么我们不得不教初创企业这一点？为什么这对创始人来说是反直觉的？我认为有三个原因。一是许多初创企业的创始人是工程师出身，而客户服务并不是工程师培训的一部分。"
    },
    {
      "original": "You're supposed to build things that are robust and elegant, not be slavishly attentive to individual users like some kind of salesperson. Ironically, part of the reason engineering is traditionally averse to handholding is that its traditions date from a time when engineers were less powerful — when they were only in charge of their narrow domain of building things, rather than running the whole show.",
      "translated": "你应该构建既稳健又优雅的事物，而不是像销售人员那样对个别用户过分关注。讽刺的是，工程领域传统上对这种手把手指导的反感部分原因在于，其传统可以追溯到工程师权力较小的时代——当时他们仅负责狭小的建造领域，而不是掌控全局。"
    },
    {
      "original": "You can be ornery when you're Scotty, but not when you're Kirk.Another reason founders don't focus enough on individual customers is that they worry it won't scale. But when founders of larval startups worry about this, I point out that in their current state they have nothing to lose.",
      "translated": "当你扮演斯科蒂时可以固执，但当你扮演柯克时就不行。创始人不足够关注个别客户的一个原因是，他们担心这样做无法扩展。但当初创企业的创始人担心这一点时，我会指出，他们目前的状态下没有什么可失去的。"
    },
    {
      "original": "Maybe if they go out of their way to make existing users super happy, they'll one day have too many to do so much for. That would be a great problem to have. See if you can make it happen. And incidentally, when it does, you'll find that delighting customers scales better than you expected.",
      "translated": "也许，如果他们竭尽全力让现有用户非常满意，总有一天用户数量会多到无法继续这样做。这将是一个很好的问题。看看你能否让它发生。顺便说一句，当这种情况真的发生时，你会发现取悦客户的效果比你预期的要好得多。"
    },
    {
      "original": "Partly because you can usually find ways to make anything scale more than you would have predicted, and partly because delighting customers will by then have permeated your culture.I have never once seen a startup lured down a blind alley by trying too hard to make their initial users happy.But perhaps the biggest thing preventing founders from realizing how attentive they could be to their users is that they've never experienced such attention themselves.",
      "translated": "部分原因是你通常能找到方法让事情的扩展性超过你最初的预期，部分原因是在那时，让客户满意的文化已经渗透到你的公司中。我从未见过有初创公司因为过于努力地让初始用户满意而走入死胡同。但或许阻碍创始人意识到他们可以多么关注用户的最大原因在于，他们自己从未体验过这种关注。"
    },
    {
      "original": "Their standards for customer service have been set by the companies they've been customers of, which are mostly big ones. Tim Cook doesn't send you a hand-written note after you buy a laptop. He can't.",
      "translated": "他们的客户服务标准是由他们作为顾客的那些公司设定的，而这些公司大多是大公司。你在购买笔记本电脑后，蒂姆·库克不会给你寄手写便条。他做不到。"
    },
    {
      "original": "But you can. That's one advantage of being small: you can provide a level of service no big company can. [6]Once you realize that existing conventions are not the upper bound on user experience, it's interesting in a very pleasant way to think about how far you could go to delight your users.ExperienceI was trying to think of a phrase to convey how extreme your attention to users should be, and I realized Steve Jobs had already done it: insanely great.",
      "translated": "但你可以做到。这就是小型企业的优势之一：你能提供大公司无法企及的服务水平。一旦你意识到现有的规范并不是用户体验的上限，思考如何让用户体验达到极致就变得非常有趣且令人愉悦。经验告诉我，我在试图找到一个短语来表达你应该对用户关注到何种程度时，意识到史蒂夫·乔布斯已经做到了：极致出色。"
    },
    {
      "original": "Steve wasn't just using \"insanely\" as a synonym for \"very.\" He meant it more literally — that one should focus on quality of execution to a degree that in everyday life would be considered pathological.All the most successful startups we've funded have, and that probably doesn't surprise would-be founders.",
      "translated": "史蒂夫用“疯狂地”并不仅仅是想表达“非常”。他更接近于字面意思——即在执行的质量上达到在日常生活中会被认为是病态的程度。我们资助过的所有最成功的初创公司都是如此，这可能不会让有志于创办公司的创业者感到惊讶。"
    },
    {
      "original": "What novice founders don't get is what insanely great translates to in a larval startup. When Steve Jobs started using that phrase, Apple was already an established company. He meant the Mac (and its documentation and even packaging — such is the nature of obsession) should be insanely well designed and manufactured.",
      "translated": "初出茅庐的创业者往往不明白，“极度出色”在一家初创公司中具体意味着什么。当史蒂夫·乔布斯开始使用这个短语时，苹果已经是一家成熟的企业了。他的意思是，Mac（包括其文档甚至包装——这就是痴迷的本质）应该被设计和制造得极为出色。"
    },
    {
      "original": "That's not hard for engineers to grasp. It's just a more extreme version of designing a robust and elegant product.What founders have a hard time grasping (and Steve himself might have had a hard time grasping) is what insanely great morphs into as you roll the time slider back to the first couple months of a startup's life.",
      "translated": "这并不难让工程师理解。它只是设计一个坚固而优雅的产品的更极端版本。创始人难以理解的是（甚至史蒂夫本人可能也难以理解），在初创公司的头几个月里，“极其出色”会变成什么样子。"
    },
    {
      "original": "It's not the product that should be insanely great, but the experience of being your user. The product is just one component of that. For a big company it's necessarily the dominant one. But you can and should give users an insanely great experience with an early, incomplete, buggy product, if you make up the difference with attentiveness.Can, perhaps, but should?",
      "translated": "不应该只是产品本身极其出色，而是成为你的用户这一过程的体验应该极其出色。产品只是这一过程中的一个组成部分。对于大公司来说，这自然是主要的部分。但是，即使产品尚处于早期阶段，不完善甚至存在漏洞，你也应该通过细致周到的服务来弥补这些不足，从而给予用户极其出色的体验。可以这样做，但应该这样做吗？"
    },
    {
      "original": "Yes. Over-engaging with early users is not just a permissible technique for getting growth rolling. For most successful startups it's a necessary part of the feedback loop that makes the product good.",
      "translated": "是的。过度与早期用户互动不仅仅是一种可接受的促进增长的手段。对于大多数成功的初创公司来说，这是使产品变得更好的反馈循环中必不可少的一部分。"
    },
    {
      "original": "Making a better mousetrap is not an atomic operation. Even if you start the way most successful startups have, by building something you yourself need, the first thing you build is never quite right.",
      "translated": "制造一个更好的捕鼠器并不是一个原子操作。即使你像大多数成功的初创公司那样，从构建自己需要的东西开始，你最初构建的东西也永远不会完全正确。"
    },
    {
      "original": "And except in domains with big penalties for making mistakes, it's often better not to aim for perfection initially. In software, especially, it usually works best to get something in front of users as soon as it has a quantum of utility, and then see what they do with it.",
      "translated": "除了在犯错会带来巨大惩罚的领域之外，通常最初不必追求完美。特别是在软件开发中，通常最好的做法是尽快将具有一定实用价值的产品放在用户面前，然后观察他们的使用情况。"
    },
    {
      "original": "Perfectionism is often an excuse for procrastination, and in any case your initial model of users is always inaccurate, even if you're one of them. [7]The feedback you get from engaging directly with your earliest users will be the best you ever get.",
      "translated": "完美主义常常是拖延的借口，而且无论如何，你最初对用户的模型总是不准确的，即使你自己也是其中之一。你从最早的用户那里直接获得的反馈将是你能得到的最好的反馈。"
    },
    {
      "original": "When you're so big you have to resort to focus groups, you'll wish you could go over to your users' homes and offices and watch them use your stuff like you did when there were only a handful of them.FireSometimes the right unscalable trick is to focus on a deliberately narrow market.",
      "translated": "当你规模大到必须依赖焦点小组时，你会希望自己还能像当初只有少数用户时那样，亲自去用户的家中或办公室，观察他们使用你的产品。有时候，正确的非扩展性策略是专注于一个刻意狭小的市场。"
    },
    {
      "original": "It's like keeping a fire contained at first to get it really hot before adding more logs.That's what Facebook did. At first it was just for Harvard students. In that form it only had a potential market of a few thousand people, but because they felt it was really for them, a critical mass of them signed up.",
      "translated": "这就像最初控制火势，使其变得非常旺，然后再添加更多的木柴。这就是Facebook的做法。起初它只是针对哈佛的学生。以这种方式，它的潜在市场只有几千人，但正因为学生们觉得这是真正为他们准备的，所以大批的人注册了。"
    },
    {
      "original": "After Facebook stopped being for Harvard students, it remained for students at specific colleges for quite a while. When I interviewed Mark Zuckerberg at Startup School, he said that while it was a lot of work creating course lists for each school, doing that made students feel the site was their natural home.Any startup that could be described as a marketplace usually has to start in a subset of the market, but this can work for other startups as well.",
      "translated": "在Facebook不再仅限于哈佛学生使用后，它仍然只为特定的几所大学的学生服务了相当长一段时间。当我在Startup School采访马克·扎克伯格时，他说，虽然为每所学校创建课程列表是一项繁重的工作，但这样做让学生们感到这个网站是他们的自然归属。通常被描述为市场平台的初创公司通常必须从市场的某个子集开始，但这对其他类型的初创公司也同样适用。"
    },
    {
      "original": "It's always worth asking if there's a subset of the market in which you can get a critical mass of users quickly. [8]Most startups that use the contained fire strategy do it unconsciously. They build something for themselves and their friends, who happen to be the early adopters, and only realize later that they could offer it to a broader market.",
      "translated": "始终值得询问是否存在一个可以迅速获得用户临界质量的市场细分。[8]大多数采用局部聚焦策略的初创公司都是无意识地这样做的。他们为自己和朋友构建了一些东西，而这些朋友恰好是早期采用者，后来才意识到可以向更广泛的市场提供这些产品。"
    },
    {
      "original": "The strategy works just as well if you do it unconsciously. The biggest danger of not being consciously aware of this pattern is for those who naively discard part of it. E.g. if you don't build something for yourself and your friends, or even if you do, but you come from the corporate world and your friends are not early adopters, you'll no longer have a perfect initial market handed to you on a platter.Among companies, the best early adopters are usually other startups.",
      "translated": "这个策略即使你无意识地去做也同样有效。最大的危险在于，对于那些天真地丢弃这一模式部分的人来说。例如，如果你不为自己和朋友构建东西，或者即使你构建了，但你来自企业界，而你的朋友不是早期采用者，你就不会再有一个完美的初始市场唾手可得。在公司中，最好的早期采用者通常是其他初创公司。"
    },
    {
      "original": "They're more open to new things both by nature and because, having just been started, they haven't made all their choices yet. Plus when they succeed they grow fast, and you with them. It was one of many unforeseen advantages of the YC model (and specifically of making YC big) that B2B startups now have an instant market of hundreds of other startups ready at hand.MerakiFor hardware startups there's a variant of doing things that don't scale that we call \"pulling a Meraki.\" Although we didn't fund Meraki, the founders were Robert Morris's grad students, so we know their history.",
      "translated": "他们天生更愿意接受新事物，而且由于刚刚起步，他们还没有做出所有的选择。此外，当他们成功时，他们会迅速成长，你也会随之成长。YC模式（特别是将YC做大的决定）的一个意想不到的优势是，B2B初创公司现在有一个现成的市场，可以接触到数百家其他初创公司。对于硬件初创公司，有一种不具扩展性的做法，我们称之为“Meraki模式”。虽然我们没有资助Meraki，但其创始人是Robert Morris的研究生，所以我们了解他们的历史。"
    },
    {
      "original": "They got started by doing something that really doesn't scale: assembling their routers themselves.Hardware startups face an obstacle that software startups don't. The minimum order for a factory production run is usually several hundred thousand dollars.",
      "translated": "他们一开始做了一件根本无法规模化的事情：自己组装路由器。硬件创业公司面临一个软件创业公司没有的障碍：工厂生产订单的最低起订量通常是几十万美元。"
    },
    {
      "original": "Which can put you in a catch-22: without a product you can't generate the growth you need to raise the money to manufacture your product. Back when hardware startups had to rely on investors for money, you had to be pretty convincing to overcome this.",
      "translated": "这会让你陷入一个两难境地：没有产品，你就无法生成所需的增长来筹集资金制造你的产品。在过去，硬件创业公司不得不依赖投资者的资金，因此你必须非常有说服力才能克服这一点。"
    },
    {
      "original": "The arrival of crowdfunding (or more precisely, preorders) has helped a lot. But even so I'd advise startups to pull a Meraki initially if they can. That's what Pebble did. The Pebbles assembled the first several hundred watches themselves.",
      "translated": "众筹（或者更准确地说，预售）的出现帮助了很多。但即便如此，我还是建议初创公司如果可以的话，初期可以效仿Meraki的做法。Pebble就是这样做的。Pebble自己组装了最初的几百块手表。"
    },
    {
      "original": "If they hadn't gone through that phase, they probably wouldn't have sold $10 million worth of watches when they did go on Kickstarter.Like paying excessive attention to early customers, fabricating things yourself turns out to be valuable for hardware startups.",
      "translated": "如果他们没有经历那个阶段，当他们在 Kickstarter 上推出时，可能就不会卖出价值 1000 万美元的手表。像对早期客户给予过多关注一样，自己制造产品对于硬件创业公司来说也是有价值的。"
    },
    {
      "original": "You can tweak the design faster when you're the factory, and you learn things you'd never have known otherwise. Eric Migicovsky of Pebble said one of the things he learned was \"how valuable it was to source good screws.\" Who knew?ConsultSometimes we advise founders of B2B startups to take over-engagement to an extreme, and to pick a single user and act as if they were consultants building something just for that one user.",
      "translated": "当你就是工厂时，你可以更快地调整设计，并且学到一些你原本不可能知道的事情。Pebble 的埃里克·米吉科夫斯基曾说，他学到的一件事是“找到好的螺丝有多重要。”谁知道呢？有时候，我们会建议 B2B 创业公司的创始人将过度参与做到极致，选择一个单一用户，就像顾问一样为这个用户专门构建东西。"
    },
    {
      "original": "The initial user serves as the form for your mold; keep tweaking till you fit their needs perfectly, and you'll usually find you've made something other users want too. Even if there aren't many of them, there are probably adjacent territories that have more.",
      "translated": "最初的用户是你的模具的原型；不断调整直到完全符合他们的需求，你通常会发现这样也满足了其他用户的需求。即使这类用户不多，也可能会有相邻的市场领域拥有更多的潜在用户。"
    },
    {
      "original": "As long as you can find just one user who really needs something and can act on that need, you've got a toehold in making something people want, and that's as much as any startup needs initially. [9]Consulting is the canonical example of work that doesn't scale.",
      "translated": "只要你能找到一个真正需要某样东西并且能够采取行动的用户，你就有了制作人们所需产品的立足点，这正是任何初创公司最初所需要的。[9]咨询是典型的工作不具扩展性的例子。"
    },
    {
      "original": "But (like other ways of bestowing one's favors liberally) it's safe to do it so long as you're not being paid to. That's where companies cross the line. So long as you're a product company that's merely being extra attentive to a customer, they're very grateful even if you don't solve all their problems.",
      "translated": "但（像其他慷慨施恩的方式一样）只要你不是为了报酬，这样做是安全的。这就是公司越界的地方。只要你是一家产品公司，只是对客户格外关注，即使你不能解决他们所有的問題，他们也会非常感激。"
    },
    {
      "original": "But when they start paying you specifically for that attentiveness — when they start paying you by the hour — they expect you to do everything.Another consulting-like technique for recruiting initially lukewarm users is to use your software yourselves on their behalf.",
      "translated": "但当他们开始特别为你这种专注度付费——按小时计费时——他们就会期望你做所有事情。另一种吸引最初态度冷淡的用户的方法是，代表他们使用你们的软件。"
    },
    {
      "original": "We did that at Viaweb. When we approached merchants asking if they wanted to use our software to make online stores, some said no, but they'd let us make one for them. Since we would do anything to get users, we did.",
      "translated": "我们在Viaweb就是这样做的。当我们向商家推销，询问他们是否想使用我们的软件来创建网上商店时，有些人拒绝了，但他们愿意让我们为他们创建一个。既然我们为了获得用户什么都愿意做，我们就答应了。"
    },
    {
      "original": "We felt pretty lame at the time. Instead of organizing big strategic e-commerce partnerships, we were trying to sell luggage and pens and men's shirts. But in retrospect it was exactly the right thing to do, because it taught us how it would feel to merchants to use our software.",
      "translated": "当时我们觉得自己相当不起眼。我们没有去组织大型的战略电商合作，而是试图销售行李箱、笔和男士衬衫。但回过头来看，这正是我们应该做的，因为它让我们学会了使用我们的软件对商家来说会是一种怎样的体验。"
    },
    {
      "original": "Sometimes the feedback loop was near instantaneous: in the middle of building some merchant's site I'd find I needed a feature we didn't have, so I'd spend a couple hours implementing it and then resume building the site.ManualThere's a more extreme variant where you don't just use your software, but are your software.",
      "translated": "有时反馈循环几乎是即时的：在为某个商家建设网站的过程中，我发现自己需要一个我们没有的功能，于是我会花几个小时去实现它，然后继续建设网站。更极端的情况是，你不仅使用自己的软件，你本身就是软件的一部分。"
    },
    {
      "original": "When you only have a small number of users, you can sometimes get away with doing by hand things that you plan to automate later. This lets you launch faster, and when you do finally automate yourself out of the loop, you'll know exactly what to build because you'll have muscle memory from doing it yourself.When manual components look to the user like software, this technique starts to have aspects of a practical joke.",
      "translated": "当你只有少量用户时，有时可以手动完成一些计划以后自动化的任务。这能让你更快地启动项目，而当你最终将自己从这些任务中解放出来时，你会确切地知道要构建什么，因为你已经通过亲力亲为积累了肌肉记忆。当手动组件在用户看来像是软件时，这种技术就开始带有恶作剧的成分了。"
    },
    {
      "original": "For example, the way Stripe delivered \"instant\" merchant accounts to its first users was that the founders manually signed them up for traditional merchant accounts behind the scenes.Some startups could be entirely manual at first.",
      "translated": "例如，Stripe 为首批用户提供的“即时”商户账户实际上是创始人在幕后手动为他们注册传统商户账户实现的。有些初创公司起初完全可以完全依赖人工操作。"
    },
    {
      "original": "If you can find someone with a problem that needs solving and you can solve it manually, go ahead and do that for as long as you can, and then gradually automate the bottlenecks. It would be a little frightening to be solving users' problems in a way that wasn't yet automatic, but less frightening than the far more common case of having something automatic that doesn't yet solve anyone's problems.BigI should mention one sort of initial tactic that usually doesn't work: the Big Launch.",
      "translated": "如果你能找到一个需要解决的问题，并且你可以手动解决它，那么尽可能长时间地这样做，然后逐步自动化那些瓶颈。用一种尚未自动化的方解决用户的问题可能会让人有点害怕，但总比那种更为常见的、拥有某种尚未解决任何人问题的自动化方法要好。我应该提一下一种通常不起作用的初始策略：大规模发布。"
    },
    {
      "original": "I occasionally meet founders who seem to believe startups are projectiles rather than powered aircraft, and that they'll make it big if and only if they're launched with sufficient initial velocity. They want to launch simultaneously in 8 different publications, with embargoes.",
      "translated": "我偶尔会遇到一些创始人，他们似乎认为初创公司是炮弹而不是有动力的飞机，认为只有在发射时具有足够的初始速度，才能取得巨大成功。他们希望同时在8家不同的刊物上发布，而且还要设置禁运期。"
    },
    {
      "original": "And on a tuesday, of course, since they read somewhere that's the optimum day to launch something.It's easy to see how little launches matter. Think of some successful startups. How many of their launches do you remember?",
      "translated": "当然选在周二，因为他们从某个地方读到这是启动新项目的最佳日子。很容易看出，小规模的发布其实没那么重要。想想一些成功的初创公司，你还能记得多少他们的发布活动？"
    },
    {
      "original": "All you need from a launch is some initial core of users. How well you're doing a few months later will depend more on how happy you made those users than how many there were of them. [10]So why do founders think launches matter?",
      "translated": "你所需要的只是一个初始的核心用户群。几个月后你的表现如何，将更多地取决于你让这些用户有多满意，而不是他们的数量。[10]那么，为什么创始人会认为发布很重要呢？"
    },
    {
      "original": "A combination of solipsism and laziness. They think what they're building is so great that everyone who hears about it will immediately sign up. Plus it would be so much less work if you could get users merely by broadcasting your existence, rather than recruiting them one at a time.",
      "translated": "一种唯我论与懒惰的结合。他们认为自己所打造的东西如此出色，以至于所有听到的人都会立即注册。而且，如果只需宣布自己的存在就能吸引用户，而不是一个一个地招募，那将会省去许多工作。"
    },
    {
      "original": "But even if what you're building really is great, getting users will always be a gradual process — partly because great things are usually also novel, but mainly because users have other things to think about.Partnerships too usually don't work.",
      "translated": "但即使你所构建的东西确实很棒，吸引用户也总是会是一个渐进的过程——部分原因在于伟大的事物通常也是新颖的，但主要是因为用户还有其他事情需要考虑。合作伙伴关系通常也行不通。"
    },
    {
      "original": "They don't work for startups in general, but they especially don't work as a way to get growth started. It's a common mistake among inexperienced founders to believe that a partnership with a big company will be their big break.",
      "translated": "它们通常不适合初创企业，特别是作为启动增长的手段。缺乏经验的创始人常常错误地认为，与大公司的合作将是他们的重大突破。"
    },
    {
      "original": "Six months later they're all saying the same thing: that was way more work than we expected, and we ended up getting practically nothing out of it. [11]It's not enough just to do something extraordinary initially.",
      "translated": "六个月后，他们都在说同样的话：这比我们预期的要难得多，我们几乎什么也没得到。[11]仅仅在一开始就做些非凡的事情是不够的。"
    },
    {
      "original": "You have to make an extraordinary effort initially. Any strategy that omits the effort — whether it's expecting a big launch to get you users, or a big partner — is ipso facto suspect.VectorThe need to do something unscalably laborious to get started is so nearly universal that it might be a good idea to stop thinking of startup ideas as scalars.",
      "translated": "你最初必须付出非同寻常的努力。任何忽略这种努力的战略——无论是期望一个大发布能吸引用户，还是期望有一个大合作伙伴——从本质上来说都是值得怀疑的。需要做些难以规模化的事情来开始，这种情况几乎是普遍的，以至于或许我们应该停止将创业点子视为标量。"
    },
    {
      "original": "Instead we should try thinking of them as pairs of what you're going to build, plus the unscalable thing(s) you're going to do initially to get the company going.It could be interesting to start viewing startup ideas this way, because now that there are two components you can try to be imaginative about the second as well as the first.",
      "translated": "相反，我们应该尝试将它们视为你要构建的东西，加上你最初为了启动公司所做的不可扩展的事情。用这种方式来看待创业想法可能会很有趣，因为现在有了两个组成部分，你就可以在第二个部分上也发挥创意，而不仅仅是第一个部分。"
    },
    {
      "original": "But in most cases the second component will be what it usually is — recruit users manually and give them an overwhelmingly good experience — and the main benefit of treating startups as vectors will be to remind founders they need to work hard in two dimensions.",
      "translated": "但在大多数情况下，第二个组成部分将是通常的做法——手动招募用户并给予他们极其良好的体验——而将初创公司视为向量的主要好处则是提醒创始人，他们需要在两个方面努力工作。"
    },
    {
      "original": "[12]In the best case, both components of the vector contribute to your company's DNA: the unscalable things you have to do to get started are not merely a necessary evil, but change the company permanently for the better.",
      "translated": "在最理想的情况下，向量的两个组成部分都会融入你公司的基因：你为了起步不得不做的那些难以扩展的事情，不仅仅是一种必要的恶，而是会永久性地改变公司，使其变得更好。"
    },
    {
      "original": "If you have to be aggressive about user acquisition when you're small, you'll probably still be aggressive when you're big. If you have to manufacture your own hardware, or use your software on users's behalf, you'll learn things you couldn't have learned otherwise.",
      "translated": "如果你在公司规模很小的时候就需要积极地获取用户，那么当你公司变大时，可能仍然会保持这种积极的态度。如果你需要自己制造硬件，或者代表用户使用你的软件，你将学到一些其他方式无法获得的知识。"
    },
    {
      "original": "And most importantly, if you have to work hard to delight users when you only have a handful of them, you'll keep doing it when you have a lot.Notes[1] Actually Emerson never mentioned mousetraps specifically.",
      "translated": "最重要的是，如果你在只有少数用户时就努力让他们满意，那么当你拥有大量用户时也会继续这样做。注[1] 实际上，爱默生从未具体提到过捕鼠器。"
    },
    {
      "original": "He wrote \"If a man has good corn or wood, or boards, or pigs, to sell, or can make better chairs or knives, crucibles or church organs, than anybody else, you will find a broad hard-beaten road to his house, though it be in the woods.\"[2] Thanks to Sam Altman for suggesting I make this explicit.",
      "translated": "他写道：“如果一个人有优质的玉米或木材，或者木板，或者猪出售，或者能制作出比任何人都好的椅子、刀具、坩埚或教堂风琴，你就会发现一条宽阔而坚实的路通向他的家，即使它位于森林中。”[2] 感谢萨姆·阿尔特曼建议我明确这一点。"
    },
    {
      "original": "And no, you can't avoid doing sales by hiring someone to do it for you. You have to do sales yourself initially. Later you can hire a real salesperson to replace you.[3] The reason this works is that as you get bigger, your size helps you grow.",
      "translated": "而且，你不能通过雇用别人来避免自己做销售。最初你必须亲自去做销售。后来你可以雇用一个专业的销售人员来接替你。[3] 这种做法有效的原因是，随着你的发展壮大，你的规模会帮助你成长。"
    },
    {
      "original": "Patrick Collison wrote \"At some point, there was a very noticeable change in how Stripe felt. It tipped from being this boulder we had to push to being a train car that in fact had its own momentum.\"[4] One of the more subtle ways in which YC can help founders is by calibrating their ambitions, because we know exactly how a lot of successful startups looked when they were just getting started.[5] If you're building something for which you can't easily get a small set of users to observe — e.g.",
      "translated": "帕特里克·柯林森写道：“在某个时刻，Stripe 的感觉发生了非常显著的变化。它从一块我们必须推动的巨石变成了实际上有自己动量的列车车厢。”[4] YC 能够帮助创始人的一种更为微妙的方式是校准他们的雄心，因为我们确切地知道许多成功的初创公司在刚开始时是什么样子。[5] 如果你在构建某种难以轻松获得一小批用户来观察的产品——例如"
    },
    {
      "original": "enterprise software — and in a domain where you have no connections, you'll have to rely on cold calls and introductions. But should you even be working on such an idea?[6] Garry Tan pointed out an interesting trap founders fall into in the beginning.",
      "translated": "企业软件——在你没有任何关系的领域，你将不得不依赖冷电话和介绍。但你是否应该从事这样的想法呢？[6] Gary Tan 指出创始人在初期容易陷入的一个有趣的陷阱。"
    },
    {
      "original": "They want so much to seem big that they imitate even the flaws of big companies, like indifference to individual users. This seems to them more \"professional.\" Actually it's better to embrace the fact that you're small and use whatever advantages that brings.[7] Your user model almost couldn't be perfectly accurate, because users' needs often change in response to what you build for them.",
      "translated": "他们太想显得重要了，以至于连大公司的缺点，比如对个别用户的冷漠，也一并模仿。这在他们看来似乎更“专业”。实际上，最好还是接受自己规模小的事实，并充分利用由此带来的各种优势。[7] 你的用户模型几乎不可能完全准确，因为用户的需求往往会随着你为他们构建的产品而变化。"
    },
    {
      "original": "Build them a microcomputer, and suddenly they need to run spreadsheets on it, because the arrival of your new microcomputer causes someone to invent the spreadsheet.[8] If you have to choose between the subset that will sign up quickest and those that will pay the most, it's usually best to pick the former, because those are probably the early adopters.",
      "translated": "给他们造一台微型计算机，突然间他们就需要在这上面运行电子表格了，因为你的新微型计算机的到来促使某人发明了电子表格。[8] 如果你必须在那些会最快签约的用户和那些会支付最多费用的用户之间做出选择，通常最好选择前者，因为这些可能是早期采用者。"
    },
    {
      "original": "They'll have a better influence on your product, and they won't make you expend as much effort on sales. And though they have less money, you don't need that much to maintain your target growth rate early on.[9] Yes, I can imagine cases where you could end up making something that was really only useful for one user.",
      "translated": "他们会对你的产品产生更好的影响，并且不会让你在销售上花费太多精力。虽然他们手头的钱较少，但在初期维持你的目标增长率并不需要太多资金。[9] 是的，我可以想象有些情况下，你最终可能会做出一个实际上只对一个用户有用的东西。"
    },
    {
      "original": "But those are usually obvious, even to inexperienced founders. So if it's not obvious you'd be making something for a market of one, don't worry about that danger.[10] There may even be an inverse correlation between launch magnitude and success.",
      "translated": "但这些通常即使是经验不足的创始人也能看出来。所以，如果你觉得自己不是在为一个市场单一的领域做东西，就不要担心这种风险。实际上，启动规模与成功之间可能存在负相关。"
    },
    {
      "original": "The only launches I remember are famous flops like the Segway and Google Wave. Wave is a particularly alarming example, because I think it was actually a great idea that was killed partly by its overdone launch.[11] Google grew big on the back of Yahoo, but that wasn't a partnership.",
      "translated": "我唯一记得的发布都是像赛格威和谷歌波这样的著名失败案例。谷歌波尤其令人担忧，因为我认为它实际上是一个很好的想法，但由于其过度炒作的发布而被扼杀。谷歌是在雅虎的“背上”壮大的，但这并不是一种合作关系。"
    },
    {
      "original": "Yahoo was their customer.[12] It will also remind founders that an idea where the second component is empty — an idea where there is nothing you can do to get going, e.g. because you have no way to find users to recruit manually — is probably a bad idea, at least for those founders.Thanks to Sam Altman, Paul Buchheit, Patrick Collison, Kevin Hale, Steven Levy, Jessica Livingston, Geoff Ralston, and Garry Tan for reading drafts of this.Japanese TranslationRussian TranslationFrench TranslationArabic TranslationItalian TranslationKorean Translation",
      "translated": "雅虎是他们的客户。[12] 这也将提醒创始人，如果一个想法的第二个组成部分是空的——也就是说，你没有任何办法可以开始，例如因为你没有办法找到用户来手动招募——那么这个想法很可能是个坏主意，至少对于那些创始人来说是这样。感谢 Sam Altman、Paul Buchheit、Patrick Collison、Kevin Hale、Steven Levy、Jessica Livingston、Geoff Ralston 和 Garry Tan 阅读本文的草稿。日文翻译 俄文翻译 法文翻译 阿拉伯文翻译 意大利文翻译 韩文翻译"
    }
  ],
  "translation_completed": "2025-07-27T15:10:51.973898",
  "translation_stats": {
    "total_paragraphs": 84,
    "success_count": 84,
    "success_rate": "100.0%"
  }
}