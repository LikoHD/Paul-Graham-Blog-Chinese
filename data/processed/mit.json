{
  "title": "A Student's Guide to Startups",
  "title_zh": "[待翻译] A Student's Guide to Startups",
  "url": "https://www.paulgraham.com/mit.html",
  "filename": "mit.html",
  "date": "2020-09-01",
  "id": 92,
  "content": {
    "success": true,
    "paragraphs": [
      "Want to start a startup? Get funded by Y Combinator. October 2006(This essay is derived from a talk at MIT.)Till recently graduating seniors had two choices: get a job or go to grad school. I think there will increasingly be a third option: to start your own startup.",
      "But how common will that be?I'm sure the default will always be to get a job, but starting a startup could well become as popular as grad school. In the late 90s my professor friends used to complain that they couldn't get grad students, because all the undergrads were going to work for startups.",
      "I wouldn't be surprised if that situation returns, but with one difference: this time they'll be starting their own instead of going to work for other people's.The most ambitious students will at this point be asking: Why wait till you graduate?",
      "Why not start a startup while you're in college? In fact, why go to college at all? Why not start a startup instead?A year and a half ago I gave a talk where I said that the average age of the founders of Yahoo, Google, and Microsoft was 24, and that if grad students could start startups, why not undergrads?",
      "I'm glad I phrased that as a question, because now I can pretend it wasn't merely a rhetorical one. At the time I couldn't imagine why there should be any lower limit for the age of startup founders.",
      "Graduation is a bureaucratic change, not a biological one. And certainly there are undergrads as competent technically as most grad students. So why shouldn't undergrads be able to start startups as well as grad students?I now realize that something does change at graduation: you lose a huge excuse for failing.",
      "Regardless of how complex your life is, you'll find that everyone else, including your family and friends, will discard all the low bits and regard you as having a single occupation at any given time.",
      "If you're in college and have a summer job writing software, you still read as a student. Whereas if you graduate and get a job programming, you'll be instantly regarded by everyone as a programmer.The problem with starting a startup while you're still in school is that there's a built-in escape hatch.",
      "If you start a startup in the summer between your junior and senior year, it reads to everyone as a summer job. So if it goes nowhere, big deal; you return to school in the fall with all the other seniors; no one regards you as a failure, because your occupation is student, and you didn't fail at that.",
      "Whereas if you start a startup just one year later, after you graduate, as long as you're not accepted to grad school in the fall the startup reads to everyone as your occupation. You're now a startup founder, so you have to do well at that.For nearly everyone, the opinion of one's peers is the most powerful motivator of all—more powerful even than the nominal goal of most startup founders, getting rich.",
      "[1] About a month into each funding cycle we have an event called Prototype Day where each startup presents to the others what they've got so far. You might think they wouldn't need any more motivation.",
      "They're working on their cool new idea; they have funding for the immediate future; and they're playing a game with only two outcomes: wealth or failure. You'd think that would be motivation enough. And yet the prospect of a demo pushes most of them into a rush of activity.Even if you start a startup explicitly to get rich, the money you might get seems pretty theoretical most of the time.",
      "What drives you day to day is not wanting to look bad.You probably can't change that. Even if you could, I don't think you'd want to; someone who really, truly doesn't care what his peers think of him is probably a psychopath.",
      "So the best you can do is consider this force like a wind, and set up your boat accordingly. If you know your peers are going to push you in some direction, choose good peers, and position yourself so they push you in a direction you like.Graduation changes the prevailing winds, and those make a difference.",
      "Starting a startup is so hard that it's a close call even for the ones that succeed. However high a startup may be flying now, it probably has a few leaves stuck in the landing gear from those trees it barely cleared at the end of the runway.",
      "In such a close game, the smallest increase in the forces against you can be enough to flick you over the edge into failure.When we first started Y Combinator we encouraged people to start startups while they were still in college.",
      "That's partly because Y Combinator began as a kind of summer program. We've kept the program shape—all of us having dinner together once a week turns out to be a good idea—but we've decided now that the party line should be to tell people to wait till they graduate.Does that mean you can't start a startup in college?",
      "Not at all. Sam Altman, the co-founder of Loopt, had just finished his sophomore year when we funded them, and Loopt is probably the most promising of all the startups we've funded so far. But Sam Altman is a very unusual guy.",
      "Within about three minutes of meeting him, I remember thinking \"Ah, so this is what Bill Gates must have been like when he was 19.\"If it can work to start a startup during college, why do we tell people not to?",
      "For the same reason that the probably apocryphal violinist, whenever he was asked to judge someone's playing, would always say they didn't have enough talent to make it as a pro. Succeeding as a musician takes determination as well as talent, so this answer works out to be the right advice for everyone.",
      "The ones who are uncertain believe it and give up, and the ones who are sufficiently determined think \"screw that, I'll succeed anyway.\"So our official policy now is only to fund undergrads we can't talk out of it.",
      "And frankly, if you're not certain, you should wait. It's not as if all the opportunities to start companies are going to be gone if you don't do it now. Maybe the window will close on some idea you're working on, but that won't be the last idea you'll have.",
      "For every idea that times out, new ones become feasible. Historically the opportunities to start startups have only increased with time.In that case, you might ask, why not wait longer? Why not go work for a while, or go to grad school, and then start a startup?",
      "And indeed, that might be a good idea. If I had to pick the sweet spot for startup founders, based on who we're most excited to see applications from, I'd say it's probably the mid-twenties. Why? What advantages does someone in their mid-twenties have over someone who's 21?",
      "And why isn't it older? What can 25 year olds do that 32 year olds can't? Those turn out to be questions worth examining.PlusIf you start a startup soon after college, you'll be a young founder by present standards, so you should know what the relative advantages of young founders are.",
      "They're not what you might think. As a young founder your strengths are: stamina, poverty, rootlessness, colleagues, and ignorance.The importance of stamina shouldn't be surprising. If you've heard anything about startups you've probably heard about the long hours.",
      "As far as I can tell these are universal. I can't think of any successful startups whose founders worked 9 to 5. And it's particularly necessary for younger founders to work long hours because they're probably not as efficient as they'll be later.Your second advantage, poverty, might not sound like an advantage, but it is a huge one.",
      "Poverty implies you can live cheaply, and this is critically important for startups. Nearly every startup that fails, fails by running out of money. It's a little misleading to put it this way, because there's usually some other underlying cause.",
      "But regardless of the source of your problems, a low burn rate gives you more opportunity to recover from them. And since most startups make all kinds of mistakes at first, room to recover from mistakes is a valuable thing to have.Most startups end up doing something different than they planned.",
      "The way the successful ones find something that works is by trying things that don't. So the worst thing you can do in a startup is to have a rigid, pre-ordained plan and then start spending a lot of money to implement it.",
      "Better to operate cheaply and give your ideas time to evolve.Recent grads can live on practically nothing, and this gives you an edge over older founders, because the main cost in software startups is people.",
      "The guys with kids and mortgages are at a real disadvantage. This is one reason I'd bet on the 25 year old over the 32 year old. The 32 year old probably is a better programmer, but probably also has a much more expensive life.",
      "Whereas a 25 year old has some work experience (more on that later) but can live as cheaply as an undergrad.Robert Morris and I were 29 and 30 respectively when we started Viaweb, but fortunately we still lived like 23 year olds.",
      "We both had roughly zero assets. I would have loved to have a mortgage, since that would have meant I had a house. But in retrospect having nothing turned out to be convenient. I wasn't tied down and I was used to living cheaply.Even more important than living cheaply, though, is thinking cheaply.",
      "One reason the Apple II was so popular was that it was cheap. The computer itself was cheap, and it used cheap, off-the-shelf peripherals like a cassette tape recorder for data storage and a TV as a monitor.",
      "And you know why? Because Woz designed this computer for himself, and he couldn't afford anything more.We benefitted from the same phenomenon. Our prices were daringly low for the time. The top level of service was $300 a month, which was an order of magnitude below the norm.",
      "In retrospect this was a smart move, but we didn't do it because we were smart. $300 a month seemed like a lot of money to us. Like Apple, we created something inexpensive, and therefore popular, simply because we were poor.A lot of startups have that form: someone comes along and makes something for a tenth or a hundredth of what it used to cost, and the existing players can't follow because they don't even want to think about a world in which that's possible.",
      "Traditional long distance carriers, for example, didn't even want to think about VoIP. (It was coming, all the same.) Being poor helps in this game, because your own personal bias points in the same direction technology evolves in.The advantages of rootlessness are similar to those of poverty.",
      "When you're young you're more mobile—not just because you don't have a house or much stuff, but also because you're less likely to have serious relationships. This turns out to be important, because a lot of startups involve someone moving.The founders of Kiko, for example, are now en route to the Bay Area to start their next startup.",
      "It's a better place for what they want to do. And it was easy for them to decide to go, because neither as far as I know has a serious girlfriend, and everything they own will fit in one car—or more precisely, will either fit in one car or is crappy enough that they don't mind leaving it behind.They at least were in Boston.",
      "What if they'd been in Nebraska, like Evan Williams was at their age? Someone wrote recently that the drawback of Y Combinator was that you had to move to participate. It couldn't be any other way. The kind of conversations we have with founders, we have to have in person.",
      "We fund a dozen startups at a time, and we can't be in a dozen places at once. But even if we could somehow magically save people from moving, we wouldn't. We wouldn't be doing founders a favor by letting them stay in Nebraska.",
      "Places that aren't startup hubs are toxic to startups. You can tell that from indirect evidence. You can tell how hard it must be to start a startup in Houston or Chicago or Miami from the microscopically small number, per capita, that succeed there.",
      "I don't know exactly what's suppressing all the startups in these towns—probably a hundred subtle little things—but something must be. [2]Maybe this will change. Maybe the increasing cheapness of startups will mean they'll be able to survive anywhere, instead of only in the most hospitable environments.",
      "Maybe 37signals is the pattern for the future. But maybe not. Historically there have always been certain towns that were centers for certain industries, and if you weren't in one of them you were at a disadvantage.",
      "So my guess is that 37signals is an anomaly. We're looking at a pattern much older than \"Web 2.0\" here.Perhaps the reason more startups per capita happen in the Bay Area than Miami is simply that there are more founder-type people there.",
      "Successful startups are almost never started by one person. Usually they begin with a conversation in which someone mentions that something would be a good idea for a company, and his friend says, \"Yeah, that is a good idea, let's try it.\" If you're missing that second person who says \"let's try it,\" the startup never happens.",
      "And that is another area where undergrads have an edge. They're surrounded by people willing to say that. At a good college you're concentrated together with a lot of other ambitious and technically minded people—probably more concentrated than you'll ever be again.",
      "If your nucleus spits out a neutron, there's a good chance it will hit another nucleus.The number one question people ask us at Y Combinator is: Where can I find a co-founder? That's the biggest problem for someone starting a startup at 30.",
      "When they were in school they knew a lot of good co-founders, but by 30 they've either lost touch with them or these people are tied down by jobs they don't want to leave.Viaweb was an anomaly in this respect too.",
      "Though we were comparatively old, we weren't tied down by impressive jobs. I was trying to be an artist, which is not very constraining, and Robert, though 29, was still in grad school due to a little interruption in his academic career back in 1988.",
      "So arguably the Worm made Viaweb possible. Otherwise Robert would have been a junior professor at that age, and he wouldn't have had time to work on crazy speculative projects with me.Most of the questions people ask Y Combinator we have some kind of answer for, but not the co-founder question.",
      "There is no good answer. Co-founders really should be people you already know. And by far the best place to meet them is school. You have a large sample of smart people; you get to compare how they all perform on identical tasks; and everyone's life is pretty fluid.",
      "A lot of startups grow out of schools for this reason. Google, Yahoo, and Microsoft, among others, were all founded by people who met in school. (In Microsoft's case, it was high school.)Many students feel they should wait and get a little more experience before they start a company.",
      "All other things being equal, they should. But all other things are not quite as equal as they look. Most students don't realize how rich they are in the scarcest ingredient in startups, co-founders.",
      "If you wait too long, you may find that your friends are now involved in some project they don't want to abandon. The better they are, the more likely this is to happen.One way to mitigate this problem might be to actively plan your startup while you're getting those n years of experience.",
      "Sure, go off and get jobs or go to grad school or whatever, but get together regularly to scheme, so the idea of starting a startup stays alive in everyone's brain. I don't know if this works, but it can't hurt to try.It would be helpful just to realize what an advantage you have as students.",
      "Some of your classmates are probably going to be successful startup founders; at a great technical university, that is a near certainty. So which ones? If I were you I'd look for the people who are not just smart, but incurable builders.",
      "Look for the people who keep starting projects, and finish at least some of them. That's what we look for. Above all else, above academic credentials and even the idea you apply with, we look for people who build things.The other place co-founders meet is at work.",
      "Fewer do than at school, but there are things you can do to improve the odds. The most important, obviously, is to work somewhere that has a lot of smart, young people. Another is to work for a company located in a startup hub.",
      "It will be easier to talk a co-worker into quitting with you in a place where startups are happening all around you.You might also want to look at the employment agreement you sign when you get hired.",
      "Most will say that any ideas you think of while you're employed by the company belong to them. In practice it's hard for anyone to prove what ideas you had when, so the line gets drawn at code. If you're going to start a startup, don't write any of the code while you're still employed.",
      "Or at least discard any code you wrote while still employed and start over. It's not so much that your employer will find out and sue you. It won't come to that; investors or acquirers or (if you're so lucky) underwriters will nail you first.",
      "Between t = 0 and when you buy that yacht, someone is going to ask if any of your code legally belongs to anyone else, and you need to be able to say no. [3]The most overreaching employee agreement I've seen so far is Amazon's.",
      "In addition to the usual clauses about owning your ideas, you also can't be a founder of a startup that has another founder who worked at Amazon—even if you didn't know them or even work there at the same time.",
      "I suspect they'd have a hard time enforcing this, but it's a bad sign they even try. There are plenty of other places to work; you may as well choose one that keeps more of your options open.Speaking of cool places to work, there is of course Google.",
      "But I notice something slightly frightening about Google: zero startups come out of there. In that respect it's a black hole. People seem to like working at Google too much to leave. So if you hope to start a startup one day, the evidence so far suggests you shouldn't work there.I realize this seems odd advice.",
      "If they make your life so good that you don't want to leave, why not work there? Because, in effect, you're probably getting a local maximum. You need a certain activation energy to start a startup. So an employer who's fairly pleasant to work for can lull you into staying indefinitely, even if it would be a net win for you to leave.",
      "[4]The best place to work, if you want to start a startup, is probably a startup. In addition to being the right sort of experience, one way or another it will be over quickly. You'll either end up rich, in which case problem solved, or the startup will get bought, in which case it it will start to suck to work there and it will be easy to leave, or most likely, the thing will blow up and you'll be free again.Your final advantage, ignorance, may not sound very useful.",
      "I deliberately used a controversial word for it; you might equally call it innocence. But it seems to be a powerful force. My Y Combinator co-founder Jessica Livingston is just about to publish a book of interviews with startup founders, and I noticed a remarkable pattern in them.",
      "One after another said that if they'd known how hard it would be, they would have been too intimidated to start.Ignorance can be useful when it's a counterweight to other forms of stupidity. It's useful in starting startups because you're capable of more than you realize.",
      "Starting startups is harder than you expect, but you're also capable of more than you expect, so they balance out.Most people look at a company like Apple and think, how could I ever make such a thing?",
      "Apple is an institution, and I'm just a person. But every institution was at one point just a handful of people in a room deciding to start something. Institutions are made up, and made up by people no different from you.I'm not saying everyone could start a startup.",
      "I'm sure most people couldn't; I don't know much about the population at large. When you get to groups I know well, like hackers, I can say more precisely. At the top schools, I'd guess as many as a quarter of the CS majors could make it as startup founders if they wanted.That \"if they wanted\" is an important qualification—so important that it's almost cheating to append it like that—because once you get over a certain threshold of intelligence, which most CS majors at top schools are past, the deciding factor in whether you succeed as a founder is how much you want to.",
      "You don't have to be that smart. If you're not a genius, just start a startup in some unsexy field where you'll have less competition, like software for human resources departments. I picked that example at random, but I feel safe in predicting that whatever they have now, it wouldn't take genius to do better.",
      "There are a lot of people out there working on boring stuff who are desperately in need of better software, so however short you think you fall of Larry and Sergey, you can ratchet down the coolness of the idea far enough to compensate.As well as preventing you from being intimidated, ignorance can sometimes help you discover new ideas.",
      "Steve Wozniak put this very strongly: All the best things that I did at Apple came from (a) not having money and (b) not having done it before, ever. Every single thing that we came out with that was really great, I'd never once done that thing in my life.",
      "When you know nothing, you have to reinvent stuff for yourself, and if you're smart your reinventions may be better than what preceded them. This is especially true in fields where the rules change. All our ideas about software were developed in a time when processors were slow, and memories and disks were tiny.",
      "Who knows what obsolete assumptions are embedded in the conventional wisdom? And the way these assumptions are going to get fixed is not by explicitly deallocating them, but by something more akin to garbage collection.",
      "Someone ignorant but smart will come along and reinvent everything, and in the process simply fail to reproduce certain existing ideas.MinusSo much for the advantages of young founders. What about the disadvantages?",
      "I'm going to start with what goes wrong and try to trace it back to the root causes.What goes wrong with young founders is that they build stuff that looks like class projects. It was only recently that we figured this out ourselves.",
      "We noticed a lot of similarities between the startups that seemed to be falling behind, but we couldn't figure out how to put it into words. Then finally we realized what it was: they were building class projects.But what does that really mean?",
      "What's wrong with class projects? What's the difference between a class project and a real startup? If we could answer that question it would be useful not just to would-be startup founders but to students in general, because we'd be a long way toward explaining the mystery of the so-called real world.There seem to be two big things missing in class projects: (1) an iterative definition of a real problem and (2) intensity.The first is probably unavoidable.",
      "Class projects will inevitably solve fake problems. For one thing, real problems are rare and valuable. If a professor wanted to have students solve real problems, he'd face the same paradox as someone trying to give an example of whatever \"paradigm\" might succeed the Standard Model of physics.",
      "There may well be something that does, but if you could think of an example you'd be entitled to the Nobel Prize. Similarly, good new problems are not to be had for the asking.In technology the difficulty is compounded by the fact that real startups tend to discover the problem they're solving by a process of evolution.",
      "Someone has an idea for something; they build it; and in doing so (and probably only by doing so) they realize the problem they should be solving is another one. Even if the professor let you change your project description on the fly, there isn't time enough to do that in a college class, or a market to supply evolutionary pressures.",
      "So class projects are mostly about implementation, which is the least of your problems in a startup.It's not just that in a startup you work on the idea as well as implementation. The very implementation is different.",
      "Its main purpose is to refine the idea. Often the only value of most of the stuff you build in the first six months is that it proves your initial idea was mistaken. And that's extremely valuable. If you're free of a misconception that everyone else still shares, you're in a powerful position.",
      "But you're not thinking that way about a class project. Proving your initial plan was mistaken would just get you a bad grade. Instead of building stuff to throw away, you tend to want every line of code to go toward that final goal of showing you did a lot of work.That leads to our second difference: the way class projects are measured.",
      "Professors will tend to judge you by the distance between the starting point and where you are now. If someone has achieved a lot, they should get a good grade. But customers will judge you from the other direction: the distance remaining between where you are now and the features they need.",
      "The market doesn't give a shit how hard you worked. Users just want your software to do what they need, and you get a zero otherwise. That is one of the most distinctive differences between school and the real world: there is no reward for putting in a good effort.",
      "In fact, the whole concept of a \"good effort\" is a fake idea adults invented to encourage kids. It is not found in nature.Such lies seem to be helpful to kids. But unfortunately when you graduate they don't give you a list of all the lies they told you during your education.",
      "You have to get them beaten out of you by contact with the real world. And this is why so many jobs want work experience. I couldn't understand that when I was in college. I knew how to program. In fact, I could tell I knew how to program better than most people doing it for a living.",
      "So what was this mysterious \"work experience\" and why did I need it?Now I know what it is, and part of the confusion is grammatical. Describing it as \"work experience\" implies it's like experience operating a certain kind of machine, or using a certain programming language.",
      "But really what work experience refers to is not some specific expertise, but the elimination of certain habits left over from childhood.One of the defining qualities of kids is that they flake. When you're a kid and you face some hard test, you can cry and say \"I can't\" and they won't make you do it.",
      "Of course, no one can make you do anything in the grownup world either. What they do instead is fire you. And when motivated by that you find you can do a lot more than you realized. So one of the things employers expect from someone with \"work experience\" is the elimination of the flake reflex—the ability to get things done, with no excuses.The other thing you get from work experience is an understanding of what work is, and in particular, how intrinsically horrible it is.",
      "Fundamentally the equation is a brutal one: you have to spend most of your waking hours doing stuff someone else wants, or starve. There are a few places where the work is so interesting that this is concealed, because what other people want done happens to coincide with what you want to work on.",
      "But you only have to imagine what would happen if they diverged to see the underlying reality.It's not so much that adults lie to kids about this as never explain it. They never explain what the deal is with money.",
      "You know from an early age that you'll have some sort of job, because everyone asks what you're going to \"be\" when you grow up. What they don't tell you is that as a kid you're sitting on the shoulders of someone else who's treading water, and that starting working means you get thrown into the water on your own, and have to start treading water yourself or sink.",
      "\"Being\" something is incidental; the immediate problem is not to drown.The relationship between work and money tends to dawn on you only gradually. At least it did for me. One's first thought tends to be simply \"This sucks.",
      "I'm in debt. Plus I have to get up on monday and go to work.\" Gradually you realize that these two things are as tightly connected as only a market can make them.So the most important advantage 24 year old founders have over 20 year old founders is that they know what they're trying to avoid.",
      "To the average undergrad the idea of getting rich translates into buying Ferraris, or being admired. To someone who has learned from experience about the relationship between money and work, it translates to something way more important: it means you get to opt out of the brutal equation that governs the lives of 99.9% of people.",
      "Getting rich means you can stop treading water.Someone who gets this will work much harder at making a startup succeed—with the proverbial energy of a drowning man, in fact. But understanding the relationship between money and work also changes the way you work.",
      "You don't get money just for working, but for doing things other people want. Someone who's figured that out will automatically focus more on the user. And that cures the other half of the class-project syndrome.",
      "After you've been working for a while, you yourself tend to measure what you've done the same way the market does.Of course, you don't have to spend years working to learn this stuff. If you're sufficiently perceptive you can grasp these things while you're still in school.",
      "Sam Altman did. He must have, because Loopt is no class project. And as his example suggests, this can be valuable knowledge. At a minimum, if you get this stuff, you already have most of what you gain from the \"work experience\" employers consider so desirable.",
      "But of course if you really get it, you can use this information in a way that's more valuable to you than that.NowSo suppose you think you might start a startup at some point, either when you graduate or a few years after.",
      "What should you do now? For both jobs and grad school, there are ways to prepare while you're in college. If you want to get a job when you graduate, you should get summer jobs at places you'd like to work.",
      "If you want to go to grad school, it will help to work on research projects as an undergrad. What's the equivalent for startups? How do you keep your options maximally open?One thing you can do while you're still in school is to learn how startups work.",
      "Unfortunately that's not easy. Few if any colleges have classes about startups. There may be business school classes on entrepreneurship, as they call it over there, but these are likely to be a waste of time.",
      "Business schools like to talk about startups, but philosophically they're at the opposite end of the spectrum. Most books on startups also seem to be useless. I've looked at a few and none get it right.",
      "Books in most fields are written by people who know the subject from experience, but for startups there's a unique problem: by definition the founders of successful startups don't need to write books to make money.",
      "As a result most books on the subject end up being written by people who don't understand it.So I'd be skeptical of classes and books. The way to learn about startups is by watching them in action, preferably by working at one.",
      "How do you do that as an undergrad? Probably by sneaking in through the back door. Just hang around a lot and gradually start doing things for them. Most startups are (or should be) very cautious about hiring.",
      "Every hire increases the burn rate, and bad hires early on are hard to recover from. However, startups usually have a fairly informal atmosphere, and there's always a lot that needs to be done. If you just start doing stuff for them, many will be too busy to shoo you away.",
      "You can thus gradually work your way into their confidence, and maybe turn it into an official job later, or not, whichever you prefer. This won't work for all startups, but it would work for most I've known.Number two, make the most of the great advantage of school: the wealth of co-founders.",
      "Look at the people around you and ask yourself which you'd like to work with. When you apply that test, you may find you get surprising results. You may find you'd prefer the quiet guy you've mostly ignored to someone who seems impressive but has an attitude to match.",
      "I'm not suggesting you suck up to people you don't really like because you think one day they'll be successful. Exactly the opposite, in fact: you should only start a startup with someone you like, because a startup will put your friendship through a stress test.",
      "I'm just saying you should think about who you really admire and hang out with them, instead of whoever circumstances throw you together with.Another thing you can do is learn skills that will be useful to you in a startup.",
      "These may be different from the skills you'd learn to get a job. For example, thinking about getting a job will make you want to learn programming languages you think employers want, like Java and C++.",
      "Whereas if you start a startup, you get to pick the language, so you have to think about which will actually let you get the most done. If you use that test you might end up learning Ruby or Python instead.",
      "But the most important skill for a startup founder isn't a programming technique. It's a knack for understanding users and figuring out how to give them what they want. I know I repeat this, but that's because it's so important.",
      "And it's a skill you can learn, though perhaps habit might be a better word. Get into the habit of thinking of software as having users. What do those users want? What would make them say wow?This is particularly valuable for undergrads, because the concept of users is missing from most college programming classes.",
      "The way you get taught programming in college would be like teaching writing as grammar, without mentioning that its purpose is to communicate something to an audience. Fortunately an audience for software is now only an http request away.",
      "So in addition to the programming you do for your classes, why not build some kind of website people will find useful? At the very least it will teach you how to write software with users. In the best case, it might not just be preparation for a startup, but the startup itself, like it was for Yahoo and Google.Notes[1] Even the desire to protect one's children seems weaker, judging from things people have historically done to their kids rather than risk their community's disapproval.",
      "(I assume we still do things that will be regarded in the future as barbaric, but historical abuses are easier for us to see.)[2] Worrying that Y Combinator makes founders move for 3 months also suggests one underestimates how hard it is to start a startup.",
      "You're going to have to put up with much greater inconveniences than that.[3] Most employee agreements say that any idea relating to the company's present or potential future business belongs to them.",
      "Often as not the second clause could include any possible startup, and anyone doing due diligence for an investor or acquirer will assume the worst.To be safe either (a) don't use code written while you were still employed in your previous job, or (b) get your employer to renounce, in writing, any claim to the code you write for your side project.",
      "Many will consent to (b) rather than lose a prized employee. The downside is that you'll have to tell them exactly what your project does.[4] Geshke and Warnock only founded Adobe because Xerox ignored them.",
      "If Xerox had used what they built, they would probably never have left PARC.Thanks to Jessica Livingston and Robert Morris for reading drafts of this, and to Jeff Arnold and the SIPB for inviting me to speak.",
      "Comment on this essay.Chinese TranslationArabic Translation"
    ],
    "word_count": 6375,
    "paragraph_count": 131
  },
  "processed_at": "2025-07-26T19:04:24.255783",
  "paragraphs": [
    {
      "original": "Want to start a startup? Get funded by Y Combinator. October 2006(This essay is derived from a talk at MIT.)Till recently graduating seniors had two choices: get a job or go to grad school. I think there will increasingly be a third option: to start your own startup.",
      "translated": "想创业吗？那就争取获得 Y Combinator 的资金支持。2006年10月（本文源自在麻省理工学院的一次演讲。）直到最近，即将毕业的大学生们通常有两个选择：找工作或继续深造。我认为，将会越来越多地出现第三个选项：自己创业。"
    },
    {
      "original": "But how common will that be?I'm sure the default will always be to get a job, but starting a startup could well become as popular as grad school. In the late 90s my professor friends used to complain that they couldn't get grad students, because all the undergrads were going to work for startups.",
      "translated": "但这会有多普遍呢？我相信找工作的默认选项将一直存在，但创业可能会变得和读研究生一样受欢迎。在20世纪90年代末，我的教授朋友们常常抱怨他们招不到研究生，因为所有的本科生都去创业公司工作了。"
    },
    {
      "original": "I wouldn't be surprised if that situation returns, but with one difference: this time they'll be starting their own instead of going to work for other people's.The most ambitious students will at this point be asking: Why wait till you graduate?",
      "translated": "我不会对那种情况的回归感到惊讶，但会有一个不同点：这次他们将开始自己的事业，而不是去为别人工作。此时，最雄心勃勃的学生会问：为什么非要等到毕业呢？"
    },
    {
      "original": "Why not start a startup while you're in college? In fact, why go to college at all? Why not start a startup instead?A year and a half ago I gave a talk where I said that the average age of the founders of Yahoo, Google, and Microsoft was 24, and that if grad students could start startups, why not undergrads?",
      "translated": "为什么不在大学期间创办一家初创公司呢？事实上，为什么要去大学呢？为什么不直接创办一家初创公司？一年半前，我在一次演讲中提到，雅虎、谷歌和微软的创始人的平均年龄是24岁，如果研究生可以创办初创公司，为什么本科生不行呢？"
    },
    {
      "original": "I'm glad I phrased that as a question, because now I can pretend it wasn't merely a rhetorical one. At the time I couldn't imagine why there should be any lower limit for the age of startup founders.",
      "translated": "我很高兴我当时把那句话说成一个问题，因为现在我就可以假装它不是一个纯粹的修辞问题。当时我无法想象为什么初创公司的创始人年龄应该有一个下限。"
    },
    {
      "original": "Graduation is a bureaucratic change, not a biological one. And certainly there are undergrads as competent technically as most grad students. So why shouldn't undergrads be able to start startups as well as grad students?I now realize that something does change at graduation: you lose a huge excuse for failing.",
      "translated": "毕业是一种行政上的变化，而不是生物学上的变化。当然，也有本科生在技术上和大多数研究生一样合格。那么，为什么本科生不能像研究生一样创办创业公司呢？我现在意识到，在毕业时确实会发生一些变化：你失去了一个巨大的失败借口。"
    },
    {
      "original": "Regardless of how complex your life is, you'll find that everyone else, including your family and friends, will discard all the low bits and regard you as having a single occupation at any given time.",
      "translated": "无论你的生活多么复杂，你都会发现，包括你的家人和朋友在内的其他人，都会忽略掉那些细枝末节，认为你在任何特定时刻只有一个职业。"
    },
    {
      "original": "If you're in college and have a summer job writing software, you still read as a student. Whereas if you graduate and get a job programming, you'll be instantly regarded by everyone as a programmer.The problem with starting a startup while you're still in school is that there's a built-in escape hatch.",
      "translated": "如果你还在上大学并且有份暑期软件开发的工作，你仍然被视为学生。而如果你毕业之后找到了编程的工作，大家会立刻认为你是一名程序员。在还在上学的时候创业的问题在于，有一个现成的退路。"
    },
    {
      "original": "If you start a startup in the summer between your junior and senior year, it reads to everyone as a summer job. So if it goes nowhere, big deal; you return to school in the fall with all the other seniors; no one regards you as a failure, because your occupation is student, and you didn't fail at that.",
      "translated": "如果你在大三和大四之间的夏天开始创业，这在所有人看来就是一份暑期工作。所以即使最后无果而终，也无妨；秋天你和其他大四学生一样回校继续学习；没有人会认为你是失败者，因为你的身份是学生，而你在学生这个角色上并没有失败。"
    },
    {
      "original": "Whereas if you start a startup just one year later, after you graduate, as long as you're not accepted to grad school in the fall the startup reads to everyone as your occupation. You're now a startup founder, so you have to do well at that.For nearly everyone, the opinion of one's peers is the most powerful motivator of all—more powerful even than the nominal goal of most startup founders, getting rich.",
      "translated": "如果你在毕业一年后才开始创业，只要你没有在秋天被研究生院录取，那么创业就被所有人视为你的职业。你现在是一名创业公司的创始人，因此你必须在这个角色上表现出色。对于几乎所有人来说，同龄人的看法是最强大的动力源泉——甚至比大多数创业公司的创始人名义上的目标——发财还要强大。"
    },
    {
      "original": "[1] About a month into each funding cycle we have an event called Prototype Day where each startup presents to the others what they've got so far. You might think they wouldn't need any more motivation.",
      "translated": "[1] 在每个融资周期大约一个月的时候，我们会举办一个叫做原型日的活动，每个初创公司会向其他人展示他们目前的成果。你可能会认为他们已经不需要更多的动力了。"
    },
    {
      "original": "They're working on their cool new idea; they have funding for the immediate future; and they're playing a game with only two outcomes: wealth or failure. You'd think that would be motivation enough. And yet the prospect of a demo pushes most of them into a rush of activity.Even if you start a startup explicitly to get rich, the money you might get seems pretty theoretical most of the time.",
      "translated": "他们正在努力实现他们的酷炫新想法；他们已经为近期的未来获得了资金；他们正在玩一个只有两种结果的游戏：财富或失败。你可能会认为这已经足够成为动力。然而，演示的前景却让大多数人陷入了一阵忙碌。即使你明确地为了致富而创办了一家公司，在大多数时候，你可能得到的钱似乎还是很抽象的。"
    },
    {
      "original": "What drives you day to day is not wanting to look bad.You probably can't change that. Even if you could, I don't think you'd want to; someone who really, truly doesn't care what his peers think of him is probably a psychopath.",
      "translated": "驱使你日常行为的并不是想避免表现得差劲。你可能无法改变这一点。即使你能改变，我想你也不愿意；一个真正完全不在乎同行看法的人很可能是个精神变态。"
    },
    {
      "original": "So the best you can do is consider this force like a wind, and set up your boat accordingly. If you know your peers are going to push you in some direction, choose good peers, and position yourself so they push you in a direction you like.Graduation changes the prevailing winds, and those make a difference.",
      "translated": "所以，你所能做的就是把这种力量当作风来考虑，并相应地调整你的船。如果你知道你的同伴会把你推向某个方向，那就选择好的同伴，并且让自己处于一个他们能把你推向你喜欢的方向的位置。毕业会改变主流的风向，而这些风向的变化是至关重要的。"
    },
    {
      "original": "Starting a startup is so hard that it's a close call even for the ones that succeed. However high a startup may be flying now, it probably has a few leaves stuck in the landing gear from those trees it barely cleared at the end of the runway.",
      "translated": "创业之艰难，即便对于那些成功的企业来说也是一场险胜。无论一家创业公司现在飞得多高，它可能仍然带着从跑道尽头勉强飞过树顶时卡在起落架上的几片叶子。"
    },
    {
      "original": "In such a close game, the smallest increase in the forces against you can be enough to flick you over the edge into failure.When we first started Y Combinator we encouraged people to start startups while they were still in college.",
      "translated": "在如此激烈的竞争中，对方力量的 slightest 增加都足以将你推到失败的边缘。当我们刚开始 Y Combinator 时，我们鼓励人们在大学期间就创业。"
    },
    {
      "original": "That's partly because Y Combinator began as a kind of summer program. We've kept the program shape—all of us having dinner together once a week turns out to be a good idea—but we've decided now that the party line should be to tell people to wait till they graduate.Does that mean you can't start a startup in college?",
      "translated": "部分原因是 Y Combinator 起源于一个暑期项目。我们保留了项目的框架——每周一起吃晚餐被证明是个好主意——但现在我们决定官方立场是建议人们等到毕业后才开始创业。这是否意味着你不能在大学期间创业？"
    },
    {
      "original": "Not at all. Sam Altman, the co-founder of Loopt, had just finished his sophomore year when we funded them, and Loopt is probably the most promising of all the startups we've funded so far. But Sam Altman is a very unusual guy.",
      "translated": "一点也不。萨姆·奥尔特曼，Loopt的联合创始人，在我们资助他们时刚刚完成大二的学业，而Loopt可能是我们迄今为止资助的所有初创公司中最有前景的一家。但萨姆·奥尔特曼是一个非常不寻常的人。"
    },
    {
      "original": "Within about three minutes of meeting him, I remember thinking \"Ah, so this is what Bill Gates must have been like when he was 19.\"If it can work to start a startup during college, why do we tell people not to?",
      "translated": "大约在他自我介绍后的三分钟内，我就在想：“哦，原来比尔·盖茨19岁的时候就是这个样子。”如果在大学期间创办公司是可行的，那我们为什么还要劝阻人们不要这样做呢？"
    },
    {
      "original": "For the same reason that the probably apocryphal violinist, whenever he was asked to judge someone's playing, would always say they didn't have enough talent to make it as a pro. Succeeding as a musician takes determination as well as talent, so this answer works out to be the right advice for everyone.",
      "translated": "出于和那位可能子虚其乌的小提琴家一样，每当被要求评价某人的演奏时，他总会说那人缺乏成为职业演奏家的天赋。作为音乐家的成功不仅需要天赋，还需要决心，因此，这样的回答对每个人来说都是正确的建议。"
    },
    {
      "original": "The ones who are uncertain believe it and give up, and the ones who are sufficiently determined think \"screw that, I'll succeed anyway.\"So our official policy now is only to fund undergrads we can't talk out of it.",
      "translated": "那些不确定的人会相信这一点并放弃，而那些足够坚定的人则会想“管它呢，我无论如何都会成功。”因此，我们现在正式的政策是只资助那些我们无法劝退的本科生。"
    },
    {
      "original": "And frankly, if you're not certain, you should wait. It's not as if all the opportunities to start companies are going to be gone if you don't do it now. Maybe the window will close on some idea you're working on, but that won't be the last idea you'll have.",
      "translated": "坦率地说，如果你不确定，就应该等待。并不是说如果你现在不做，所有创业的机会就会消失。也许你正在研究的某个想法的机会窗口会关闭，但这不会是你最后一个想法。"
    },
    {
      "original": "For every idea that times out, new ones become feasible. Historically the opportunities to start startups have only increased with time.In that case, you might ask, why not wait longer? Why not go work for a while, or go to grad school, and then start a startup?",
      "translated": "对于每一个过时的想法，新的想法变得可行。从历史上看，创业的机会随着时间的推移只增不减。既然如此，你可能会问，为什么不等更长的时间？为什么不去工作一段时间，或者去读研究生，然后再创业呢？"
    },
    {
      "original": "And indeed, that might be a good idea. If I had to pick the sweet spot for startup founders, based on who we're most excited to see applications from, I'd say it's probably the mid-twenties. Why? What advantages does someone in their mid-twenties have over someone who's 21?",
      "translated": "确实，这可能是个好主意。如果我必须为初创企业的创始人挑选一个最佳年龄段，基于我们最期待收到申请的群体，我会说是二十五岁左右。为什么？二十五岁左右的人相比21岁的人有哪些优势？"
    },
    {
      "original": "And why isn't it older? What can 25 year olds do that 32 year olds can't? Those turn out to be questions worth examining.PlusIf you start a startup soon after college, you'll be a young founder by present standards, so you should know what the relative advantages of young founders are.",
      "translated": "那么为什么不是更年长呢？25岁的人能做而32岁的人不能做的事情有哪些？这些其实都是值得探讨的问题。此外，如果你在大学毕业后不久就开始创业，按照现在的标准，你将是一位年轻的创始人，所以你应该了解年轻创始人所具有的相对优势。"
    },
    {
      "original": "They're not what you might think. As a young founder your strengths are: stamina, poverty, rootlessness, colleagues, and ignorance.The importance of stamina shouldn't be surprising. If you've heard anything about startups you've probably heard about the long hours.",
      "translated": "它们可能并非你想象的那样。作为一名年轻的创始人，你的优势在于：体力、贫穷、无根性、同事和无知。体力的重要性不足为奇。如果你对创业公司有所了解，大概听说过它们的长时间工作。"
    },
    {
      "original": "As far as I can tell these are universal. I can't think of any successful startups whose founders worked 9 to 5. And it's particularly necessary for younger founders to work long hours because they're probably not as efficient as they'll be later.Your second advantage, poverty, might not sound like an advantage, but it is a huge one.",
      "translated": "据我所知，这些是普遍适用的。我想不到有任何成功的创业公司创始人是朝九晚五工作的。对于年轻的创始人来说，长时间工作尤为重要，因为他们可能不如以后那么高效。你的第二个优势，贫穷，听起来可能不像是优势，但其实这是一个巨大的优势。"
    },
    {
      "original": "Poverty implies you can live cheaply, and this is critically important for startups. Nearly every startup that fails, fails by running out of money. It's a little misleading to put it this way, because there's usually some other underlying cause.",
      "translated": "贫困意味着你可以廉价生活，这对初创企业至关重要。几乎每一个失败的初创企业都是因为资金耗尽而失败的。这样说有点误导，因为通常还有一些其他的根本原因。"
    },
    {
      "original": "But regardless of the source of your problems, a low burn rate gives you more opportunity to recover from them. And since most startups make all kinds of mistakes at first, room to recover from mistakes is a valuable thing to have.Most startups end up doing something different than they planned.",
      "translated": "但无论问题的来源是什么，较低的消耗率都会给你更多的机会来弥补。由于大多数创业公司在初期都会犯各种错误，因此有空间来弥补错误是一件很有价值的事情。大多数创业公司最终都会做些与最初计划不同的事情。"
    },
    {
      "original": "The way the successful ones find something that works is by trying things that don't. So the worst thing you can do in a startup is to have a rigid, pre-ordained plan and then start spending a lot of money to implement it.",
      "translated": "成功的人找到有效的方法是通过尝试那些不起作用的方法。因此，在创业公司中最糟糕的做法就是有一个僵化、预先设定的计划，然后开始花费大量资金去实施它。"
    },
    {
      "original": "Better to operate cheaply and give your ideas time to evolve.Recent grads can live on practically nothing, and this gives you an edge over older founders, because the main cost in software startups is people.",
      "translated": "最好能低成本运营，让你的想法有时间发展。新毕业的学生几乎可以靠很少的钱生活，这让你比年长的创始人有优势，因为在软件创业公司中，最大的成本是人力。"
    },
    {
      "original": "The guys with kids and mortgages are at a real disadvantage. This is one reason I'd bet on the 25 year old over the 32 year old. The 32 year old probably is a better programmer, but probably also has a much more expensive life.",
      "translated": "有孩子和按揭的家伙们处于真正的劣势。这就是我为什么会押注25岁的人而不是32岁的人。32岁的人可能是一个更好的程序员，但生活成本也高得多。"
    },
    {
      "original": "Whereas a 25 year old has some work experience (more on that later) but can live as cheaply as an undergrad.Robert Morris and I were 29 and 30 respectively when we started Viaweb, but fortunately we still lived like 23 year olds.",
      "translated": "25岁的人已经有了一些工作经验（后面会详细讨论），但他们的生活开销可以和大学生一样低。罗伯特·莫里斯和我开始创建Viaweb时分别是29岁和30岁，但幸运的是，我们的生活方式仍然像23岁的年轻人一样。"
    },
    {
      "original": "We both had roughly zero assets. I would have loved to have a mortgage, since that would have meant I had a house. But in retrospect having nothing turned out to be convenient. I wasn't tied down and I was used to living cheaply.Even more important than living cheaply, though, is thinking cheaply.",
      "translated": "我们俩差不多都没有什么资产。我倒是希望能有房贷，因为那意味着我有房子。但回过头来看，一无所有反而很方便。我不受束缚，也习惯了低成本的生活。然而，比低成本生活更重要的是，要善于精打细算。"
    },
    {
      "original": "One reason the Apple II was so popular was that it was cheap. The computer itself was cheap, and it used cheap, off-the-shelf peripherals like a cassette tape recorder for data storage and a TV as a monitor.",
      "translated": "苹果II之所以如此受欢迎，其中一个原因是它的价格便宜。计算机本身价格低廉，它使用了诸如磁带录音机作为数据存储设备和电视作为显示器这样便宜的现成外设。"
    },
    {
      "original": "And you know why? Because Woz designed this computer for himself, and he couldn't afford anything more.We benefitted from the same phenomenon. Our prices were daringly low for the time. The top level of service was $300 a month, which was an order of magnitude below the norm.",
      "translated": "你知道为什么吗？因为沃兹为了自己设计了这台电脑，他买不起更贵的。我们从中受益匪浅。我们的价格在当时大胆地低。最高级别的服务每月只需300美元，这比行业标准低了一个数量级。"
    },
    {
      "original": "In retrospect this was a smart move, but we didn't do it because we were smart. $300 a month seemed like a lot of money to us. Like Apple, we created something inexpensive, and therefore popular, simply because we were poor.A lot of startups have that form: someone comes along and makes something for a tenth or a hundredth of what it used to cost, and the existing players can't follow because they don't even want to think about a world in which that's possible.",
      "translated": "回顾起来，这是一个明智的举动，但当时我们这么做并不是因为我们有多聪明。300美元一个月对我们来说似乎是一大笔钱。和苹果一样，我们创造了一种既便宜又受欢迎的产品，仅仅因为我们很穷。许多初创公司都有这种模式：有人推出一种成本仅为过去十分之一或百分之一的产品，而现有的玩家甚至不愿去想象这种可能性的世界，因此无法跟进。"
    },
    {
      "original": "Traditional long distance carriers, for example, didn't even want to think about VoIP. (It was coming, all the same.) Being poor helps in this game, because your own personal bias points in the same direction technology evolves in.The advantages of rootlessness are similar to those of poverty.",
      "translated": "传统的长途运营商，例如，甚至不愿意考虑VoIP。（尽管它终将到来。）贫穷在这方面反而有帮助，因为你的个人偏见会与技术的发展方向一致。无根性的好处与贫穷相似。"
    },
    {
      "original": "When you're young you're more mobile—not just because you don't have a house or much stuff, but also because you're less likely to have serious relationships. This turns out to be important, because a lot of startups involve someone moving.The founders of Kiko, for example, are now en route to the Bay Area to start their next startup.",
      "translated": "当你年轻时，你更加容易移动——不仅因为你没有房子或太多的东西，还因为你不大会有严肃的感情关系。这实际上很重要，因为很多创业公司都会涉及到某人的迁移。例如，Kiko 的创始人现在正前往湾区，准备启动他们的下一个创业项目。"
    },
    {
      "original": "It's a better place for what they want to do. And it was easy for them to decide to go, because neither as far as I know has a serious girlfriend, and everything they own will fit in one car—or more precisely, will either fit in one car or is crappy enough that they don't mind leaving it behind.They at least were in Boston.",
      "translated": "这是一个更适合他们追求的地方。而且他们决定搬过去也很容易，因为我所知他们都没有认真的女朋友，而且他们所有的家当都可以装进一辆车——或者更准确地说，要么能装进一辆车，要么就是那些破烂到他们不在乎留下的东西。至少他们还在波士顿。"
    },
    {
      "original": "What if they'd been in Nebraska, like Evan Williams was at their age? Someone wrote recently that the drawback of Y Combinator was that you had to move to participate. It couldn't be any other way. The kind of conversations we have with founders, we have to have in person.",
      "translated": "如果他们像埃文·威廉姆斯在那个年纪时一样在内布拉斯加会怎么样？有人最近写道，Y Combinator 的缺点是你必须搬家才能参与。这不可避免。我们与创始人进行的那种交流，必须面对面进行。"
    },
    {
      "original": "We fund a dozen startups at a time, and we can't be in a dozen places at once. But even if we could somehow magically save people from moving, we wouldn't. We wouldn't be doing founders a favor by letting them stay in Nebraska.",
      "translated": "我们一次资助十几家初创公司，而我们不可能同时出现在十几个地方。但即使我们能神奇地让这些创始人不必搬迁，我们也不会这么做。如果我们让创始人留在内布拉斯加，那实际上是在给他们帮倒忙。"
    },
    {
      "original": "Places that aren't startup hubs are toxic to startups. You can tell that from indirect evidence. You can tell how hard it must be to start a startup in Houston or Chicago or Miami from the microscopically small number, per capita, that succeed there.",
      "translated": "那些不是创业中心的地方对初创企业来说是有毒的。从间接证据中可以看出这一点。从休斯顿、芝加哥或迈阿密这些地方成功创业的公司数量极少（按人均计算）就可以看出，在这些地方创办一家初创企业有多难。"
    },
    {
      "original": "I don't know exactly what's suppressing all the startups in these towns—probably a hundred subtle little things—but something must be. [2]Maybe this will change. Maybe the increasing cheapness of startups will mean they'll be able to survive anywhere, instead of only in the most hospitable environments.",
      "translated": "我不知道究竟是什么在抑制这些小镇上的创业公司——可能是上百种细微的因素——但肯定有某种原因。[2]也许这种情况会有所改变。也许随着创业成本的不断降低，创业公司将会在任何地方生存下来，而不仅仅是在最适宜的环境中。"
    },
    {
      "original": "Maybe 37signals is the pattern for the future. But maybe not. Historically there have always been certain towns that were centers for certain industries, and if you weren't in one of them you were at a disadvantage.",
      "translated": "也许37signals是未来的发展模式。但也许不是。历史上，总有某些城镇是某些行业的中心，如果你不在这些地方，就会处于不利地位。"
    },
    {
      "original": "So my guess is that 37signals is an anomaly. We're looking at a pattern much older than \"Web 2.0\" here.Perhaps the reason more startups per capita happen in the Bay Area than Miami is simply that there are more founder-type people there.",
      "translated": "所以我的猜测是，37signals 是一个特例。我们看到的是一种比“Web 2.0”更古老的模式。也许湾区比迈阿密每 capita 有更多创业公司成立的原因，只是因为那里有更多的创业型人才。"
    },
    {
      "original": "Successful startups are almost never started by one person. Usually they begin with a conversation in which someone mentions that something would be a good idea for a company, and his friend says, \"Yeah, that is a good idea, let's try it.\" If you're missing that second person who says \"let's try it,\" the startup never happens.",
      "translated": "成功的创业公司几乎从来没有是由一个人开始的。通常，它们始于一场对话，其中某个人提到某个点子会是一个不错的公司创意，而他的朋友则说：“是的，这是个好主意，我们来试试吧。”如果你缺少了那个说“我们来试试吧”的人，创业就不会发生。"
    },
    {
      "original": "And that is another area where undergrads have an edge. They're surrounded by people willing to say that. At a good college you're concentrated together with a lot of other ambitious and technically minded people—probably more concentrated than you'll ever be again.",
      "translated": "而这正是本科生占优势的另一个领域。他们周围都是愿意说这样的话的人。在一所好大学里，你会和许多其他有抱负和技术导向的人集中在一起——这种集中程度可能是你以后再也无法达到的。"
    },
    {
      "original": "If your nucleus spits out a neutron, there's a good chance it will hit another nucleus.The number one question people ask us at Y Combinator is: Where can I find a co-founder? That's the biggest problem for someone starting a startup at 30.",
      "translated": "如果你的原子核释放出一个中子，有很大的可能性它会撞击到另一个原子核。人们在 Y Combinator 问我们的头号问题是：在哪里可以找到一个联合创始人？这是一个人在30岁时开始创业面临的最大问题。"
    },
    {
      "original": "When they were in school they knew a lot of good co-founders, but by 30 they've either lost touch with them or these people are tied down by jobs they don't want to leave.Viaweb was an anomaly in this respect too.",
      "translated": "当他们在学校时，认识了很多优秀的联合创始人，但到了30岁，要么已经失去了联系，要么这些人被他们不想离开的工作束缚住了。Viaweb在这方面也是一个特例。"
    },
    {
      "original": "Though we were comparatively old, we weren't tied down by impressive jobs. I was trying to be an artist, which is not very constraining, and Robert, though 29, was still in grad school due to a little interruption in his academic career back in 1988.",
      "translated": "虽然我们年纪相对较大，但并没有被体面的工作所束缚。我尝试成为一名艺术家，这并不是一个很受限制的职业，而罗伯特尽管已经29岁了，但由于1988年学术生涯中的一个小中断，他仍然在读研究生。"
    },
    {
      "original": "So arguably the Worm made Viaweb possible. Otherwise Robert would have been a junior professor at that age, and he wouldn't have had time to work on crazy speculative projects with me.Most of the questions people ask Y Combinator we have some kind of answer for, but not the co-founder question.",
      "translated": "所以可以说蠕虫病毒让Viaweb成为了可能。否则罗伯特在那个年纪只能是一名助理教授，他也就没有时间与我一起从事那些疯狂的投机项目了。人们向Y Combinator提出的大多数问题我们都有某种答案，但唯独对于联合创始人的问题，我们没有答案。"
    },
    {
      "original": "There is no good answer. Co-founders really should be people you already know. And by far the best place to meet them is school. You have a large sample of smart people; you get to compare how they all perform on identical tasks; and everyone's life is pretty fluid.",
      "translated": "没有好的答案。联合创始人真的应该是你已经认识的人。而且，遇见他们的最佳场所无疑是学校。在那里，你可以接触到大量聪明的人；你可以观察他们在相同任务上的表现；而且每个人的生活都相对多变。"
    },
    {
      "original": "A lot of startups grow out of schools for this reason. Google, Yahoo, and Microsoft, among others, were all founded by people who met in school. (In Microsoft's case, it was high school.)Many students feel they should wait and get a little more experience before they start a company.",
      "translated": "许多初创公司因此在学校中诞生。谷歌、雅虎和微软等公司都是由在校园里认识的人创立的。（微软的情况是在高中时期。）许多学生觉得他们应该再等一等，积累一些经验后再创办公司。"
    },
    {
      "original": "All other things being equal, they should. But all other things are not quite as equal as they look. Most students don't realize how rich they are in the scarcest ingredient in startups, co-founders.",
      "translated": "在其他条件相同的情况下，他们应该是这样的。但其他条件并不像看起来那样完全相同。大多数学生没有意识到，他们拥有初创企业中最稀缺的成分——联合创始人。"
    },
    {
      "original": "If you wait too long, you may find that your friends are now involved in some project they don't want to abandon. The better they are, the more likely this is to happen.One way to mitigate this problem might be to actively plan your startup while you're getting those n years of experience.",
      "translated": "如果你等待太久，可能会发现你的朋友们已经投入到某个他们不愿放弃的项目中。他们越优秀，这种情况发生的可能性就越大。缓解这个问题的一个方法可能是在你积累那些年经验的同时，积极地规划你的创业。"
    },
    {
      "original": "Sure, go off and get jobs or go to grad school or whatever, but get together regularly to scheme, so the idea of starting a startup stays alive in everyone's brain. I don't know if this works, but it can't hurt to try.It would be helpful just to realize what an advantage you have as students.",
      "translated": "好的，去工作或读研究生或做其他事情，但要定期聚在一起策划，让创业的想法在每个人的脑海中保持活跃。我不知道这是否有效，但尝试一下总不会有坏处。仅仅意识到作为学生你们拥有的优势也是有帮助的。"
    },
    {
      "original": "Some of your classmates are probably going to be successful startup founders; at a great technical university, that is a near certainty. So which ones? If I were you I'd look for the people who are not just smart, but incurable builders.",
      "translated": "你的某些同学可能会成为成功的创业创始人；在一所优秀的技术大学里，这是几乎可以确定的。那么，会是哪些人呢？如果我是你，我会寻找那些不仅聪明，而且是无可救药的建设者。"
    },
    {
      "original": "Look for the people who keep starting projects, and finish at least some of them. That's what we look for. Above all else, above academic credentials and even the idea you apply with, we look for people who build things.The other place co-founders meet is at work.",
      "translated": "寻找那些不断启动项目并且至少完成其中一些的人。这是我们所寻找的。无论是在学术资历还是你申请时的想法之上，我们最看重的是那些能够建造东西的人。另一个创始人相遇的地方是在工作中。"
    },
    {
      "original": "Fewer do than at school, but there are things you can do to improve the odds. The most important, obviously, is to work somewhere that has a lot of smart, young people. Another is to work for a company located in a startup hub.",
      "translated": "很少有人能做到像在学校时那样，但你可以采取一些措施来提高几率。最重要的是，显然，是在一个有很多聪明的年轻人的地方工作。另一个方法是为位于创业中心的公司工作。"
    },
    {
      "original": "It will be easier to talk a co-worker into quitting with you in a place where startups are happening all around you.You might also want to look at the employment agreement you sign when you get hired.",
      "translated": "在一个到处都在兴起创业公司的地方，说服同事和你一起辞职会更容易。你可能还想看看当你被雇佣时签署的雇佣协议。"
    },
    {
      "original": "Most will say that any ideas you think of while you're employed by the company belong to them. In practice it's hard for anyone to prove what ideas you had when, so the line gets drawn at code. If you're going to start a startup, don't write any of the code while you're still employed.",
      "translated": "大多数人都会说，你在公司工作期间想到的任何想法都属于公司。实际上，要证明你何时有了哪些想法是很困难的，所以界限通常划在代码上。如果你打算创办一家初创公司，不要在仍然受雇于公司时编写任何代码。"
    },
    {
      "original": "Or at least discard any code you wrote while still employed and start over. It's not so much that your employer will find out and sue you. It won't come to that; investors or acquirers or (if you're so lucky) underwriters will nail you first.",
      "translated": "或者至少丢弃你在职期间编写的任何代码，重新开始。这倒不是说你的雇主会发现并起诉你。事情不会发展到那个地步；投资者、收购方或（如果你够幸运的话）承销商首先会找上门来。"
    },
    {
      "original": "Between t = 0 and when you buy that yacht, someone is going to ask if any of your code legally belongs to anyone else, and you need to be able to say no. [3]The most overreaching employee agreement I've seen so far is Amazon's.",
      "translated": "从 t = 0 到你买那艘游艇之前，会有人问你的代码是否有任何部分在法律上属于其他人，你需要能够回答没有。[3]到目前为止，我见过的最过分的员工协议是亚马逊的。"
    },
    {
      "original": "In addition to the usual clauses about owning your ideas, you also can't be a founder of a startup that has another founder who worked at Amazon—even if you didn't know them or even work there at the same time.",
      "translated": "除了关于拥有你想法的常规条款外，你还不能成为一家初创企业的创始人，如果该企业的另一位创始人曾在亚马逊工作过——即使你并不认识他们，或者甚至没有在同一时间在那里工作过。"
    },
    {
      "original": "I suspect they'd have a hard time enforcing this, but it's a bad sign they even try. There are plenty of other places to work; you may as well choose one that keeps more of your options open.Speaking of cool places to work, there is of course Google.",
      "translated": "我怀疑他们很难执行这一点，但即使他们尝试这么做也是一个不好的信号。还有很多其他地方可以工作；你不妨选择一个能让你保留更多选择权的地方。说到酷炫的工作地点，当然还有谷歌。"
    },
    {
      "original": "But I notice something slightly frightening about Google: zero startups come out of there. In that respect it's a black hole. People seem to like working at Google too much to leave. So if you hope to start a startup one day, the evidence so far suggests you shouldn't work there.I realize this seems odd advice.",
      "translated": "但我注意到谷歌有一个略显可怕的特点：没有任何初创企业从中诞生。在这方面，它就像一个黑洞。人们似乎太喜欢在谷歌工作而不愿离开。所以，如果你希望将来能创办一家初创企业，目前的证据表明你不应该在那里工作。我知道这听起来像是奇怪的建议。"
    },
    {
      "original": "If they make your life so good that you don't want to leave, why not work there? Because, in effect, you're probably getting a local maximum. You need a certain activation energy to start a startup. So an employer who's fairly pleasant to work for can lull you into staying indefinitely, even if it would be a net win for you to leave.",
      "translated": "如果他们让你的生活如此美好以至于你不想离开，为什么不留在那里工作呢？因为，实际上，你可能已经陷入了一个局部最优。开始创业需要一定的启动能量。所以，一个工作起来还算愉快的雇主可能会让你无限期地留下来，即使离开对你来说总体上是有利的。"
    },
    {
      "original": "[4]The best place to work, if you want to start a startup, is probably a startup. In addition to being the right sort of experience, one way or another it will be over quickly. You'll either end up rich, in which case problem solved, or the startup will get bought, in which case it it will start to suck to work there and it will be easy to leave, or most likely, the thing will blow up and you'll be free again.Your final advantage, ignorance, may not sound very useful.",
      "translated": "如果你想创业，最好的工作地点可能就是一家创业公司。除了能获得合适的经历外，无论如何，这段经历都会很快结束。你要么变得富有，这样问题就解决了；要么公司被收购，这样工作环境会变得糟糕，离开也会变得容易；或者最有可能的是，公司会失败，你又重新获得了自由。你最后的优势，无知，听起来可能不太有用。"
    },
    {
      "original": "I deliberately used a controversial word for it; you might equally call it innocence. But it seems to be a powerful force. My Y Combinator co-founder Jessica Livingston is just about to publish a book of interviews with startup founders, and I noticed a remarkable pattern in them.",
      "translated": "我故意使用了一个有争议的词来形容它；你同样可以称之为天真。但似乎它是一种强大的力量。我的Y Combinator联合创始人Jessica Livingston即将出版一本采访初创企业创始人的书，我在这些采访中发现了一个显著的模式。"
    },
    {
      "original": "One after another said that if they'd known how hard it would be, they would have been too intimidated to start.Ignorance can be useful when it's a counterweight to other forms of stupidity. It's useful in starting startups because you're capable of more than you realize.",
      "translated": "一个接一个地说，如果他们早知道这会如此艰难，他们就会因为害怕而不敢开始。无知在某些情况下可以作为其他形式愚蠢的反制力量。在创业时，这种无知是有用的，因为它让你能够做到超出你自身认知的更多。"
    },
    {
      "original": "Starting startups is harder than you expect, but you're also capable of more than you expect, so they balance out.Most people look at a company like Apple and think, how could I ever make such a thing?",
      "translated": "创办初创公司比你想象的要难，但你也比你想象的要更有能力，因此这两者是相抵的。大多数人看到像苹果这样的公司时，会想，我怎么可能做出这样的东西？"
    },
    {
      "original": "Apple is an institution, and I'm just a person. But every institution was at one point just a handful of people in a room deciding to start something. Institutions are made up, and made up by people no different from you.I'm not saying everyone could start a startup.",
      "translated": "苹果是一家机构，而我只是一个普通人。但每个机构最初都只是一群人在一个房间里决定开始做点什么。机构是人创造的，而这些人和你没有什么不同。我不是说每个人都能创办一家创业公司。"
    },
    {
      "original": "I'm sure most people couldn't; I don't know much about the population at large. When you get to groups I know well, like hackers, I can say more precisely. At the top schools, I'd guess as many as a quarter of the CS majors could make it as startup founders if they wanted.That \"if they wanted\" is an important qualification—so important that it's almost cheating to append it like that—because once you get over a certain threshold of intelligence, which most CS majors at top schools are past, the deciding factor in whether you succeed as a founder is how much you want to.",
      "translated": "我相信大多数人都做不到；我对普通人群了解不多。对于我熟悉的群体，比如黑客，我可以更准确地说。在顶尖学校里，我估计有四分之一的计算机科学专业学生如果愿意的话，可以成为创业公司的创始人。这个“如果愿意”是一个重要的前提——几乎可以说，这样补充是有些作弊的——因为一旦智力超过某个门槛，而大多数顶尖学校的计算机科学专业的学生都超过了这个门槛，决定你是否能成功的关键因素就是你有多想成为创始人。"
    },
    {
      "original": "You don't have to be that smart. If you're not a genius, just start a startup in some unsexy field where you'll have less competition, like software for human resources departments. I picked that example at random, but I feel safe in predicting that whatever they have now, it wouldn't take genius to do better.",
      "translated": "你不必那么聪明。如果你不是天才，那就从一些不太吸引人的领域开始创业吧，比如人力资源部门的软件。我随便举了这个例子，但我敢肯定，不管他们现在用的是什么，做到更好的并不需要天才。"
    },
    {
      "original": "There are a lot of people out there working on boring stuff who are desperately in need of better software, so however short you think you fall of Larry and Sergey, you can ratchet down the coolness of the idea far enough to compensate.As well as preventing you from being intimidated, ignorance can sometimes help you discover new ideas.",
      "translated": "外面有很多人在做着枯燥的工作，他们迫切需要更好的软件，所以无论你觉得你与拉里和谢尔盖有多大差距，你都可以把想法的酷炫程度降低到足以弥补这一点。除了防止你感到 intimidat 之外，无知有时还能帮助你发现新的想法。 \n\n注：此处“感到 intimidat”应为“感到 intimidat**ed**”，即“感到 intimidat**ed**”翻译为“感到 intimidat**ed**”。正确的翻译应为“除了防止你感到 intimidat**ed**，无知有时还能帮助你发现新的想法。”"
    },
    {
      "original": "Steve Wozniak put this very strongly: All the best things that I did at Apple came from (a) not having money and (b) not having done it before, ever. Every single thing that we came out with that was really great, I'd never once done that thing in my life.",
      "translated": "史蒂夫·沃兹尼亚克曾强烈地表达过：我在苹果做的所有最好的事情都源于（a）没有钱和（b）从未做过这些事情。我们推出的所有真正伟大的东西，我在此之前从未做过一次。"
    },
    {
      "original": "When you know nothing, you have to reinvent stuff for yourself, and if you're smart your reinventions may be better than what preceded them. This is especially true in fields where the rules change. All our ideas about software were developed in a time when processors were slow, and memories and disks were tiny.",
      "translated": "当你一无所知时，你不得不自己重新发明东西，如果你足够聪明，你的发明可能会比前人的好。这在规则不断变化的领域尤其如此。我们关于软件的所有想法都是在处理器速度慢、内存和磁盘容量很小的时代发展起来的。"
    },
    {
      "original": "Who knows what obsolete assumptions are embedded in the conventional wisdom? And the way these assumptions are going to get fixed is not by explicitly deallocating them, but by something more akin to garbage collection.",
      "translated": "谁知道传统观念中嵌入了哪些过时的假设？而修正这些假设的方式并非通过明确的取消分配，而更像是垃圾回收机制。"
    },
    {
      "original": "Someone ignorant but smart will come along and reinvent everything, and in the process simply fail to reproduce certain existing ideas.MinusSo much for the advantages of young founders. What about the disadvantages?",
      "translated": "一个无知但聪明的人会出现，重新发明一切，在这个过程中简单地未能重现某些现有的想法。所以，年轻创始人的优势也就如此了。那么，缺点呢？"
    },
    {
      "original": "I'm going to start with what goes wrong and try to trace it back to the root causes.What goes wrong with young founders is that they build stuff that looks like class projects. It was only recently that we figured this out ourselves.",
      "translated": "我将从出错的地方开始，尝试追溯到根本原因。年轻创始人出错的地方在于，他们创建的东西看起来像课堂项目。我们也是直到最近才意识到这一点。"
    },
    {
      "original": "We noticed a lot of similarities between the startups that seemed to be falling behind, but we couldn't figure out how to put it into words. Then finally we realized what it was: they were building class projects.But what does that really mean?",
      "translated": "我们注意到，那些似乎落后的新创公司之间有很多相似之处，但我们一直无法准确地表达出来。后来，我们终于意识到问题所在：他们正在构建的是课堂项目。但这到底意味着什么呢？"
    },
    {
      "original": "What's wrong with class projects? What's the difference between a class project and a real startup? If we could answer that question it would be useful not just to would-be startup founders but to students in general, because we'd be a long way toward explaining the mystery of the so-called real world.There seem to be two big things missing in class projects: (1) an iterative definition of a real problem and (2) intensity.The first is probably unavoidable.",
      "translated": "课堂项目有什么问题？课堂项目与真正的创业公司有何不同？如果我们能回答这个问题，不仅对潜在的创业者有帮助，对广大学生也有益，因为这将有助于我们解释所谓现实世界的奥秘。课堂项目似乎缺少两个主要方面：（1）对真实问题的迭代定义和（2）强度。第一个问题可能是不可避免的。"
    },
    {
      "original": "Class projects will inevitably solve fake problems. For one thing, real problems are rare and valuable. If a professor wanted to have students solve real problems, he'd face the same paradox as someone trying to give an example of whatever \"paradigm\" might succeed the Standard Model of physics.",
      "translated": "课堂项目不可避免地会解决假问题。一方面，真实的问题既稀少又珍贵。如果教授希望学生解决真实的问题，他将面临与试图提供可能接替物理学标准模型的“范式”示例的人相同的悖论。"
    },
    {
      "original": "There may well be something that does, but if you could think of an example you'd be entitled to the Nobel Prize. Similarly, good new problems are not to be had for the asking.In technology the difficulty is compounded by the fact that real startups tend to discover the problem they're solving by a process of evolution.",
      "translated": "可能确实存在这样的东西，但如果你能想出一个例子，你就有资格获得诺贝尔奖。同样，好的新问题不是随随便便就能得到的。在技术领域，这种困难还因为真正的初创公司往往是通过一个进化的过程来发现他们要解决的问题而变得更加复杂。"
    },
    {
      "original": "Someone has an idea for something; they build it; and in doing so (and probably only by doing so) they realize the problem they should be solving is another one. Even if the professor let you change your project description on the fly, there isn't time enough to do that in a college class, or a market to supply evolutionary pressures.",
      "translated": "有人有了一个想法，他们把它做出来；在这个过程中（可能也正因为这个过程），他们意识到应该解决的问题其实是另一个。即使教授允许你随时更改项目描述，但在大学课程中没有足够的时间来做这样的改变，也没有市场能提供演化所需的压力。"
    },
    {
      "original": "So class projects are mostly about implementation, which is the least of your problems in a startup.It's not just that in a startup you work on the idea as well as implementation. The very implementation is different.",
      "translated": "所以，课堂项目主要集中在实现上，而这在创业公司中恰恰是最小的问题。不仅仅是创业公司需要同时关注想法和实现，就连实现本身也大不相同。"
    },
    {
      "original": "Its main purpose is to refine the idea. Often the only value of most of the stuff you build in the first six months is that it proves your initial idea was mistaken. And that's extremely valuable. If you're free of a misconception that everyone else still shares, you're in a powerful position.",
      "translated": "它的主要目的是完善这个想法。通常，你最初六个月构建的大部分东西的唯一价值在于，它证明了你最初的构想是错误的。而这是极其宝贵的。如果你摆脱了其他人仍然抱有的误解，你就处于一个强有力的位置。"
    },
    {
      "original": "But you're not thinking that way about a class project. Proving your initial plan was mistaken would just get you a bad grade. Instead of building stuff to throw away, you tend to want every line of code to go toward that final goal of showing you did a lot of work.That leads to our second difference: the way class projects are measured.",
      "translated": "但你在做课程项目时不会这样想。证明最初的计划是错误的只会让你得到一个不好的成绩。与其创建一些最终要丢弃的东西，你更希望每一行代码都能朝着最终目标展示你做了大量工作这一方向努力。这就引出了我们第二个不同点：课程项目的评估方式。"
    },
    {
      "original": "Professors will tend to judge you by the distance between the starting point and where you are now. If someone has achieved a lot, they should get a good grade. But customers will judge you from the other direction: the distance remaining between where you are now and the features they need.",
      "translated": "教授们往往会根据你从起点到现在的进步来评价你。如果某人取得了很大的成就，就应该得到一个好成绩。但客户则会从另一个角度来评价你：从你现在的位置到他们所需功能之间的差距。"
    },
    {
      "original": "The market doesn't give a shit how hard you worked. Users just want your software to do what they need, and you get a zero otherwise. That is one of the most distinctive differences between school and the real world: there is no reward for putting in a good effort.",
      "translated": "市场不会在乎你有多努力。用户只希望你的软件能满足他们的需求，否则你就是零分。这是学校与现实世界之间最显著的区别之一：在现实世界中，光有努力并不会得到奖励。"
    },
    {
      "original": "In fact, the whole concept of a \"good effort\" is a fake idea adults invented to encourage kids. It is not found in nature.Such lies seem to be helpful to kids. But unfortunately when you graduate they don't give you a list of all the lies they told you during your education.",
      "translated": "事实上，“努力就有好结果”这个概念是成年人为了鼓励孩子而发明的假象。在自然界中并不存在。这样的谎言似乎对孩子们有帮助。但不幸的是，当你毕业时，他们并不会给你一份清单，列出你在受教育过程中他们对你说的所有谎言。"
    },
    {
      "original": "You have to get them beaten out of you by contact with the real world. And this is why so many jobs want work experience. I couldn't understand that when I was in college. I knew how to program. In fact, I could tell I knew how to program better than most people doing it for a living.",
      "translated": "你必须通过与现实世界的接触来磨砺这些技能。这也就是为什么那么多工作需要工作经验的原因。我在大学时不明白这一点。我知道如何编程。事实上，我能感觉到我的编程水平比大多数以此为生的人还要高。"
    },
    {
      "original": "So what was this mysterious \"work experience\" and why did I need it?Now I know what it is, and part of the confusion is grammatical. Describing it as \"work experience\" implies it's like experience operating a certain kind of machine, or using a certain programming language.",
      "translated": "那么，这神秘的“工作经验”究竟是什么，为什么我需要它？现在我明白了，其中部分的困惑源于语法。将其描述为“工作经验”暗示它像是操作某种机器或使用某种编程语言的经验。"
    },
    {
      "original": "But really what work experience refers to is not some specific expertise, but the elimination of certain habits left over from childhood.One of the defining qualities of kids is that they flake. When you're a kid and you face some hard test, you can cry and say \"I can't\" and they won't make you do it.",
      "translated": "但所谓的工作经验真正指的是，并不是某种特定的专业技能，而是消除某些从童年遗留下来的习惯。孩子们的一个显著特点是，他们容易半途而废。当你还是个孩子，面对一些困难的考验时，你可以哭着说“我做不到”，而他们也不会强迫你去做。"
    },
    {
      "original": "Of course, no one can make you do anything in the grownup world either. What they do instead is fire you. And when motivated by that you find you can do a lot more than you realized. So one of the things employers expect from someone with \"work experience\" is the elimination of the flake reflex—the ability to get things done, with no excuses.The other thing you get from work experience is an understanding of what work is, and in particular, how intrinsically horrible it is.",
      "translated": "当然，在成人的世界里，也没有人能强迫你做任何事情。他们所能做的就是解雇你。而当被这种动机驱使时，你会发现你能做的比你想象的要多得多。因此，雇主从有“工作经验”的人那里期望得到的一件事就是消除了敷衍了事的倾向——即能够在没有任何借口的情况下完成任务的能力。从工作经验中得到的另一件事是对工作的本质的理解，特别是它的内在糟糕之处。"
    },
    {
      "original": "Fundamentally the equation is a brutal one: you have to spend most of your waking hours doing stuff someone else wants, or starve. There are a few places where the work is so interesting that this is concealed, because what other people want done happens to coincide with what you want to work on.",
      "translated": "从根本上说，这个等式是残酷的：你必须将大部分清醒时间用来做别人想让你做的事情，否则就会挨饿。有些地方的工作非常有趣，以至于这种残酷性被掩盖了，因为别人希望你完成的事情恰好是你自己也想做的。"
    },
    {
      "original": "But you only have to imagine what would happen if they diverged to see the underlying reality.It's not so much that adults lie to kids about this as never explain it. They never explain what the deal is with money.",
      "translated": "但你只需要想象一下如果它们偏离了会怎样，就能看到潜在的现实。这并不是说成年人对孩子撒谎，而是他们从未解释过。他们从未解释过金钱的真正含义。"
    },
    {
      "original": "You know from an early age that you'll have some sort of job, because everyone asks what you're going to \"be\" when you grow up. What they don't tell you is that as a kid you're sitting on the shoulders of someone else who's treading water, and that starting working means you get thrown into the water on your own, and have to start treading water yourself or sink.",
      "translated": "你从小就知道自己将来会有某种工作，因为每个人都会问你长大后想“成为”什么。但他们没有告诉你的是，小时候你是站在另一个人的肩膀上，而那个人正在水中挣扎。开始工作意味着你将被独自扔进水中，必须自己开始挣扎，否则就会沉下去。"
    },
    {
      "original": "\"Being\" something is incidental; the immediate problem is not to drown.The relationship between work and money tends to dawn on you only gradually. At least it did for me. One's first thought tends to be simply \"This sucks.",
      "translated": "“成为”某样东西是偶然的；眼前的问题是不要被淹没。工作与金钱之间的关系往往是逐渐显现的。至少对我来说是这样。最初的想法往往是简单地觉得“这真糟糕。”"
    },
    {
      "original": "I'm in debt. Plus I have to get up on monday and go to work.\" Gradually you realize that these two things are as tightly connected as only a market can make them.So the most important advantage 24 year old founders have over 20 year old founders is that they know what they're trying to avoid.",
      "translated": "我负债了。而且我周一还得起床去上班。” 你逐渐意识到，这两件事就像市场所塑造的那样紧密相连。所以，24岁的创始人比20岁的创始人最大的优势在于，他们知道自己想要避免什么。"
    },
    {
      "original": "To the average undergrad the idea of getting rich translates into buying Ferraris, or being admired. To someone who has learned from experience about the relationship between money and work, it translates to something way more important: it means you get to opt out of the brutal equation that governs the lives of 99.9% of people.",
      "translated": "对于普通本科生来说，发财的想法意味着买法拉利或受到羡慕。而对于那些从经验中了解金钱与工作关系的人来说，这意味着更重要的事情：你可以选择退出支配99.9%人们生活的残酷等式。"
    },
    {
      "original": "Getting rich means you can stop treading water.Someone who gets this will work much harder at making a startup succeed—with the proverbial energy of a drowning man, in fact. But understanding the relationship between money and work also changes the way you work.",
      "translated": "变得富有意味着你可以停止挣扎。理解这一点的人会更加努力地让初创企业成功——事实上，他们会以溺水者般的拼命劲头工作。但理解金钱与工作的关系也会改变你的工作方式。"
    },
    {
      "original": "You don't get money just for working, but for doing things other people want. Someone who's figured that out will automatically focus more on the user. And that cures the other half of the class-project syndrome.",
      "translated": "你获得报酬不仅仅是因为工作，而是因为你做了别人想要的事情。明白这一点的人会自然而然地更多关注用户。而这也能治愈课堂项目综合症的另一半。"
    },
    {
      "original": "After you've been working for a while, you yourself tend to measure what you've done the same way the market does.Of course, you don't have to spend years working to learn this stuff. If you're sufficiently perceptive you can grasp these things while you're still in school.",
      "translated": "工作一段时间后，你往往会像市场那样衡量自己的成就。当然，你不必非要工作多年才能学到这些。如果你足够敏锐，即使还在上学时也能理解这些道理。"
    },
    {
      "original": "Sam Altman did. He must have, because Loopt is no class project. And as his example suggests, this can be valuable knowledge. At a minimum, if you get this stuff, you already have most of what you gain from the \"work experience\" employers consider so desirable.",
      "translated": "萨姆·阿尔特曼确实做到了。他肯定做到了，因为Loopt绝不是一个课堂项目。正如他的例子所表明的，这种知识可以是非常有价值的。至少，如果你掌握了这些，你就已经拥有了雇主所认为非常可取的“工作经验”的大部分。"
    },
    {
      "original": "But of course if you really get it, you can use this information in a way that's more valuable to you than that.NowSo suppose you think you might start a startup at some point, either when you graduate or a few years after.",
      "translated": "但当然，如果你真的理解了，你可以以对你更有价值的方式使用这些信息。假设你认为自己可能会在毕业时或几年后创办一家初创公司。"
    },
    {
      "original": "What should you do now? For both jobs and grad school, there are ways to prepare while you're in college. If you want to get a job when you graduate, you should get summer jobs at places you'd like to work.",
      "translated": "你现在应该做什么？对于找工作和读研究生，你都可以在大学期间进行准备。如果你想在毕业后找到工作，你应该在暑假期间到你希望工作的单位实习。"
    },
    {
      "original": "If you want to go to grad school, it will help to work on research projects as an undergrad. What's the equivalent for startups? How do you keep your options maximally open?One thing you can do while you're still in school is to learn how startups work.",
      "translated": "如果你想读研究生，作为本科生参与研究项目会有所帮助。那么，对于创业公司来说，等价的做法是什么呢？你如何最大限度地保持选择的开放性？你可以在还在上学的时候做的一件事就是学习创业公司是如何运作的。"
    },
    {
      "original": "Unfortunately that's not easy. Few if any colleges have classes about startups. There may be business school classes on entrepreneurship, as they call it over there, but these are likely to be a waste of time.",
      "translated": "不幸的是，这并不容易。几乎没有哪所大学开设关于创业的课程。虽然商学院可能会有一些关于他们所说的“创业精神”的课程，但这些课程很可能浪费时间。"
    },
    {
      "original": "Business schools like to talk about startups, but philosophically they're at the opposite end of the spectrum. Most books on startups also seem to be useless. I've looked at a few and none get it right.",
      "translated": "商学院喜欢谈论创业公司，但哲学上它们却处于光谱的另一端。大多数关于创业的书籍似乎也毫无用处。我看过几本，但没有一本书能够准确把握创业的真谛。"
    },
    {
      "original": "Books in most fields are written by people who know the subject from experience, but for startups there's a unique problem: by definition the founders of successful startups don't need to write books to make money.",
      "translated": "大多数领域的书籍都是由有经验的人撰写的，但对于初创公司来说，存在一个独特的问题：根据定义，成功初创公司的创始人不需要通过写书来赚钱。"
    },
    {
      "original": "As a result most books on the subject end up being written by people who don't understand it.So I'd be skeptical of classes and books. The way to learn about startups is by watching them in action, preferably by working at one.",
      "translated": "因此，大多数关于这个主题的书最终都是由那些并不理解它的人写的。所以，我对这些课程和书籍持怀疑态度。了解创业公司的最佳方式是观察它们的实际运作，最好是能够在一家创业公司工作。"
    },
    {
      "original": "How do you do that as an undergrad? Probably by sneaking in through the back door. Just hang around a lot and gradually start doing things for them. Most startups are (or should be) very cautious about hiring.",
      "translated": "你作为一名本科生，是怎么做到的呢？可能是通过后门潜入的。就是多在那儿晃晃，慢慢开始为他们做事。大多数初创公司（或者应该说应该是）在招聘时都非常谨慎。"
    },
    {
      "original": "Every hire increases the burn rate, and bad hires early on are hard to recover from. However, startups usually have a fairly informal atmosphere, and there's always a lot that needs to be done. If you just start doing stuff for them, many will be too busy to shoo you away.",
      "translated": "每次招聘都会增加烧钱率，而早期的错误招聘很难弥补。然而，创业公司通常氛围较为随意，而且总有大量工作需要完成。如果你直接开始为他们做事，许多公司会因为太忙而不会赶你走。"
    },
    {
      "original": "You can thus gradually work your way into their confidence, and maybe turn it into an official job later, or not, whichever you prefer. This won't work for all startups, but it would work for most I've known.Number two, make the most of the great advantage of school: the wealth of co-founders.",
      "translated": "因此，你可以逐渐赢得他们的信任，也许日后可以转为正式工作，也可以不转，随你的意愿。这方法并非适用于所有初创公司，但我所了解的大多数公司都适用。第二点，充分利用学校的一大优势：丰富的联合创始人资源。"
    },
    {
      "original": "Look at the people around you and ask yourself which you'd like to work with. When you apply that test, you may find you get surprising results. You may find you'd prefer the quiet guy you've mostly ignored to someone who seems impressive but has an attitude to match.",
      "translated": "看看你周围的人，问问自己你愿意与谁合作。当你应用这个标准时，你可能会发现结果令人惊讶。你可能会发现自己更愿意与那个你大多忽略的安静的人合作，而不是那个看似 impressive 但态度高傲的人。"
    },
    {
      "original": "I'm not suggesting you suck up to people you don't really like because you think one day they'll be successful. Exactly the opposite, in fact: you should only start a startup with someone you like, because a startup will put your friendship through a stress test.",
      "translated": "我并不是建议你去讨好那些你并不真正喜欢的人，因为你认为他们将来会成功。恰恰相反：你应该只和你喜欢的人一起创业，因为创业会像压力测试一样考验你们的友谊。"
    },
    {
      "original": "I'm just saying you should think about who you really admire and hang out with them, instead of whoever circumstances throw you together with.Another thing you can do is learn skills that will be useful to you in a startup.",
      "translated": "我只是说你应该考虑一下你真正敬佩的人，并且和他们多相处，而不是和那些因为环境而凑在一起的人。另外，你还可以学习一些在创业公司中会有用的技能。"
    },
    {
      "original": "These may be different from the skills you'd learn to get a job. For example, thinking about getting a job will make you want to learn programming languages you think employers want, like Java and C++.",
      "translated": "这些可能与你为了找工作而学习的技能不同。例如，考虑到找工作，你会想要学习你认为雇主需要的编程语言，如Java和C++。"
    },
    {
      "original": "Whereas if you start a startup, you get to pick the language, so you have to think about which will actually let you get the most done. If you use that test you might end up learning Ruby or Python instead.",
      "translated": "如果你创业的话，你可以选择使用哪种编程语言，因此你需要考虑哪种语言能让你完成最多的工作。如果以这个标准来选择，你可能会去学习 Ruby 或 Python。"
    },
    {
      "original": "But the most important skill for a startup founder isn't a programming technique. It's a knack for understanding users and figuring out how to give them what they want. I know I repeat this, but that's because it's so important.",
      "translated": "但对初创公司创始人来说，最重要的技能并不是编程技巧。而是能够理解用户并找出如何满足他们需求的天赋。我知道我一再强调这一点，但那是因为它非常重要。"
    },
    {
      "original": "And it's a skill you can learn, though perhaps habit might be a better word. Get into the habit of thinking of software as having users. What do those users want? What would make them say wow?This is particularly valuable for undergrads, because the concept of users is missing from most college programming classes.",
      "translated": "这是一项你可以学习的技能，或许说养成习惯更为恰当。养成将软件视为有用户的习惯。这些用户想要什么？什么能让他们发出惊叹？这对比对本科生尤其有价值，因为大多数大学的编程课程中缺少对用户概念的重视。"
    },
    {
      "original": "The way you get taught programming in college would be like teaching writing as grammar, without mentioning that its purpose is to communicate something to an audience. Fortunately an audience for software is now only an http request away.",
      "translated": "你在大学里学习编程的方式，就像教写作时只讲语法，而不提及写作的目的是向读者传达信息。幸运的是，现在软件的受众仅距离一个HTTP请求之遥。"
    },
    {
      "original": "So in addition to the programming you do for your classes, why not build some kind of website people will find useful? At the very least it will teach you how to write software with users. In the best case, it might not just be preparation for a startup, but the startup itself, like it was for Yahoo and Google.Notes[1] Even the desire to protect one's children seems weaker, judging from things people have historically done to their kids rather than risk their community's disapproval.",
      "translated": "因此，除了为课程编写程序之外，为什么不创建一个人们会发现有用的网站呢？至少，这将教会你如何为用户编写软件。在最好的情况下，这不仅可能是为创业做准备，甚至可能本身就是创业项目，就像雅虎和谷歌那样。注[1] 甚至从历史上人们为了不冒触怒社区的风险而对子女所做的事情来看，保护子女的愿望似乎也更弱。"
    },
    {
      "original": "(I assume we still do things that will be regarded in the future as barbaric, but historical abuses are easier for us to see.)[2] Worrying that Y Combinator makes founders move for 3 months also suggests one underestimates how hard it is to start a startup.",
      "translated": "（我假设我们仍然在做一些将来会被视为野蛮的事情，但历史上的暴行对我们来说更容易看清。）[2] 担心 Y Combinator 让创始人搬迁三个月，也表明了人们低估了创业的难度。"
    },
    {
      "original": "You're going to have to put up with much greater inconveniences than that.[3] Most employee agreements say that any idea relating to the company's present or potential future business belongs to them.",
      "translated": "你将不得不忍受更大的不便。[3] 大多数员工协议规定，任何与公司当前或潜在未来业务相关的想法都属于公司。"
    },
    {
      "original": "Often as not the second clause could include any possible startup, and anyone doing due diligence for an investor or acquirer will assume the worst.To be safe either (a) don't use code written while you were still employed in your previous job, or (b) get your employer to renounce, in writing, any claim to the code you write for your side project.",
      "translated": "通常情况下，第二条款可能包括任何可能的初创公司，任何为投资者或收购方进行尽职调查的人都会假设最坏的情况。为了安全起见，要么（a）不要使用你在前任雇主工作期间编写过的代码，或者（b）让你的雇主书面放弃对你为副业编写代码的任何权利主张。"
    },
    {
      "original": "Many will consent to (b) rather than lose a prized employee. The downside is that you'll have to tell them exactly what your project does.[4] Geshke and Warnock only founded Adobe because Xerox ignored them.",
      "translated": "许多人为了不失去一位重要员工会选择同意（b）。缺点是你必须告诉他们你的项目具体是做什么的。[4] 盖施克和沃诺克只有在施乐公司忽视他们的情况下才创立了Adobe。"
    },
    {
      "original": "If Xerox had used what they built, they would probably never have left PARC.Thanks to Jessica Livingston and Robert Morris for reading drafts of this, and to Jeff Arnold and the SIPB for inviting me to speak.",
      "translated": "如果施乐公司使用了他们所开发的技术，他们可能永远不会离开PARC。感谢杰西卡·利文斯顿和罗伯特·莫里斯阅读了本文的草稿，感谢杰夫·阿诺德和SIPB邀请我前来演讲。"
    },
    {
      "original": "Comment on this essay.Chinese TranslationArabic Translation",
      "translated": "请对这篇作文进行评论。"
    }
  ],
  "translation_completed": "2025-07-29T11:31:58.460205",
  "translation_stats": {
    "total_paragraphs": 131,
    "success_count": 131,
    "success_rate": "100.0%"
  }
}